var ComPort;
var CurrentUser;
var community_scripts = [];
var LastUsername = "";
var SharedData = null;
var visible = true;
var currentRun = 0;
var last_check = '';
var folders = [];
var input_vars = [];
var block_update = false;
var live_recording = false;
var riku_variables = 0;
var total_runs = 0;
var UserTag = "._7UhW9";
var user_email = "";
var StartStory = false;
var riku = [];
var gpt = [];
var cloudTasks = 0;
var schedule = [];
var chatHistory = [];
var prompt_chain = "";
var opened_login = false;
var last_result = "user";
var no_code_enabled = false;
var loginError = false;
var currentDelay = 1;
var last_created_sheet_url = "";
var last_partial = "";
window.task_data = {};
var last_created_sheet_name = "Sheet1";
var user_plan = "free";
var bootcampS2 = "";
var added_save = false;
var last_code = "";
var tab_id = 0;
var chat_log = [];
var project_atlas_output = [];
const websites = [{site:"ChatGPT website generator", description:"Automate generating entire websites, apps, and even games.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs"},{site:"ChatGPT content generator", description:"Automate generating content for social media.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs"},{site:"apollo.io", description:"Search, engage and convert over 250 million contacts at over 60 million companies with Apollo's sales intelligence and engagement platform. ", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs"},{site:"zillow.com", description:"Zillow Group, Inc., or simply Zillow, is an American tech real-estate marketplace company that was founded in 2006.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs"},{site:"sheets.google.com", description:"Google Sheets is a spreadsheet program included as part of the free, web-based Google Docs Editors suite offered by Google.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs"},{site:"maps.google.com", description:"Google maps is an online mapping tool.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs"}, { site: "Google.com", description: "Google is the world's most popular search engine, providing users with access to an endless array of information, images, and videos on the web.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "YouTube.com", description: "YouTube is the world's largest video sharing platform, allowing users to upload and watch videos on a variety of topics.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Facebook.com", description: "Facebook is the world's largest social networking site, connecting people from all over the globe and offering a range of social functions, including messaging, events, and groups.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Amazon.com", description: "Amazon is the world's largest online retailer, offering a vast range of products from books and electronics to clothing and groceries.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Wikipedia.org", description: "Wikipedia is a free, online encyclopedia that allows users to create and edit articles on a wide range of topics.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Twitter.com", description: "Twitter is a social media platform that allows users to share short messagesCheat, known as tweets, with their followers.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Instagram.com", description: "Instagram is a social media platform that allows users to share photos and videos with their followers.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Netflix.com", description: "Netflix is a subscription-based streaming service that offers a wide range of movies, TV shows, and documentaries.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "LinkedIn.com", description: "LinkedIn is a social networking site for professionals, allowing users to connect with colleagues, find jobs, and share industry news and insights.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Reddit.com", description: "Reddit is a social news aggregation and discussion website, with content ranging from news and politics to gaming and memes.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Pinterest.com", description: "Pinterest is a social media platform that allows users to discover, save, and share ideas and inspiration, ranging from recipes to home decor.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Yahoo.com", description: "Yahoo is a web portal and search engine, offering a range of services including email, news, and finance.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Twitch.tv", description: "Twitch is a live streaming platform primarily focused on video gaming, but also includes streams on music, talk shows, and other topics.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Microsoft.com", description: "Microsoft is a multinational technology company, offering a range of software, hardware, and cloud services.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "eBay.com", description: "eBay is an online marketplace, allowing users to buy and sell goods and services on a global scale.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "WhatsApp.com", description: "WhatsApp is a messaging app, allowing users to send text messagesCheat, voice messagesCheat, and make voice and video calls.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Apple.com", description: "Apple is a multinational technology company, offering a range of products including iPhones, iPads, and Mac computers.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Zoom.us", description: "Zoom is a video conferencing platform, allowing users to host virtual meetings and webinars.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Adobe.com", description: "Adobe is a software company, offering a range of creative and productivity tools such as Photoshop and Acrobat.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "CNN.com", description: "CNN is a news and media website, providing coverage of current events and breaking news stories.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "BBC.co.uk", description: "BBC is a British public service broadcaster, offering news, entertainment, and educational content.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Etsy.com", description: "Etsy is an online marketplace, specializing in handmade and vintage goods.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Webmd.com", description: "WebMD is a health information website, providing users with access to medical news, advice, and resources.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "IMDB.com", description: "IMDB is a database of information related to movies, TV shows, and celebrities.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Walmart.com", description: "Walmart is a multinational retail corporation, offering a wide range of products both in-store and online.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Yelp.com", description: "Yelp is a platform for user-generated reviews and recommendations of local businesses.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Stackoverflow.com", description: "Stack Overflow is a question and answer community for programmers and developers.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Microsoftonline.com", description: "Microsoft Online is a web-based suite of productivity tools, including Word, Excel, and PowerPoint.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Medium.com", description: "Medium is a platform for online publishing, featuring a range of articles and stories on various topics.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Theguardian.com", description: "The Guardian is a British daily newspaper, offering news and opinion on current events and cultural topics.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Booking.com", description: "Booking.com is an online booking platform, allowing users to reserve accommodations, flights, and rental cars.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Chase.com", description: "Chase is a financial services company, offering banking, credit card, and investment services.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Forbes.com", description: "Forbes is a business news and media website, providing coverage of finance, technology, and entrepreneurship.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Cnnic.cn", description: "CNNIC is the China Internet Network Information Center, responsible for the administration of China's internet infrastructure.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Baidu.com", description: "Baidu is a Chinese search engine, offering a range of services including search, news, and maps.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Live.com", description: "Live.com is a Microsoft-owned web portal and email service.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Aliexpress.com", description: "AliExpress is an online marketplace, specializing in products from Chinese manufacturers and sellers.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Nih.gov", description: "NIH is the National Institutes of Health, a US government agency responsible for biomedical research and public health.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Office.com", description: "Office.com is a web-based suite of productivity tools, including Word, Excel, and PowerPoint.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Nytimes.com", description: "The New York Times is a daily newspaper, offering news and opinion on current events and cultural topics.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Instagram.cn", description: "Instagram.cn is the Chinese version of the social media platform, which is subject to certain restrictions and regulations by the Chinese government.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Indeed.com", description: "Indeed is a job search website, offering job listings and resources for job seekers.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Sohu.com", description: "Sohu is a Chinese internet company, offering a range of services including search, news, and entertainment.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Target.com", description: "Target is a US-based retail corporation, offering a wide range of products both in-store and online.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Dropbox.com", description: "Dropbox is a cloud storage and file sharing service, allowing users to securely store and access files from anywhere.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Quora.com", description: "Quora is a question and answer community, allowing users to ask and answer questions on a wide range of topics.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Huanqiu.com", description: "Huanqiu is a Chinese news and media website, offering coverage of global events and Chinese news.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Bankofamerica.com", description: "Bank of America is a financial services company, offering banking, credit card, and investment services.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Telegram.org", description: "Telegram is a messaging app, offering secure and encrypted messaging and file sharing.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Foxnews.com", description: "Fox News is a US news and media website, offering coverage of US and international", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs"}, { site: "Foxnews.com", description: "Fox News is a US news and media website, offering coverage of US and international news, politics, and entertainment.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Ups.com", description: "UPS is a courier and logistics company, offering shipping and delivery services worldwide.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Reuters.com", description: "Reuters is a global news agency, offering coverage of breaking news, business, and finance.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Cnbc.com", description: "CNBC is a US news and media website, specializing in business and financial news and analysis.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Booking.yeah.net", description: "Booking.yeah.net is a travel booking platform, allowing users to reserve accommodations, flights, and rental cars.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Alibaba.com", description: "Alibaba is a Chinese multinational conglomerate, specializing in e-commerce, retail, and technology.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Instructure.com", description: "Instructure is a software company, offering a range of education and learning management tools.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Upsers.com", description: "UPSers is a portal for UPS employees, offering access to company news, benefits, and resources.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Salesforce.com", description: "Salesforce is a cloud-based customer relationship management (CRM) platform, offering a range of tools for sales, marketing, and customer service.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Pinterest.jp", description: "Pinterest.jp is the Japanese version of the social media platform, offering content and inspiration tailored to Japanese users.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Airbnb.com", description: "Airbnb is an online platform for short-term rentals and accommodations, allowing users to book unique and affordable lodging options around the world.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Booking.fr", description: "Booking.fr is the French version of the travel booking platform, offering reservations for accommodations, flights, and rental cars.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Dropboxusercontent.com", description: "Dropboxusercontent.com is a cloud storage and file sharing service, allowing users to securely store and share files with others.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Espn.com", description: "ESPN is a US sports media company, offering coverage of sports news, scores, and analysis.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Cdc.gov", description: "CDC is the Centers for Disease Control and Prevention, a US government agency responsible for public health and disease prevention.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Outlook.live.com", description: "Outlook.live.com is a Microsoft-owned email service, offering email and calendar management tools.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Amazonaws.com", description: "Amazon AWS is a cloud computing platform, offering a range of services including storage, computing, and analytics.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Bbc.com", description: "BBC.com is the international version of the British public service broadcaster's website, offering news, entertainment, and educational content.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Foxbusiness.com", description: "Fox Business is a US news and media website, specializing in business and finance news and analysis.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Booking.es", description: "Booking.es is the Spanish version of the travel booking platform, offering reservations for accommodations, flights, and rental cars.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Booking.it", description: "Booking.it is the Italian version of the travel booking platform, offering reservations for accommodations, flights, and rental cars.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Googleusercontent.com", description: "Googleusercontent.com is a cloud-based storage service, allowing users to store and access files from anywhere.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Wordpress.com", description: "WordPress is a content management system (CMS), allowing users to create and manage websites and blogs.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Hootsuite.com", description: "Hootsuite is a social media management platform, allowing users to manage and monitor their social media accounts in one place.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Reuters.co.jp", description: "Reuters.co.jp is the Japanese version of the global news agency, offering coverage of breaking news, business, and finance.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Okta.com", description: "Okta is a cloud-based identity management platform, offering tools for secure login and user authentication.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" }, { site: "Naver.com", description: "Naver is a South Korean search engine and online platform, offering a range of services including search, news, and entertainment.", videoLink: "https://www.youtube.com/embed/64RJrbVRzGs" } ]
var atlas_output = "";
var total_variables = 0;
var cheat_data = {};
var paywall = "no";
var storage_vars = [];
var text_output= "";
var atlas_inputs = [];
var lastInput = "";
var msg_user = "";
var startAgent = false;
var chat_mode = "chat";
var global_variables = [];
var schedule = [];
var old_code = '';
var tag_dict = {};
var interface = [];
var account_dict = {};
var last_recorder_delay = 0;
var that = this;
var selected_attribute;
var added_functs = false;
var mode_num = 0;
var old = '';
var last_complete = 0;
var recorder_events = [];
var layer = 0;
var onboard = 0;
var selected_attribute_val;
var no_code_container = [];
var layer = 0;
var leader_lines = [];
var inputCounter = 0;
var last_element = null;
var last_elements = [];
var last_color = null;
var last_transition = null;
var last_border = null;
var last_gpt = '';
var recording_num = 0;
window.firebase_data = [];
var recorderStop = [];
var mouseX, mouseY, target, lastTarget;
var last_selected_element = null;
var opened_selector = false;
var image_src = "";
var story_set = false;
var last_run = 0;
var user_key = "";
var added_selector = false;
var scripts = [];
var last_saved = 'new';
var codes = [];
var whitelabel = false;
var GotScripts = false;
var refunded = false;
var enabled_once = false;
var tempData = [];
var added_no_code = false;
var code_ids = 0;
var box;
var selected_element = "";
var pressedKeys = {};
var attr_str = "";
var opened_cheatLayer = false;
var selector_type = "usecss";
var error_log = "";
var onboard_step = 0;
var completed_steps = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1]
var user_id = '';
var recording = false;
let events = [];
let stopFn = null;
var recordInProgress = false;
var playbackInProgress = false;



var context_array = [];
let userEventLog = [];
function msToTime(ms) {
    let seconds = (ms / 1000).toFixed(1);
    let minutes = (ms / (1000 * 60)).toFixed(1);
    let hours = (ms / (1000 * 60 * 60)).toFixed(1);
    let days = (ms / (1000 * 60 * 60 * 24)).toFixed(1);
    if (seconds < 60) return 0;
    else if (minutes < 60) return 0;
    else if (hours < 24) return 0;
    else return Math.floor(days)
}
function writeDataToCSVFile(rows) {
    var csvContent = "data:text/csv;charset=utf-8,";
    rows.forEach(function (row) {
        csvContent += row.join(",") + "\r\n";
    });
    var encodedUri = encodeURI(csvContent);
    window.open(encodedUri);
}

function createSheet(){

    SendMessage("createSheet", "data", {} );
}

function scrapeAmazon(product, options, pageLimit = 1) {


    createSheet()
    setTimeout(function(){
    var final_sheet = "";
        sendMessage("scrapeAmazon", "data", {product: product, options: options, pageLimit: pageLimit, sheet_url: last_created_sheet_url, sheet_name: last_created_sheet_name});
},10000);


}
function rikuPrompt(Account, API, PROMPT, input1 = '', input2 = '', input3 = '', input4 = '', input5 = '') {
    SendMessage("rikuPrompt", "data", { Account: Account, API: API, prompt: PROMPT, input1: input1, input2: input2, input3: input3, input4: input4, input5: input5 });

}
// 1. Send a message to the service worker requesting the user's data
function setSchedule(cron, script){

    SendMessage("setSchedule", "data", {cron: cron, script: script});
    ////console.log("set Schedule")
}

function postBasic(url, parameters) {
    ////console.log("post   Basic")
    SendMessage("postBasic", "data", {url: url, parameters: parameters});


}

function googleMaps(term){
    SendMessage("googleMaps", "data", {term: term});
}


function sendGmail(email, subject, body) {
    var to = email;
   var gmailURL = 'https://mail.google.com/mail/u/0/?fs=1&to=' +to + '&su=' + subject + '&body=' +body + '&tf=cm';

       var timeout = 30;
       var script = `//Generated Script id=0
       var delayKey = 1000;
       setTimeout(function(){
       var elements = document.getElementsByTagName('DIV');
       function slow(kk){
        if(typeof elements[kk] != 'undefined' && elements[kk].getAttribute('id') && elements[kk].getAttribute('id').indexOf(":oz") >= 0){
               elements[kk].click();
               if(kk < elements.length){
                   setTimeout(function(){slow(kk+1)},10000);
               }
           }else{
               if(kk < elements.length){
                   setTimeout(function(){slow(kk+1)},1);
               }
           }
       }
       slow(0);
       },/*delay*/1*delayKey);`;

   runOnTab(gmailURL, script, 30, {newWindow:true, id:-1})

    }

   
window.sendResponse = function (response) {

    ////console.log('received user data', response);


    //initializeUI(response);
};
chrome.storage.onChanged.addListener(function(changes, namespace) {
    console.log("change recived!");
    console.log(changes);
    for (var key in changes) {
        var storageChange = changes[key];
    }

    
});
var sendResponseGlobal = function (response) {

    console.log('received user data', response);


    //initializeUI(response);
};
var sendResponseGlobalC;

function store_task_data() {
    var key = "cheatlayer"
     ////console.log(cheat_data)
     var out_obj = window.task_data;
     var testPrefs = JSON.stringify(out_obj);
    var jsonfile = {};
    jsonfile[key] = testPrefs;
    chrome.storage.sync.set(jsonfile, function () {
        ////console.log('Saved', key, testPrefs);
    });
    sendResponseGlobal(JSON.stringify(out_obj))
    html2canvas(document.body, { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
        document.body.appendChild(canvas);
              canvas.setAttribute("id", "canvas");
         var link = document.createElement('a');
      link.download = 'webpage.png';
   var uri = document.getElementById('canvas').toDataURL()
   sendResponseGlobal("<img src='" + uri + "'></img>" + JSON.stringify(out_obj))

    
    });
}
chrome.runtime.onMessage.addListener(
     (request, sender, sendResponseC) => {
  
        ////console.log(request.request);

        genChat(request.request)
        sendResponseGlobal = sendResponseC;

    //  if (request.id === "worker"){

      //}
      return true;
    }
  );



function dalle(prompt, callback){
    SendMessage("dalle", "data", { prompt:prompt});
    chrome.runtime.sendMessage({ id: 'dalle', prompt: prompt }, (response) => {
           callback(response);
    });
}



  function startWorker(request, url, callback) {
    chrome.runtime.sendMessage({ id: 'worker', request: request, url: url }, (response) => {
   //   ////console.log(response);
      callback(response);
    });
  }



function launchAtlas(){
    if (true) {
    
        ("Generate GPT Code\n");
        var el = target;
        pressedKeys[17] = false;
        pressedKeys[13] = false;

        var arr = [];
        //  ////console.log("WHAT");
        //(el);
        //(el.attributes);     <input type='checkbox' id='useattr' name='useattr' checked value='useattr'><br>
         //(el.attributes);     <input type='checkbox' id='useattr' name='useattr' checked value='useattr'><br>
         var newchat = `
         <style>

 

.wrapper__input {
    position: fixed !important;
    top: 12%;
    left: 50%;
    width: calc(100% - 30px);
    width: 850px;
    -webkit-transform: translate(-50%, 0%);
            transform: translate(-50%, 0%);
    background: #FFFFFF;
    -webkit-box-shadow: 0px 8px 24px rgba(61, 44, 92, 0.16);
            box-shadow: 0px 8px 24px rgba(61, 44, 92, 0.16);
    border-radius: 16px;
    -webkit-transition: .4s ease all;
    transition: .4s ease all;
    max-height: calc(100% - 30px);
  }
  .wrapper__input > form {
    height: 100%;
  }
  .wrapper__input.active {
    width: 840px;
    height: 650px;
    max-width: none;
    top: 50%;
    -webkit-transition: none;
    transition: none;
    -webkit-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%);
    -webkit-transform: none;
            transform: none;
    top: 0px;
  }
  .wrapper__input .group__input {
    padding: 3px 24px;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
    position: relative;
  }
  .wrapper__input .group__input .dropdown__wrapper {
    position: absolute;
    left: 0px;
    top: 75px;
    width: 100%;
    background-color: #fff;
    -webkit-box-shadow: 0px 8px 24px rgba(61, 44, 92, 0.08);
            box-shadow: 0px 8px 24px rgba(61, 44, 92, 0.08);
    border-radius: 5px;
  }
  .wrapper__input .group__input .dropdown__wrapper ul {
    padding: 0px;
    list-style-type: none;
    margin: 0px;
    padding: 0px 0px;
    max-height: 250px;
    overflow-y: auto;
  }
  .wrapper__input .group__input .dropdown__wrapper ul::-webkit-scrollbar {
    width: 6px;
  }
  .wrapper__input .group__input .dropdown__wrapper ul::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
            box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  }
  .wrapper__input .group__input .dropdown__wrapper ul::-webkit-scrollbar-thumb {
    border-radius: 5px;
    background-color: #674EF6;
  }
  .wrapper__input .group__input .dropdown__wrapper ul > li {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
  }
  .wrapper__input .group__input .dropdown__wrapper ul > li > a {
    width: 100%;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    text-decoration: none;
    font-size: 20px;
    -webkit-transition: .4s ease all;
    transition: .4s ease all;
    padding: 6px 12px;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
  }
  .wrapper__input .group__input .dropdown__wrapper ul > li > a:hover {
    background-color: rgba(103, 78, 246, 0.2);
  }
  .wrapper__input .group__input .dropdown__wrapper ul > li > a span {
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
  }
  .wrapper__input .group__input .dropdown__wrapper ul > li > a span img {
    min-width: 29px;
    max-width: 29px;
  }
  .wrapper__input .group__input .dropdown__wrapper ul > li > a p {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    margin: 0px;
    color: #000;
    font-size: 16px;
    margin-left: 5px;
  }
  .wrapper__input .group__input > span {
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    margin-right: 12px;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
  .wrapper__input .group__input > span > img {
    min-width: 36px;
    max-width: 36px;
  }
  .wrapper__input .group__input > input {
    padding-left: 12px;
    width: 100%;
    padding-right: 12px;
    font-size: 22px;
    height: 60px;
    font-weight: 500;
    color: #000;
    border: 0px;
    outline: none;
  }
  .wrapper__input .group__input > input::-webkit-input-placeholder {
    /* Chrome/Opera/Safari */
    color: rgba(0, 0, 0, 0.32);
  }
  .wrapper__input .group__input > input::-moz-placeholder {
    /* Firefox 19+ */
    color: rgba(0, 0, 0, 0.32);
  }
  .wrapper__input .group__input > input:-ms-input-placeholder {
    /* IE 10+ */
    color: rgba(0, 0, 0, 0.32);
  }
  .wrapper__input .group__input > input:-moz-placeholder {
    /* Firefox 18- */
    color: rgba(0, 0, 0, 0.32);
  }
  
  .chat__box .chat__main::-webkit-scrollbar {
    width: 6px;
  }
  .chat__box .chat__main::-webkit-scrollbar-track {
    -webkit-box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
            box-shadow: inset 0 0 6px rgba(0, 0, 0, 0.3);
  }
  .chat__box .chat__main::-webkit-scrollbar-thumb {
    border-radius: 5px;
    background-color: #674EF6;
  }
  .chat__box .chat__main .chat__bubble {
    margin-bottom: 24px;
  }
  .chat__box .chat__main .chat__bubble.bubble__user {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: end;
        -ms-flex-align: end;
            align-items: flex-end;
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end;
  }
  .chat__box .chat__main .chat__bubble.bubble__user .text__wrap {
    background: linear-gradient(266.93deg, #3D2C5C 0%, #5B01FF 100%);
    border-radius: 16px;
    padding: 20px 24px;
    max-width: 470px;
    word-wrap: break-word;
  }
  .chat__box .chat__main .chat__bubble.bubble__user .text__wrap > p {
    font-size: 16px;
    line-height: 18px;
    color: #FFFFFF;
    font-weight: 500;
    margin: 0px;
  }
  .chat__box .chat__main .chat__bubble.bubble__user span {
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    min-width: 42px;
    max-width: 42px;
    min-height: 42px;
    max-height: 42px;
    margin-left: 16px;
    -webkit-box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.08);
            box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.08);
    border-radius: 250px;
  }
  .chat__box .chat__main .chat__bubble.bubble__user span > img {
    max-width: 100%;
  }
  .chat__box .chat__main .chat__bubble.bubble__answer {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: end;
        -ms-flex-align: end;
            align-items: flex-end;
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start;
  }
  .chat__box .chat__main .chat__bubble.bubble__answer .text__wrap {
    padding: 20px 24px;
    border: 1px solid rgba(0, 0, 0, 0.08);
    border-radius: 16px;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    min-width: 125px;
    max-width:450px;
    text-wrap: wrap;
  }
  .chat__box .chat__main .chat__bubble.bubble__answer .text__wrap p {
    margin: 0px;
    font-size: 16px;
    line-height: 18px;
    color: #3D2070;
  }
  .chat__box .chat__main .chat__bubble.bubble__answer > span {
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    min-width: 42px;
    max-width: 42px;
    min-height: 42px;
    max-height: 42px;
    background: #FFFFFF;
    -webkit-box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.08);
            box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.08);
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    border-radius: 250px;
    margin-right: 16px;
  }
  .chat__box .chat__main .chat__bubble.bubble__answer > span img {
    min-width: 32px;
    max-width: 32px;
  }
  .chat__box > img {
    position: absolute;
    bottom: 4px;
    right: 4px;
    cursor: pointer;
  }
  .chat__box .chat__input {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    position: relative;
    width: 100%;
  }
  .chat__box .chat__input button {
    position: absolute;
    right: 8px;
    min-width: 150px;
    min-height: 48px;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    cursor: pointer;
    background: linear-gradient(266.93deg, #3D2C5C 0%, #5B01FF 100%);
    border-radius: 16px;
    border: 0px;
    font-size: 16px;
    line-height: 18px;
    color: #FFFFFF;
    font-weight: bold;
    -webkit-transition: .4s ease all;
    transition: .4s ease all;
  }
  .chat__box .chat__input button:hover {
    opacity: .7;
  }
  .chat__box .chat__input > input {
    width: 100%;
    height: 64px;
    padding-left: 24px;
    padding-right: 165px;
    background: #FFFFFF;
    -webkit-box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.08);
            box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.08);
    border-radius: 16px;
    font-size: 18px;
    line-height: 21px;
    color: #000000;
    font-weight: 500;
    outline: none;
    border: 0px;
  }
  .chat__box .chat__controls {
    padding-left: 16px;
    padding-right: 16px;
    padding-bottom: 16px;
  }
  .chat__box .chat__controls .buttons__controls {
    display: grid;
    grid-template-columns: repeat(3, 1fr);
    margin-bottom: 16px;
    grid-column-gap: 16px;
  }
  .chat__box .chat__controls .buttons__controls > .stopChat {
    border: 1px solid #E14942;
    min-height: 48px;
    font-size: 16px;
    line-height: 18px;
    color: #E14942;
    text-decoration: none;
    border-radius: 16px;
    -webkit-transition: .4s ease all;
    transition: .4s ease all;
    font-weight: 600;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    width: 100%;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
  .chat__box .chat__controls .buttons__controls > .stopChat:hover {
    color: #fff;
    background-color: #E14942;
  }
  .chat__box .chat__controls .buttons__controls > .saveChat {
    border: 1px solid #43B855;
    min-height: 48px;
    font-size: 16px;
    line-height: 18px;
    color: #43B855;
    text-decoration: none;
    border-radius: 16px;
    -webkit-transition: .4s ease all;
    transition: .4s ease all;
    font-weight: 600;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    width: 100%;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
  .chat__box .chat__controls .buttons__controls > .saveChat:hover {
    color: #fff;
    background-color: #43B855;
  }
  
  .chat__box .chat__controls .buttons__controls > .savePrompt {
    border: 1px solid #43B855;
    min-height: 48px;
    font-size: 16px;
    line-height: 18px;
    color: #43B855;
    text-decoration: none;
    border-radius: 16px;
    -webkit-transition: .4s ease all;
    transition: .4s ease all;
    font-weight: 600;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    width: 100%;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
  .chat__box .chat__controls .buttons__controls > .savePrompt:hover {
    color: #fff;
    background-color: #43B855;
  }
  .chat__box .chat__controls .buttons__controls > .submitChat {
    border: 1px solid  rgb(108, 77, 255);
    min-height: 48px;
    font-size: 16px;
    line-height: 18px;
    color:  rgb(108, 77, 255);
    text-decoration: none;
    border-radius: 16px;
    -webkit-transition: .4s ease all;
    transition: .4s ease all;
    font-weight: 600;
    display: -webkit-inline-box;
    display: -ms-inline-flexbox;
    display: inline-flex;
    margin-top:10px;
    width: 100%;
    -webkit-box-align: center;
        -ms-flex-align: center;
            align-items: center;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
  }
  .chat__box .chat__controls .buttons__controls > .submitChat:hover {
    color: #fff;
    background-color: rgb(108, 77, 255);
  }
  
  
  @media (max-width: 991px) {
    .wrapper__input {
      width: 740px;
    }
    .wrapper__input.active {
      width: 740px;
    }
  }
  @media (max-width: 767px) {
    .wrapper__input .group__input > input {
      font-size: 17px;
    }
  
    .wrapper__input .group__input > span {
      margin-right: 7px;
    }
  
    .wrapper__input .group__input {
      padding: 3px 12px;
    }
  
    .wrapper__input .group__input > span > img {
      min-width: 30px;
      max-width: 30px;
    }
  
    .wrapper__input .group__input > input {
      padding-left: 5px;
    }
  
    .wrapper__input {
      width: calc(100% - 30px);
    }
    .wrapper__input.active {
      width: calc(100% - 30px);
    }
  }
  @media (max-width: 480px) {
    .wrapper__input.active {
      height: 485px;
    }
  
    .chat__box .chat__input button {
      min-width: 68px;
      min-height: 38px;
      font-size: 14px;
      border-radius: 10px;
    }
  
    .chat__box .chat__controls {
      padding-left: 16px;
      padding-right: 16px;
      padding-bottom: 16px;
    }
  
    .chat__box .chat__controls .buttons__controls > .stopChat {
      min-height: 40px;
    }
  
    .chat__box .chat__main {
      padding-top: 35px;
      padding-left: 32px;
      padding-right: 32px;
      padding-bottom: 16px;
    }
  
    .chat__box .chat__main .chat__bubble.bubble__user .text__wrap {
      padding: 16px 20px;
      
    max-width: 470px;
    word-wrap: break-word;
    }
  
    .chat__box .chat__main .chat__bubble.bubble__answer .text__wrap {
      padding: 16px 20px;
      max-width:450px;
      text-wrap: wrap;
    }
  
    .chat__box .chat__main .chat__bubble.bubble__answer .text__wrap p {
      font-size: 14px;
      line-height: 16px;
    }
  
    .chat__box .chat__main .chat__bubble {
      margin-bottom: 14px;
    }
  
    .chat__box .chat__main {
      height: calc(100% - 130px);
    }
  
    .chat__box .chat__main .chat__bubble.bubble__answer > span {
      min-width: 36px;
      max-width: 36px;
      min-height: 36px;
      max-height: 36px;
      margin-right: 10px;
    }
    .chat__box .chat__main .chat__bubble.bubble__answer > span > img {
      max-width: 29px;
    }
  
    .chat__box .chat__main .chat__bubble.bubble__user span {
      margin-left: 10px;
      min-width: 36px;
      max-width: 36px;
      min-height: 36px;
      max-height: 36px;
    }
    .chat__box .chat__main .chat__bubble.bubble__user span > img {
      max-width: 100%;
    }
  
    .chat__box .chat__main .chat__bubble.bubble__user .text__wrap > p {
      font-size: 14px;
      line-height: 16px;
    }
  
    .chat__box .chat__input > input {
      padding-left: 16px;
      height: 50px;
      font-size: 15px;
      padding-right: 90px;
    }
  }
  
.modal {
	display: block;
	position: fixed;
	z-index: 9999;
	left: 0;
	top: 0;
	width: 100%;
	height: 100%;
	overflow: auto;
	background-color: rgba(0,0,0,0.4);
	}
	
	.modal-content {
	background-color: #fefefe;
	margin: 10% auto;
	padding: 20px;
	border: 1px solid #888;
	width: 60%;
	max-width: 600px;
	}
	
	.close {
	color: #aaa;
	float: right;
	font-size: 28px;
	font-weight: bold;
	cursor: pointer;
	}
	
	.close:hover,
	.close:focus {
	color: black;
	text-decoration: none;
	cursor: pointer;
	}
	
	input[type=text], input[type=submit], input[type=button] {
	display: block;
	width: 100%;
	padding: 10px;
	margin-bottom: 20px;
	border: none;
	border-radius: 4px;
	box-sizing: border-box;
	font-size: 16px;
	font-family: 'Roboto', sans-serif;
	}
	
	input[type=submit] {
	background-color: #4CAF50;
	color: white;
	cursor: pointer;
	}
	
	input[type=submit]:hover {
	background-color: #45a049;
	}
	
	input[type=button] {
	background-color: #ddd;
	color: black;
	cursor: pointer;
	}
	
	input[type=button]:hover {
	background-color: #ccc;
	}
	
	.modal-form label {
	display: block;
	margin-bottom: 10px;
	font-size: 16px;
	font-weight: bold;
	}
	
	.modal-form input[type=text] {
	width: 100%;
	}
	
	.modal-form input[type=submit] {
	margin-top: 10px;
	}
         #chatWrapper {

            min-height: 95px;
            min-width: 500px;
             position: fixed;
             z-index:9999;
                                 top: 50%;
             left: 50%;
             transform: translate(-50%, -50%);
             width: 600px;
             height: 95px;
             resize: both; /* Added resize property */
             overflow: hidden;
             border-radius: 16px;
             box-shadow: 0 2px 40px rgba(0, 0, 0, 1.0);
             background-color: rgba(255, 255, 255, 0.9);
             transition: height 1s ease;
         }
 
         #chatWrapper.expanded {
             height: 700px;
         }
 
         #chat {
             width: 100% !important;
             height: 100% !important;
             background-color: transparent !important;
             border-radius: 16px !important;
             display: flex !important;
             flex-direction: column !important;
             cursor: move !important;
             overflow: hidden !important;
             padding:8px;

         }
 
         #messagesCheat {
             flex-grow: 1;
             overflow: auto;
             display: none;
             margin-bottom: 8px;
         }
 
         #messagesCheat.active {
             display: block;
         }
 
         #input {
             display: flex;
             align-items: center;
             background-color: rgba(255, 255, 255, 0.9);
             padding: 8px;
             border-radius: 16px;
             
             box-shadow: 0px 4px 16px rgba(0, 0, 0, 0.08);
         }
 
         #input input {
             flex-grow: 1;
             border: none;
             outline: none;
             background-color: transparent;
             font-size: 14px;
             padding: 4px;
         }
 
         #input button {
             background-color: transparent;
             border: none;
             outline: none;
             padding: 8px;
             font-size: 16px;
             cursor: pointer;
             color: rgb(108, 77, 255);
         }
 
         .message {
             padding: 8px;
             background-color: rgb(108, 77, 255);
             color: white;
             border-radius: 16px;
             margin-bottom: 8px;
             max-width: 60%;
             margin: 10px;
             word-wrap: break-word;
             white-space: pre-wrap;
         }

         
         /* Style for search results */
         #searchResults {
             position: fixed;
             left: 16px; /* Positioned based on chatWrapper's padding */
             top: calc(100% + 48px); /* Positioned based on chatWrapper's height */
             width: 300px; /* Adjusted width based on chatWrapper's padding */
             background-color: rgba(255, 255, 255, 0.9);
             border-radius: 16px;
             color: black;

             box-shadow: inset 0 1px 3px rgba(0, 0, 0, 0.1);
             display: none;
             max-height: 150px;
             overflow-y: auto;
             z-index: 999999; /* Added z-index to keep searchResults on top */
         }
 
         #searchResults p {
             padding: 4px 8px;
             margin: 0;
             cursor: pointer;
             color: black;

         }
 
         #searchResults p:hover {
             background-color: rgba(108, 77, 255, 0.1);
         }

         .receiver {background-color: #f2f2f2; color: #333; align-self: flex-start; }

         .sender {float:right; }

     </style>
 <div id="chatWrapper" class="wrapper__input">
     <div id="chat" class="chat__box" >
         <div class="chat__main" id="messagesCheat"></div>
         <div class="chat__controls ui-draggable-handle" id="messageControls">
             <div class="buttons__controls">
             </div>
             <div class="chat__input">
                 <input style="margin-bottom:0px;" type="text" placeholder="Ask Project Atlas anything..." id="messageInput">
                 <button   id="sendButton" type="submit">Send</button>
             </div>
         
         </div>

     </div>
 </div>
 <div id="searchResults"></div>

 <script>
     const chatWrapper = document.getElementById('chatWrapper');
     const chat = document.getElementById('chat');
     var  messages = document.getElementById('messagesCheat');
     const input = document.getElementById('messageInput');
     const sendButton = document.getElementById('sendButton');
     const searchResults = document.getElementById('searchResults');

     // Draggable functionality
     let dragging = false;
     let offsetX, offsetY;
     const suggestedMessages = [
         {
         text: "Scrape cheatlayer.com for phone numbers",
         favicon: "https://cheatlayer.com/favicon.ico",
         },
         {
         text: "Scrape cheatlayer.com for emails.",
         favicon: "https://cheatlayer.com/favicon.ico",
         },
         {
         text: "Search cheatlayer.com for emails.",
         favicon: "https://cheatlayer.com/favicon.ico",
         },
         {
         text: "Scrape cheatlayer.com for emails.",
         favicon: "https://cheatlayer.com/favicon.ico",
         },
         {
         text: "Get all the images from amazon.com",
         favicon: "https://amazon.com/favicon.ico",
         },
         {
         text: "Scrape all the videos from cheatlayer.com",
         favicon: "https://cheatlayer.com/favicon.ico",
         },
         {
         text: "Scrape all the tables from cheatlayer.com",
         favicon: "https://cheatlayer.com/favicon.ico",
         },
         {
         text: "Scrape all the links from cheatlayer.com",
         favicon: "https://cheatlayer.com/favicon.ico",
         },
         {
         text: "Scrape cheatlayer.com for phone numbers.",
         favicon: "https://cheatlayer.com/favicon.ico",
         },
         {
         text: "Get all the meta data from cheatlayer.com",
         favicon: "https://cheatlayer.com/favicon.ico",
         },
         {
         text: "Scrape the text from cheatlayer.com.",
         favicon: "https://cheatlayer.com/favicon.ico",
         },
         {
         text: "Scrape the HTML from cheatlayer.com.",
         favicon: "https://cheatlayer.com/favicon.ico",
         },
         {
         text: "Scroll to the bottom of the page.",
         favicon: "https://cheatlayer.com/favicon.ico",
         },
     
         {
         text: "Scrape zillow for 3 bedrooms and 2 bathrooms houses in los angeles for 5 pages everyday at 10am.",
         favicon: "https://zillow.com/favicon.ico",
         },
         {
         text: "Search for a house for family of 3 in nashua NH.",
         favicon: "https://zillow.com/favicon.ico",
         },
         {
         text: "Search for an apartment for a single man in Boston.",
         favicon: "https://zillow.com/favicon.ico",
         },
         {
         text: "Search for a 3 bedroom house in vermont for 10 pages.",
         favicon: "https://zillow.com/favicon.ico",
         },
         {
         text: "Scrape apollo.io for recruitment firms owners in the US with under 200 employees and send them to the sequence starting with Alex First Recruitment",
         favicon: "https://www.apollo.io/wp-content/themes/apollo/favicon.png",
         },
         {
         text: "Search apollo.io for private equity firms owners in the US with over 100 employees and send them to the list starting with Private Equity.",
         favicon: "https://www.apollo.io/wp-content/themes/apollo/favicon.png",
         },
         {
         text: "Search apollo.io for private equity firms owners in the US with over 100 employees and export them to CSV.",
         favicon: "https://www.apollo.io/wp-content/themes/apollo/favicon.png",
         },
         {
             text: "Post a tweet about ai automation everyday at 10am",
             favicon: "https://twitter.com/favicon.ico",
             },
             {
             text: "Go to facebook and post about motivational quotes.",
             favicon: "https://facebook.com/favicon.ico",
             },
             {
             text: "Write a blog post about dogs.",
             favicon: "https://cheatlayer.com/favicon.ico",
             },
             {
             text: "Write a blog about dogs.",
             favicon: "https://cheatlayer.com/favicon.ico",
             },
             {
             text: "Write a post about AI in the cheatlayer facebook group.",
             favicon: "https://facebook.com/favicon.ico",
             },
             {
             text: "Generate an image of a poodle ranch filled with dogs and post it to facebook.",
             favicon: "https://facebook.com/favicon.ico",
             },
             {
             text: "Create an image of sumo wrestlers eating tacos and post it to twitter with the caption sumo wrastling and fun.",
             favicon: "https://twitter.com/favicon.ico",
             },
             {
             text: "Write a post about motivational quotes to twitter everyday at 10 am.",
             favicon: "https://twitter.com/favicon.ico",
             },
             {
             text: "Generate an image of dogs to facebook .",
             favicon: "https://facebook.com/favicon.ico",
             },
             {
             text: "Scrape amazon greenies for titles, prices, descriptions, and reviews.",
             favicon: "https://amazon.com/favicon.ico",
             },
             {
             text: "Scrape amazon greenies for titles.",
             favicon: "https://amazon.com/favicon.ico",
             },
             {
             text: "Click the div on the page with inner text that includes buy.",
             favicon: "https://cheatlayer.com/favicon.ico",
             },
             {
             text: "Scrape amazon greenies for titles, prices, descriptions, and reviews everyday at 8am.",
             favicon: "https://amazon.com/favicon.ico",
             },
             {
             text: "Scrape cheatlayer.com for links .",
             favicon: "https://cheatlayer.com/favicon.ico",
             },
             ];
                   const resize_ob = new ResizeObserver(function(entries) {
         // since we are observing only a single element, so we access the first element in entries array
         let rect = entries[0].contentRect;
     
         // current width & height
         let width = rect.width;
         let height = rect.height;
     
         ////console.log('Current Width : ' + width);
         ////console.log('Current Height : ' + height);
         

         searchResults.style.left = input.getBoundingClientRect().left + 'px';
         searchResults.style.top = input.getBoundingClientRect().top + 50 + 'px';
         
         searchResults.style.width = input.getBoundingClientRect().width + 'px';
     });
     
     // start observing for resize
     resize_ob.observe(document.querySelector("#chatWrapper"));


     function updateSearchResults() {
         const searchText = input.value.trim().toLowerCase();
         searchResults.innerHTML = '';
         ////console.log(searchText);

         searchResults.style.left = input.getBoundingClientRect().left + 'px';
         searchResults.style.top = input.getBoundingClientRect().top + 50 + 'px';
         
         searchResults.style.width = input.getBoundingClientRect().width + 'px';

         if (searchText) {
             const matches = suggestedMessages.filter(msg => msg.text.toLowerCase().includes(searchText));
             ////console.log(matches)
             if (matches.length > 0) {
                 matches.forEach(match => {
                     const result = document.createElement('p');
                     result.innerHTML = "<img height='20px' width='20px' src='" + match.favicon + "'></img> " + match.text;
                     result.addEventListener('click', () => {
                         input.value = match.text;
                     sendButton.click();

                         searchResults.style.display = 'none';
                     });
                     searchResults.appendChild(result);
                 });
                 searchResults.style.display = 'block';
             } else {
                 searchResults.style.display = 'none';
             }
         } else {
             searchResults.style.display = 'none';
         }
     }

     input.addEventListener('input', updateSearchResults);

     chat.addEventListener('mousedown', (e) => {
         var elementId = (e.target || e.srcElement).id;
         ////console.log(elementId);          
           if(elementId.includes("message")){
             dragging = true;
             offsetX = e.clientX - (chatWrapper.getBoundingClientRect().left + chatWrapper.getBoundingClientRect().width / 2);
             offsetY = e.clientY - (chatWrapper.getBoundingClientRect().top + chatWrapper.getBoundingClientRect().height / 2);
             }
 
     });

     document.addEventListener('mousemove', (e) => {
         if (dragging) {
             chatWrapper.style.left = e.clientX - offsetX + 'px';
             chatWrapper.style.top = e.clientY - offsetY + 'px';
             
             searchResults.style.left = input.getBoundingClientRect().left + 'px';
             searchResults.style.top = input.getBoundingClientRect().top + 50 + 'px';
         }
     });

     document.addEventListener('mouseup', () => {
         dragging = false;
     });

     // Send message functionality
  
     input.addEventListener('keydown', (e) => {
         if (e.key === 'Enter') {
             sendButton.click();
         }
     });
 </script>
 `;

$(document).on('click', '#sendButton', function () {
    var message = $('#messageInput').val();
    if (message == '') return;
    var  messages = document.getElementById('messagesCheat');
    last_result = "user"  ;
    var  messageText = message;
    if (messageText) {
        

        $(".chat__main").append(`
        <div class="chat__bubble bubble__user"  id="messageUser">
        <div class="text__wrap">
            <p>` + messageText + `</p>
        </div>
        <span></span>
    </div>
`);


        if (!messages.classList.contains('active')) {
            messages.classList.add('active');
            chatWrapper.classList.add('expanded');
            setTimeout(() => {
                chatWrapper.style.transition = 'none';
                }, 2000);
        }
    }

    if(lastInput == ''){
    var ms = "Hi, I'm Project Atlas! I can build business automations from end-to-end in simple language. I'm also the world's first automation platform that gives chatGPT super-powers to solve the 'last-mile' and execute context-aware actions! You have " + cloudTasks + " Cheat Cloud Tasks remaining. Please wait up to 5 seconds while I build this automation for you...";
var ms2 = "";
var ms3 = "Please wait up to 5 seconds while I build this automation for you...";
 if(cloudTasks <= 0){
    
    $(".chat__main").append(`
    <div class="chat__bubble bubble__answer"  id="messageAnswer">
                <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                <div class="text__wrap">
                    <p>You have run out of cheat cloud tasks! Please upgrade your account or wait till your tasks reset to continue using Project Atlas. Tasks reset monthly on the 1st.</p>
                </div>
            </div>`);


            alert("Out of Cheat Cloud Tasks! Please upgrade your account or wait till your tasks reset to continue using Project Atlas. Tasks reset monthly on the 1st.")
 }
$(".chat__main").append(`
<div class="chat__bubble bubble__answer"  id="messageAnswer">
            <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
            <div class="text__wrap">
                <p> </p>
            </div>
        </div>`);

        //Using setTimeout and a function that repeats every second till complete, stream 30 characters of the  variable ms to the last div with class text__wrap
        var i = 0;
        var timer = setInterval(function () {
            if (i < ms.length) {
                document.getElementById("messageAnswer").getElementsByClassName("text__wrap")[0].innerHTML += ms.charAt(i);
                i++;
            } else {
                clearInterval(timer);


               

                var i2 = 0;
      


            }
        }, 3);
    





        var firebaseConfig = {
            apiKey: "AIzaSyApJsRNWHtr06MPLh2NJaLmW1fcG8W5XLk",
            authDomain: "cheat-layer.firebaseapp.com",
            projectId: "cheat-layer",
            databaseURL: "https://cheat-layer-default-rtdb.firebaseio.com",
            storageBucket: "cheat-layer.appspot.com",
            messagingSenderId: "964029954703",
            appId: "1:964029954703:web:836e0dec49ad6e60214efa",
            measurementId: "G-T21Y70F57D"
        };
              // Initialize Firebase
              const app = firebase.initializeApp(firebaseConfig);
            var starCountRef = firebase.database().ref('cheats');
            starCountRef.once('value', (snapshot) => {
              const data = snapshot.val();
              var codes_html = "";
              cloud_cheats = [];
               var counter = 0;
               var context_aware_cheats = "";

            snapshot.forEach((child) => {
            ////console.log(child.val());
            var obj = child.val();
            if("tags" in obj){ 
            ////console.log(obj.tags)
            ////console.log(window.location.hostname.split(".")[0]);
            }
            if(window.location.hostname.split(".")[0] != "www" && "tags" in obj && (obj.tags.includes(window.location.hostname.split(".")[0]) || obj.tags.includes("all"))){
                context_aware_cheats = context_aware_cheats + "<img src='https://" + window.location.hostname + "/favicon.ico'></img><a href='#' id='context" +counter + "' class='context' >" + obj.promptChain+ "</a><br><br>";
                counter++;
            }
            });
            $(document).on('click', '.context', function (event) {

                ////console.log(event.target.innerText)
                genAtlas(event.target.innerText);

            });
            if(context_aware_cheats.length > 0){
        

                    $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);
                    $('.answerCheats').animate({ scrollTop: $('.answerCheats').prop('scrollHeight') }, 30);
                }
            });
                  



    }
    $('#messageInput').val('');
    ////console.log(message)
    if(message == 'stop' ){
        SendMessage("stopAtlas", "data", {});
        window.location.reload();
        
      //  return;
    }
    lastInput = message;
   // $('#messagesCheatCheat').append('<div class="message sender">' + message + '</div>');
   // $('#messagesCheatCheat').animate({ scrollTop: $('#messagesCheatCheat').prop('scrollHeight') }, 30);
    //message
    ////console.log(atlas_inputs)
    if(atlas_inputs.length > 0){
        var value = message;
        text_output = text_output.split(atlas_inputs[0]).join("\'" + value + "\'" );
        ////console.log(text_output)
        atlas_inputs.shift();
        ////console.log("result")
        ////console.log(atlas_inputs)
        if(atlas_inputs.length == 0){
            ////console.log('EVAL');
            var atlas_obj = JSON.parse(text_output);
            ////console.log(atlas_obj);
            ////console.log(atlas_obj['nodes'])

            for(var kk = 0; kk < atlas_obj['nodes'].length; kk++){
                var node = atlas_obj['nodes'][kk];
                ////console.log(node);
                if(node['type'] == 'runOnCheatLayer'){
                        SendMessage("processAtlas", "data", { script:node['script'] });
                }
            }

        }else{
            
   
         if(atlas_inputs[0].includes("SHEET_URL") && window.location.href.includes("spreadsheets")){

            text_output = text_output.split(atlas_inputs[0]).join("\'" + window.location.href + "\'" );
            ////console.log(text_output)
            atlas_inputs.shift();
            ////console.log("result")
            ////console.log(atlas_inputs)
            var language = window.navigator.userLanguage || window.navigator.language;

            if(language.includes("en")){
                        
                        
                text_output = text_output.split(atlas_inputs[0]).join("\'Sheet1\'" );
                ////console.log(text_output)
                atlas_inputs.shift();
                ////console.log("result")
                ////console.log(atlas_inputs)
                if(atlas_inputs.length == 0){
                    ////console.log('EVAL');
                    var atlas_obj = JSON.parse(text_output);
                    ////console.log(atlas_obj);
                    ////console.log(atlas_obj['nodes'])
    
                    for(var kk = 0; kk < atlas_obj['nodes'].length; kk++){
                        var node = atlas_obj['nodes'][kk];
                        ////console.log(node);
                        if(node['type'] == 'runOnCheatLayer'){
                                SendMessage("processAtlas", "data", { script:node['script'] });
                        }
                    }

                }
            }else{

        var  messages = document.getElementById('messagesCheat');

         var ms = "Please enter the following input:" + atlas_inputs[0]  ;



         $(".chat__main").append(`
         <div class="chat__bubble bubble__answer"  id="messageAnswer">
                     <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                     <div class="text__wrap">
                         <p>` + ms + `</p>
                     </div>
                 </div>`);
     
            }
        


    }else{

        
        var ms = "Please enter the following input:" + atlas_inputs[0];



        $(".chat__main").append(`
        <div class="chat__bubble bubble__answer"  id="messageAnswer">
                    <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                    <div class="text__wrap">
                        <p>` + ms + `</p>
                    </div>
                </div>`);
    

    }
        }


    }else{
     
        SendMessage("genAtlas", "data", { prompt:message, url: window.location.href, createdAt: new Date().getTime() });
    }
});
    



if(document.getElementById('chatWrapper') == null){
$('HTML').append(   newchat  );

}else{
    $('#chatWrapper').show();
}
// Get the chat window and the spotlight search




    }
}


function gpt3Prompt(PROMPT, input1 = '', callback) {
    chrome.runtime.sendMessage({ id: 'gpt3Prompt', prompt: PROMPT.split("[prompt]").join(""), input1: input1 }, (response) => {
   //   ////console.log(response);

   var promo = "";

   if(user_plan == "free"){
       promo = " @cheatlayer #chatgpt";
       $(".chat__main").append(`
       <div class="chat__bubble bubble__answer"  id="messageAnswer">
                   <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                   <div class="text__wrap">
                   <p><pre  style="margin: 0px; font-size: 16px; line-height: 18px; color: #3D2070;display: inline-block; white-space: pre-line;" class='answerCheats' disabled>Please note that free accounts add #cheatlayer and #chatgpt to their automated social posts. Upgrade on the <a href='https://cheatlayer.com/billing'>billing page</a> to remove the hashtags.</pre></p>
                   </div>
               </div>`);
   }


      callback(response + promo);
    });
  }

function resultPageParse(data) {    
    var googleSheetURL = data.googleSheetURL;
    var googleSheetName = data.googleSheetName;

    ////console.log('this is happening');
    var properties = document.querySelectorAll('#grid-search-results > ul > li:not([data-test="search-list-first-ad"])');

    for (var i = 0; i < properties.length; i++) {
        var currentProperty = properties[i];
        var propertyURL = currentProperty.querySelector(':scope a');

        if (propertyURL != null) {
            propertyURL = propertyURL.href;
        }

        zillowRunWithDelay(propertyURL, i, googleSheetURL, googleSheetName);
    }
}

function zillowRunWithDelay(propertyURL, delay, googleSheetURL, googleSheetName) {
    setTimeout(function() {
        runOnTab(
            propertyURL,
            zillowPropertyScrapper(),
            10,
            {
                'newWindow': true,
                'googleSheetURL': googleSheetURL,
                'googleSheetName': googleSheetName,
                'currentRow': delay
            }
        );
    }, delay * 10000);
}

function zillowPropertyScrapper() {
    return `
        var googleSheetURL = options.googleSheetURL;
        var googleSheetName = options.googleSheetName;
        
        var currentRow = options.currentRow;
        currentRow = parseInt(currentRow);
        currentRow = currentRow + 1;

        setTimeout(function() {
            // Get current property
            var currentProperty = document.querySelector('.layout-container');
    
            // Property price
            var propertyPrice = currentProperty.querySelector('span[data-testid="price"]');
            if (propertyPrice != null) {
                propertyPrice = propertyPrice.innerText;
            }
    
            // Property composition
            var propertyBedrooms = '';
            var propertyBathrooms = '';
            var propertySize = '';
            var propertyCompositionContainer = currentProperty.querySelector('span[data-testid="bed-bath-beyond"]');
            if (propertyCompositionContainer != null) {
                propertyBedrooms = propertyCompositionContainer.querySelector(':scope > span[data-testid="bed-bath-item"]:first-child').innerText;
                propertyBathrooms = propertyCompositionContainer.querySelector(':scope > span[data-testid="bed-bath-item"]:nth-child(3)');
                if (propertyBathrooms == null) {
                    propertyBathrooms = propertyCompositionContainer.querySelector(':scope > button:nth-child(3)');
                }
                propertyBathrooms = propertyBathrooms.innerText;
                propertySize = propertyCompositionContainer.querySelector(':scope > span[data-testid="bed-bath-item"]:last-child').innerText;
            }
    
            // Property price cut
            var propertyPriceCut = currentProperty.querySelector(':scope .summary-container > div > div > div > div > div:nth-child(2) > span:first-child');
            if (propertyPriceCut != null) {
                propertyPriceCut = propertyPriceCut.innerText;
            } else {
                propertyPriceCut = '';
            }
    
            // Property address
            var propertyAddress = currentProperty.querySelector(':scope h1').innerText;
            var propertySimpleAddress = '';
            var propertyCity = '';
            var propertyState = '';
            var propertyZipCode = '';
    
            // Property address
            var pattern = /(.),.,/;
            var found = propertyAddress.match(pattern);
            if (found != null) {
                propertySimpleAddress = found[1];
            } else {
                propertySimpleAddress = '';
            }
    
            // Property city
            var pattern = /.,(.),/;
            var found = propertyAddress.match(pattern);
            if (found != null) {
                propertyCity = found[1];
            } else {
                propertyCity = '';
            }
    
            // Property state
            var pattern = /.,.,(\D+)/;
            var found = propertyAddress.match(pattern);
            if (found != null) {
                propertyState = found[1];
            } else {
                propertyState = '';
            }
    
            // Property zip code
            var pattern = /.,.,\D+(\d+)/;
            var found = propertyAddress.match(pattern);
            if (found != null) {
                propertyZipCode = found[1];
            } else {
                propertyZipCode = '';
            }
    
            // Property owner
            var propertyOwner = currentProperty.querySelector('p[data-testid="attribution-owner"]');
            if (propertyOwner != null) {
                propertyOwner = propertyOwner.innerText;
                propertyOwner = propertyOwner.replace('Property Owner', '');
            }
    
            // Property overview
            var elements = currentProperty.querySelectorAll('h4');
            var propertyOverview = '';
            for (var i = 0; i < elements.length; i++) {
                var currentElement = elements[i];
                if (currentElement.innerText == 'Overview') {
                    currentElement = currentElement.parentElement;
                    propertyOverview = currentElement.querySelector(':scope h4 + div > div:nth-child(2) > div');
                    if (propertyOverview != null) {
                        propertyOverview = propertyOverview.innerText;
                    }
                }
            }

            google_sheets_update_cell(googleSheetURL, googleSheetName, [propertyPrice], "A", currentRow);
            google_sheets_update_cell(googleSheetURL, googleSheetName, [propertyPriceCut], "B", currentRow);
            google_sheets_update_cell(googleSheetURL, googleSheetName, [propertyBedrooms], "C", currentRow);
            google_sheets_update_cell(googleSheetURL, googleSheetName, [propertyBathrooms], "D", currentRow);
            google_sheets_update_cell(googleSheetURL, googleSheetName, [propertySize], "E", currentRow);
            google_sheets_update_cell(googleSheetURL, googleSheetName, [propertyAddress], "F", currentRow);
            google_sheets_update_cell(googleSheetURL, googleSheetName, [propertyOwner], "G", currentRow);
            google_sheets_update_cell(googleSheetURL, googleSheetName, [propertyOverview], "H", currentRow);
        }, 2 * 1000);
    `;
}

$(window).click(function (e) {
    var x = e.clientX,
        y = e.clientY,
        stack = [];

    var allElements = document.getElementsByTagName('*');
    var len = allElements.length;

    for (var i = 0; i < len; i++) {
        var elm = allElements[i];
        var rect = elm.getBoundingClientRect();

        if (y >= rect.top && y <= rect.bottom && x >= rect.left && x <= rect.right) {
            //stack.push(elm);
            // elem.click();
        }
    }
});

var storage_html = '';

JSON.unflatten = function (data) {
    "use strict";
    if (Object(data) !== data || Array.isArray(data))
        return data;
    var result = {}, cur, prop, parts, idx;
    for (var p in data) {
        cur = result, prop = "";
        parts = p.split(".");
        for (var i = 0; i < parts.length; i++) {
            idx = !isNaN(parseInt(parts[i]));
            cur = cur[prop] || (cur[prop] = (idx ? [] : {}));
            prop = parts[i];
        }
        cur[prop] = data[p];
    }
    return result[""];
}
JSON.flatten = function (data) {
    var result = {};
    function recurse(cur, prop) {
        if (Object(cur) !== cur) {
            result[prop] = cur;
        } else if (Array.isArray(cur)) {
            for (var i = 0, l = cur.length; i < l; i++)
                recurse(cur[i], prop ? prop + "." + i : "" + i);
            if (l == 0)
                result[prop] = [];
        } else {
            var isEmpty = true;
            for (var p in cur) {
                isEmpty = false;
                recurse(cur[p], prop ? prop + "." + p : p);
            }
            if (isEmpty)
                result[prop] = {};
        }
    }
    recurse(data, "");
    return result;
}


chrome.storage.sync.get("cheatlayer", function (obj) {
    //   ////console.log(JSON.stringify(obj));
    //   ////console.log(obj["cheatlayer"])
    obj = JSON.parse(obj["cheatlayer"])

    //   ////console.log(obj)

    var treeData = obj;

    let root = d3.hierarchy(treeData, function (d) {
        if (typeof d == "object")
            return Object.keys(d).filter(d => d != "$name").map(k => {
                if (typeof d[k] == "object") d[k].$name = k.substring(0, 30);
                else d[k] = k + " : " + d[k];
                return d[k];
            });
    })


    var width = document.getElementById("data_layer").clientWidth * .8;
    var height = 600;

    margin = { left: 10, top: 10, right: 50, bottom: 50 }

    var svg = d3.select("#data_layer").append("svg")
        .attr("width", width)
        .attr("height", height).call(d3.zoom().on("zoom", function () {
            svg.attr("transform", d3.event.transform)
        }))
        .append("g");

    var g = svg.append("g").attr('transform', 'translate(' + margin.left + ',' + margin.right + ')');

    var tree = d3.tree()
        .size([height - margin.top - margin.bottom, width - margin.left - margin.right]);

    var link = g.selectAll(".link")
        .data(tree(root).links())
        .enter().append("path")
        .attr("class", "link")
        .attr("d", d3.linkHorizontal()
            .x(function (d) { return d.y; })
            .y(function (d) { return d.x; }));

    var node = g.selectAll(".node")
        .data(root.descendants())
        .enter().append("g")
        .attr("class", function (d) { return "node" + (d.children ? " node--internal" : " node--leaf"); })
        .attr("transform", function (d) { return "translate(" + d.y + "," + d.x + ")"; })

    node.append("circle")
        .attr("r", 2.5);

    node.append("text")
        .text(function (d) { return d.data.$name || d.data; })
        .attr('y', -10)
        .attr('x', -10)
        .attr('text-anchor', 'middle');
}
)
var storage_json = {};
chrome.storage.sync.get("cheatlayer", function (obj) {
    ///    ////console.log(JSON.stringify(obj));
    //  ////console.log(obj["cheatlayer"])
    obj = JSON.parse(obj["cheatlayer"])
    //   ////console.log("STORING NO CODE TRY")
    //   ////console.log(obj)
    storage_json = obj;
    window.task_data = obj;
    for (var key2 in obj) {
        //   ////console.log(key2)
        for (var key in obj[key2]) {
            //////console.log("KEY  TEST: " + key)
            if (obj[key2].hasOwnProperty(key)) {
                //    ////console.log(key + " -> " + obj[key2][key]);
                storage_html += "var " + key + " = `" + obj[key2][key] + "`;";
                storage_vars.push(key)
                //   ////console.log("STORING NO CODE")
                //   ////console.log(no_code_container)
                //   ////console.log(storage_vars)
            }
        }
    }
});
function scrapeBasic(sheets_url, sheet_name = "Sheet1", options) {

    var search_in = document.body.innerHTML;
    string_context = search_in.toString();
    array_mails = [];

    if (options.includes("emails")) {
        array_mails = array_mails.concat(string_context.match(/([a-zA-Z0-9._-]+@[a-zA-Z0-9._-]+\.[a-zA-Z0-9._-]+)/gi));
    }

    if (options.includes("phone")) {
        ////console.log("PHONE")
        ////console.log(string_context.match(/[^\d\s]?(\d+[^\d]?)+\d+/mg).map(textPart => textPart.replace(/\D/mg, '')))
        array_mails = array_mails.concat(string_context.match(/[^\d\s]?(\d+[^\d]?)+\d+/mg).map(textPart => textPart.replace(/\D/mg, '')));
    }


    if (options.includes("html")) {
        var markup = document.documentElement.innerHTML;
        array_mails = array_mails.concat(markup.match(/(.|[\r\n]){1,40000}/g));

    }
    //console.log(options)

    if (options.includes("images")) {
        //Generating GPT-3 code.. Please wait up to 20 seconds//Generated Script id=0
        var images = document.getElementsByTagName('img');
        for (var kk = 0; kk < images.length; kk++) {
            //console.log(images[kk].src);
            array_mails.push(images[kk].src)
            downloadFile(images[kk].src)
        }
        //endcode GPT Prompt: Collect all the images on the page and print their source and inner text. 

    }

    if (options.includes("videos")) {

        var images = document.getElementsByTagName('video');
        for (var kk = 0; kk < images.length; kk++) {
            if(typeof images[kk].getElementsByTagName("source")[0] != "undefined"){
            //console.log(images[kk].getElementsByTagName("source")[0].src);
            for (var jj = 0; jj < images[kk].getElementsByTagName("source").length; jj++) {
                array_mails.push(images[kk].getElementsByTagName("source")[jj].src)
                downloadFile(images[kk].getElementsByTagName("source")[jj].src)

            }
        }

        }
        var images = document.getElementsByTagName('video');
        for (var kk = 0; kk < images.length; kk++) {
            if(typeof images[kk].src != "undefined"){
            array_mails.push(images[kk].src)
                downloadFile(images[kk].src)
            }
        }
    }

    if (options.includes("tables")) {
        var rows = document.getElementsByTagName('tr');
        var array_mails = [];
        for (var kk = 0; kk < rows.length; kk++) {
            array_mails.push(rows[kk].innerText);
        }
    }

    if (options.includes("links")) {
        var images = document.getElementsByTagName('a');
        for (var kk = 0; kk < images.length; kk++) {
            array_mails.push(images[kk].href)
            array_mails.push(images[kk].innerText)

        }
    }

    if (options.includes("meta")) {

        var meta = document.getElementsByTagName('meta');
        //console.log(JSON.stringify(meta));
        for (var kk = 0; kk < meta.length; kk++) {
            if (meta[kk].content.length > 0) {
                //console.log(meta[kk].content)
                array_mails.push(meta[kk].content)
            }
        }
    }

    if (options.includes("text")) {

        var markup = document.documentElement.innerText;
        array_mails = array_mails.concat(markup);
    }
    ///^[\.-)( ]*([0-9]{3})[\.-)( ]*([0-9]{3})[\.-)( ]*([0-9]{4})$/

    if (array_mails.length == 0) {
        array_mails.push("no data")
    }
    if (options.includes("tables")) {
        for (var kk = 0; kk < array_mails.length; kk++) {
            google_sheets_add_row(sheets_url, sheet_name, array_mails[kk].split("\t"))
        }
    } else {
        google_sheets_add_row(sheets_url, sheet_name, array_mails)
    }
    //console.log(array_mails)
    //console.log(sheet_name)
    //console.log(sheets_url)
}

function runScriptEval() {

  

    old_code = window.editor.getValue();

    var datascript = window.editor.getValue();
    //.dropdown:hover .dropdown-content {display: block;}
    var saved_script = datascript;

    //"Enter your google sheets URL with group URL
    //console.log("Running Script!");
    document.getElementById('cheatmenu').click();

    // //console.log(datascript);
    if (!saved_script.includes("[Tab Recording]")) {
        if (datascript.includes("[prompt]") && !datascript.includes("sendAjax")) {
            SendMessage("gpt3Prompt", "data", { prompt: datascript.split("[prompt]").join(""), input1: "", input2: "", input3: "", input4: "", input5: ""})
        }else{
    
            //console.log(saved_script)
        eval(saved_script);
        }
    } else {

        SendMessage("playRecording", "recording", saved_script);

    }
    if (last_saved != "new") {
        var scriptIndex = 0;
        for (var i = 0; i < scripts.length; i++) {
            if (scripts[i].name == last_saved) {
                scriptIndex = i;
                break;
            }
        }


        if (typeof scripts[scriptIndex]["log"] == "undefined") {
            scripts[scriptIndex]["log"] = {};
            scripts[scriptIndex]["runs"] = 0;

        }
        scripts[scriptIndex]["runs"] = parseInt(scripts[scriptIndex]["runs"]) + 1;
        var today = new Date();
        var today = new Date();
        var currentDay = msToTime(today.getTime());

        scripts[scriptIndex]["log"][currentDay] = scripts[scriptIndex]["runs"];
        currentRun = scripts[scriptIndex]["runs"];
        SendMessage("Scripts", "target", { scripts: scripts });
        block_update = true;
        setTimeout(function () { block_update = false }, 10000);
    }


}


function genChat(message){
    launchAtlas();
    SendMessage("getTasks", "target", {  });
setTimeout(function(){
lastInput = message;
  if(true){
       
            

                    if(window.location.href.includes(".pdf")){
                        var pdf = window.location.href;

                        function gettext(pdfUrl){
                            var pdf = pdfjsLib.getDocument(pdfUrl);
                            //console.log(pdf);
                            return pdf.promise.then(function(pdf) { // get all pages text
                              //console.log(pdf)
                              var maxPages = pdf._pdfInfo.numPages;
                              var countPromises = []; // collecting all page promises
                              for (var j = 1; j <= maxPages; j++) {
                                var page = pdf.getPage(j);
                          
                                var txt = "";
                                countPromises.push(page.then(function(page) { // add page promise
                                  var textContent = page.getTextContent();
                                  return textContent.then(function(text){ // return content promise
                                    return text.items.map(function (s) { return s.str; }).join(''); // value page text 
                                  });
                                }));
                              }
                              // Wait for all pages and join text
                              return Promise.all(countPromises).then(function (texts) {
                                return texts.join('');
                              });
                            });
                          }
                              pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.15.349/build/pdf.worker.js';
                           
                          // waiting on gettext to finish completion, or error
                          gettext(window.location.href).then(function (text) {
                            //console.log('parse ' + text); 
                            window.pdf = text; 
                            lastInput = "Question:" + lastInput + "\nPDF article text:" + text.substring(0,6500).split("\n").join(" ").split('"').join('') + "###\n";
                            //console.log("FAQ")
                            //console.log(lastInput)
                            if(new RegExp("([a-zA-Z0-9]+://)?([a-zA-Z0-9_]+:[a-zA-Z0-9_]+@)?([a-zA-Z0-9.-]+\\.[A-Za-z]{2,4})(:[0-9]+)?(/.*)?").test(lastInput)){

                        }
            
                            chat_log.push({"role": "user", "content": lastInput})
                        //console.log(lastInput);
            
                                 //     drawNoCodeContainer();
            
                                // drawNoCodeContainer();
                                if(!added_save){                
                                    
                                 $('.buttons__controls').append('<button class="saveChat">Save Prompt</button><button class="savePrompt">Save Code</button><button class="stopChat">Stop</button>');
                                 $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);
                                 added_save = true;
                                }
            
                                 $(document).on('click', '.stopChat', function () {
                                    $('.stopChat').remove();
                                    SendMessage("stopAtlas", "data", {});
                                    window.location.reload();
                                 });
                                 $(document).on('click', '.saveChat', function () {
                                    $('.saveChat').remove();
                                    $('.savePrompt').remove();
                                    if(!window.location.href.includes("spreadsheets")){
            
                                        SendMessage("show_cheatlayer", "data", "");
                                        setTimeout(function(){
                                            if(atlas_output.includes("genAtlas"))
                                            {
                                            window.editor.setValue(old_code +  "\n//Generated Script id="  + code_ids  + "\n"+ atlas_output + "\n//endcode\n");
                                            var no_code_code = `  Start Code
                                            Endpoint : Project Atlas<br> 
                                            Prompt:<br>
                                            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PAPROMPTKEY'  value='` + lastInput + `'></input><br>
                                            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                                            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                                            End Code`;
                                no_code_container.push({ selector: "", options: [], code_ids: code_ids, variablenames: [], variables: "", style: "projectatlas", id: code_ids, no_code:no_code_code });
                                code_ids++;
                                    saveScript();
                                    atlas_output = "";
                                            }
                                        }, 500);
                                    }                        
                                 });


                                 $(document).on('click', '.savePrompt', function () {
                                    $('.saveChat').remove();
                                    $('.savePrompt').remove();
                                    if(!window.location.href.includes("spreadsheets")){
            
                                        SendMessage("show_cheatlayer", "data", "");
                                        setTimeout(function(){
                                            if(atlas_output.includes("genAtlas"))
                                            {
                                            window.editor.setValue(old_code +  "\n//Generated Script id="  + code_ids  + "\n"+ last_code + "\n//endcode\n");
                                            var no_code_code = `  Start Code
                                            Endpoint : Project Atlas<br> 
                                            Prompt:<br>
                                            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PAPROMPTKEY'  value='` + lastInput + `'></input><br>
                                            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                                            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                                            End Code`;
                                no_code_container.push({ selector: "", options: [], code_ids: code_ids, variablenames: [], variables: "", style: "projectatlas", id: code_ids, no_code:no_code_code });
                                code_ids++;
                                    saveScript();
                                    atlas_output = "";
                                            }
                                        }, 500);
                                    }                        
                                 });

                                 var currentTab_id = 0;
                           
                                 //console.log(currentTab_id)
                                 //console.log(chat_log)
                                 //console.log("genChatGPT3")
                        SendMessage("genChatGPT", "data",  {tab: currentTab_id, chat_log: chat_log, url: window.location.href, lastInput: lastInput, mode: "automation generator"});

                          }, 
                          function (reason) {
                            console.error(reason);
                          });


                    }else{
                         
       
                var all = document.getElementsByTagName("*");
                //console.log(all)
                HtmlSanitizer.AllowedTags['CODE'] = false;
                    HtmlSanitizer.AllowedTags['MAIN'] = true;
                    HtmlSanitizer.AllowedTags['IMG'] = false;

                 html = HtmlSanitizer.SanitizeHtml(document.documentElement.innerHTML);

                 var htmlObject = document.createElement('div');
                 htmlObject.innerHTML = html;

                 var newElems = document.getElementsByTagName("*");


                 for (var i=0, max=newElems.length; i < max; i++) {
                      // Do something with the element here
                      if(typeof newElems[i] != "undefined" && typeof newElems[i].innerText != "undefined" && newElems[i].innerText.replace(/\s/g, "").replace(/\r?\n|\r/g, " ").replace((/  |\r\n|\n|\r/gm),"").replace(/\s/g,'').length <= 2){
                     //   newElems[i].remove();
                      }
                 }


                var html_formatted_string = "";

                for(var kk = 0; kk < newElems.length; kk++){
                    if(typeof newElems[kk].className == "string" && newElems[kk].nodeName != "SCRIPT" && newElems[kk].nodeName != "META" && newElems[kk].nodeName!= "STYLE" && (newElems[kk].className.length > 2 || newElems[kk].id.length > 2)){
                        //console.log(newElems[kk].className)

                    html_formatted_string += newElems[kk].nodeName + ";" + newElems[kk].className.substring(0,20) + ";" + newElems[kk].id + ";" + newElems[kk].innerText.replace(/\s/g, "").replace(/\r?\n|\r/g, " ").replace((/  |\r\n|\n|\r/gm),"").replace(/\s/g,'').substring(0,25) + "\n";
                    }
                    if(typeof newElems[kk].innerText != "undefined" && newElems[kk].innerText.replace(/\s/g, "").replace(/\r?\n|\r/g, " ").replace((/  |\r\n|\n|\r/gm),"").replace(/\s/g,'').substring(0,100).length > 2 && newElems[kk].innerText.replace(/\s/g, "").replace(/\r?\n|\r/g, " ").replace((/  |\r\n|\n|\r/gm),"").replace(/\s/g,'').substring(0,25)  != "Facebook" && newElems[kk].innerText.replace(/\s/g, "").replace(/\r?\n|\r/g, " ").replace((/  |\r\n|\n|\r/gm),"").replace(/\s/g,'').substring(0,25)  != "Seemore" && newElems[kk].innerText.replace(/\s/g, "").replace(/\r?\n|\r/g, " ").replace((/  |\r\n|\n|\r/gm),"").replace(/\s/g,'').substring(0,25)  != "Marketplace" && newElems[kk].innerText.replace(/\s/g, "").replace(/\r?\n|\r/g, " ").replace((/  |\r\n|\n|\r/gm),"").replace(/\s/g,'').substring(0,25)  != "Groups"){
                }
            }
                var selector_context = "";



                for(var kk = 0; kk < context_array.length; kk++){
                    for(var jj = 0; jj < context_array[kk].keywords.length; jj++){
                        if(window.location.href.toLowerCase().includes(context_array[kk].keywords[jj].toLowerCase())){

                            selector_context = context_array[kk].context;

                        }
                    }
                }
                console.log(context_array)
                console.log(window.location.href)
                console.log("selector context2:" + selector_context)
                
                lastInput += "\nselector context:" + selector_context;

                lastInput += "\nwebsite HTML:" + html.substring(0,6000).split("\n").join(" ").split('"').join('');

            

        
            if(lastInput.toLowerCase().includes("fail") ||lastInput.toLowerCase().includes("didn't work") || lastInput.toLowerCase().includes("did not work") || lastInput.toLowerCase().includes("doesn't work") || lastInput.toLowerCase().includes("does not work") || lastInput.toLowerCase().includes("failed") || lastInput.toLowerCase().includes("not working") || lastInput.toLowerCase().includes("not work")){
                chat_log.pop();
                chat_log.pop();
            }

            if(new RegExp("([a-zA-Z0-9]+://)?([a-zA-Z0-9_]+:[a-zA-Z0-9_]+@)?([a-zA-Z0-9.-]+\\.[A-Za-z]{2,4})(:[0-9]+)?(/.*)?").test(lastInput)){

            }

                chat_log.push({"role": "user", "content": lastInput})
            //console.log(lastInput);

                     //     drawNoCodeContainer();
              
                    // drawNoCodeContainer();
                    if(!added_save){                
                        
                        $('.buttons__controls').append('<button class="saveChat">Save Prompt</button><button class="savePrompt">Save Code</button><button class="stopChat">Stop</button>');
                        $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);
                     added_save = true;
                    }

                     $(document).on('click', '.stopChat', function () {
                        $('.stopChat').remove();
                        SendMessage("stopAtlas", "data", {});
                        window.location.reload();
                     });
                     $(document).on('click', '.savePrompt', function () {
                        $('.saveChat').remove();
                        $('.savePrompt').remove();
            if(!window.location.href.includes("spreadsheets")){

                            SendMessage("show_cheatlayer", "data", "");
                            setTimeout(function(){
                                if(atlas_output.includes("genAtlas"))
                                {
                                window.editor.setValue(old_code +  "\n//Generated Script id="  + code_ids  + "\n"+ last_code + "\n//endcode\n");
                                var no_code_code = `  Start Code
                                Endpoint : Project Atlas<br> 
                                Prompt:<br>
                                <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PAPROMPTKEY'  value='` + lastInput + `'></input><br>
                                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                                End Code`;
                    no_code_container.push({ selector: "", options: [], code_ids: code_ids, variablenames: [], variables: "", style: "projectatlas", id: code_ids, no_code:no_code_code });
                    code_ids++;
                        saveScript();
                        atlas_output = "";
                                }
                            }, 500);
                        }                        
                     });
                     $(document).on('click', '.saveChat', function () {
                        $('.saveChat').remove();
                        $('.savePrompt').remove();
            if(!window.location.href.includes("spreadsheets")){

                            SendMessage("show_cheatlayer", "data", "");
                            setTimeout(function(){
                                if(atlas_output.includes("genAtlas"))
                                {
                                window.editor.setValue(old_code +  "\n//Generated Script id="  + code_ids  + "\n"+ atlas_output + "\n//endcode\n");
                                var no_code_code = `  Start Code
                                Endpoint : Project Atlas<br> 
                                Prompt:<br>
                                <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PAPROMPTKEY'  value='` + lastInput + `'></input><br>
                                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                                End Code`;
                    no_code_container.push({ selector: "", options: [], code_ids: code_ids, variablenames: [], variables: "", style: "projectatlas", id: code_ids, no_code:no_code_code });
                    code_ids++;
                        saveScript();
                        atlas_output = "";
                                }
                            }, 500);
                        }                        
                     });
                     
                     var currentTab_id = 0;
                     if(lastInput.toLowerCase().includes('current page') || lastInput.toLowerCase().includes('current site') || lastInput.toLowerCase().includes('this page') || lastInput.toLowerCase().includes('this website') || lastInput.toLowerCase().includes('current website')){
                        lastInput += "\n website text:" + document.body.innerText.substring(0,6000).split("\n").join(" ").split('"').join('');
                        //console.log("FAQ")
                        //console.log(lastInput)
                    } 
                     //console.log(currentTab_id)
                     //console.log(chat_log)
                     //console.log("genChatGPT4")
            SendMessage("genChatGPT", "data", {tab: currentTab_id, chat_log: chat_log, url: window.location.href, lastInput: lastInput, mode: "automation generator"});


                    }
        }


    
      if (message == '') return;
      var  messages = document.getElementById('messagesCheat');
  
      var  messageText = message;
      if (messageText) {
          
  
          $(".chat__main").append(`
          <div class="chat__bubble bubble__user"  id="messageUser">
          <div class="text__wrap">
              <p>` + messageText + `</p>
          </div>
          <span></span>
      </div>
  `);
  
      }
  
      $(".chat__main").append(`
      <div class="chat__bubble bubble__answer"  id="messageAnswer">
                  <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                  <div class="text__wrap">
                  <p><pre  style="margin: 0px; font-size: 16px; line-height: 18px; color: #3D2070;display: inline-block; white-space: pre-line;" class='answerCheats' disabled>Generating a custom solution. Please wait up to 1 minute.</pre></p>
                  </div>
              </div>`);

              $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);

          if (!messages.classList.contains('active')) {
              messages.classList.add('active');
              chatWrapper.classList.add('expanded');
              setTimeout(() => {
                  chatWrapper.style.transition = 'none';
                  }, 2000);
          }
  
      if(!$('.buttons__controls').html().includes("Save")){
        if(!added_save){                
                        
            $('.buttons__controls').append('<button class="saveChat">Save Prompt</button><button class="savePrompt">Save Code</button><button class="stopChat">Stop</button>');
            $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);
         added_save = true;
        }  }        
      
    },2000);
  }

function genAtlas(message){
  launchAtlas();
    SendMessage("genAtlas", "data", { prompt:message, url: window.location.href, createdAt: new Date().getTime() });
    lastInput = message;





    if (message == '') return;
    var  messages = document.getElementById('messagesCheat');

    var  messageText = message;
    if (messageText) {
        

        $(".chat__main").append(`
        <div class="chat__bubble bubble__user"  id="messageUser">
        <div class="text__wrap">
            <p>` + messageText + `</p>
        </div>
        <span></span>
    </div>
`);
$(".chat__main").append(`
<div class="chat__bubble bubble__answer"  id="messageAnswer">
            <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
            <div class="text__wrap">
            <p><pre  style="margin: 0px; font-size: 16px; line-height: 18px; color: #3D2070;display: inline-block; white-space: pre-line;" class='answerCheats' disabled>Running automation. Please wait up to 10 seconds...</pre></p>
            </div>
        </div>`);
    }

        if (!messages.classList.contains('active')) {
            messages.classList.add('active');
            chatWrapper.classList.add('expanded');
            setTimeout(() => {
                chatWrapper.style.transition = 'none';
                }, 2000);
        }

    if(!$('.buttons__controls').html().includes("Save")){
        if(!added_save){                
                        
            $('.buttons__controls').append('<button class="saveChat">Save Prompt</button><button class="savePrompt">Save Code</button><button class="stopChat">Stop</button>');
            $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);
         added_save = true;
        } }        
    

}
function simulateKey(code) {

    var currentTab_id = 0;

    //console.log(currentTab_id)


    SendMessage("simulateKey", "Code", { id: currentTab_id, code: code.replace(/(\r\n|\n|\r)/gm, "") });



}


function simulateMouseClick(targetNode) {
    function triggerMouseEvent(targetNode, eventType) {
        var clickEvent = document.createEvent('MouseEvents');
        clickEvent.initEvent(eventType, true, true);
        targetNode.dispatchEvent(clickEvent);
    }
    ["mouseover", "mousedown", "mouseup", "click"].forEach(function (eventType) {
        triggerMouseEvent(targetNode, eventType);
    });
}

function write_firebase(url, data) {

    SendMessage("write_firebase", "data", { url: url, data: data });

}
function OCR(element) {

    SendMessage("OCR", "data", {
        element: element.src
    });

}
function read_firebase(url) {

    SendMessage("read_firebase", "data", { url: url });

}

function loopEval() {

}
var recorded_events = {};
function record() {

    recordInProgress = true;

    var ctrlKeyDown = false;

    // After recording is starting, startTimeDelay is set to the Unix time difference when the page was loaded and when recording started.
    // We use this value to adjust the timestamp stored on recorded events -- we don't want the dead time that occurs from when the page is loaded
    // until the recording is started to be reflected in our playback script.
    var startTimeDelay = new Date().getTime();

    /*	Function: _getSelectionText
            This function will retrieve the value of the text currently selected by the user.
        
        Returns: String
    */
    var _getSelectionText = function () {
        var text = "";
        var activeEl = document.activeElement;
        var activeElTagName = activeEl ? activeEl.tagName.toLowerCase() : null;
        if (
            (activeElTagName == "textarea") || (activeElTagName == "input" &&
                /^(?:text|search|password|tel|url)$/i.test(activeEl.type)) &&
            (typeof activeEl.selectionStart == "number")
        ) {
            text = activeEl.value.slice(activeEl.selectionStart, activeEl.selectionEnd);
        } else if (window.getSelection) {
            text = window.getSelection().toString();
        }
        return text;
    };

    /*	Function: logEvent
            This function will parse the 
    
    */
    var logEvent = function (event) {

        // Only record the event if recording is in progress
        if (recordInProgress == true) {

            if (getSelector(event.target) === "document") {
                userEvent = { "selector": cssPath(document.body) };
            } else {
                userEvent = { "selector": cssPath(event.target) };
            }
            //  //console.log(userEvent);  
            if (event.type === "scroll") {
                userEvent.type = "scroll";
                userEvent.scrollTop = $(event.target).scrollTop();
                userEvent.scrollLeft = $(event.target).scrollLeft();
                userEvent.timeStamp = event.timeStamp;
            } else {
                for (var prop in event) {
                    // We can only record plain such as string, numbers and booleans in JSON. Objects will require special processing.
                    if (["number", "string", "boolean"].indexOf(typeof event[prop]) > -1
                        // Exclude certain event event attributes in order to keep the JSON log as small as possible.
                        // These attributes are not needed to re-create the event during playback.
                        && ["AT_TARGET", "BUBBLING_PHASE", "CAPTURING_PHASE", "NONE", "DOM_KEY_LOCATION_STANDARD", "DOM_KEY_LOCATION_LEFT", "DOM_KEY_LOCATION_RIGHT", "DOM_KEY_LOCATION_NUMPAD"].indexOf(prop) == -1) {
                        userEvent[prop] = event[prop];
                    } else if (["touches", "changedTouches"].indexOf(prop) > -1) {

                        userEvent[prop] = [];

                        for (var i = 0; i < event[prop].length; i++) {
                            var touch = event[prop][i];
                            userEvent[prop].push({
                                "clientX": touch.clientX
                                , "clientY": touch.clientY
                                , "force": touch.force
                                , "identifier": touch.identifier
                                , "pageX": touch.pageX
                                , "pageY": touch.pageY
                                , "radiusX": touch.radiusX
                                , "radiusY": touch.radiusY
                                , "rotationAngle": touch.rotationAngle
                                , "screenX": touch.screenX
                                , "screenY": touch.screenY
                                , "selector": getSelector(touch.target)
                            });

                        }

                    }
                }
            }

            // Subtract the start time delay from the timestamp so we don't include the dead time (i.e., time between
            // page load and recording started) in our playback JSON log.
            userEvent.timeStamp = userEvent.timeStamp - startTimeDelay;

            if (userEvent.selector !== null) {
                if (playbackInProgress == false) {
                    // userEventLog.push(userEvent);
                    var event = userEvent;
                    event["url"] = window.location.href.split("?")[0];
                    SendMessage("log_events", "userEvent", userEvent);
                    //  //console.log(userEvent);
                    //  //console.log(userEvent);
                    //   //console.log("Logged "+userEvent.type+" event.");
                    //  //console.log(userEventLog);
                }
            } else {
                console.warn("Null selector");
            }
        }
    };

    /*	Function: getSelector
            This function starts at the DOM element specified by 'el' and traverses upward through the DOM tree building out a unique 
            CSS selector for the DOM element 'el'.
            
        Parameters:
            el - DOM element, the element that we want to determine CSS selector
            names - Array of strings, records the CSS selectors for the target element and parent elements as we progress up the DOM tree.
        
        Returns:
            String, a unique CSS selector for the target element (el).
    */
    var getSelector = function (el, names) {
        if (el === document || el === document.documentElement) return "document";
        if (el === document.body) return "body";
        if (typeof names === "undefined") var names = [];
        if (el.className) {
            var arrNode = [].slice.call(el.parentNode.getElementsByClassName(el.className));
            var classSelector = el.className.split(" ").join(".");
            if (arrNode.length == 1) {
                names.unshift(el.tagName.toLowerCase() + "." + classSelector);
            } else {
                for (var c = 1, e = el; e.previousElementSibling; e = e.previousElementSibling, c++);
                names.unshift(el.tagName.toLowerCase() + ":nth-child(" + c + ")");
            }
        } else {
            for (var c = 1, e = el; e.previousElementSibling; e = e.previousElementSibling, c++);
            names.unshift(el.tagName.toLowerCase() + ":nth-child(" + c + ")");
        }

        if (el.parentNode !== document.body) {
            getSelector(el.parentNode, names)
        }
        return names.join(" > ");
    };

    document.addEventListener('click', function (event) { logEvent(event); }, true);
    document.addEventListener('mousedown', function (event) { logEvent(event); }, true);
    document.addEventListener('mouseup', function (event) {

        logEvent(event);

        // if the user has selected text, then we want to record an extra 'contains' event. on playback, this is used
        // to verify that the selected text is contained within the target element
        var selectedText = _getSelectionText();
        if (selectedText.length > 1) {
            logEvent({ "target": document.activeElement, "type": "contains", "text": selectedText, "timeStamp": event.timeStamp });
        }
    }, true);
    document.addEventListener('input', function (event) {
        logEvent($.extend(true, event, { "value": $(event.target).val() }));
    }, true);
    document.addEventListener('focus', function (event) { logEvent(event); }, true);
    document.addEventListener('focusin', function (event) { logEvent(event); }, true);
    document.addEventListener('focusout', function (event) { logEvent(event); }, true);
    document.addEventListener('blur', function (event) { logEvent(event); }, true);
    document.addEventListener('keypress', function (event) { logEvent(event); }, true);
    // document.addEventListener('keydown',function(event) { logEvent(event); },true);
    // document.addEventListener('keyup',function(event) { logEvent(event); },true);
    document.addEventListener('touchstart', function (event) { logEvent(event); }, true);
    document.addEventListener('touchend', function (event) { logEvent(event); }, true);
    document.addEventListener('touchmove', function (event) { logEvent(event); }, true);
    document.addEventListener('touchcancel', function (event) { logEvent(event); }, true);
    document.addEventListener('scroll', function (event) { logEvent(event); }, true);

    return {

        /*	Method: start
                When this method is invoked, jsReplay will begin to record all user events that occur on the web page.
        */
        "start": function () {
            if (playbackInProgress == false) {

                //console.log("Start recording.");

                // Record the time that occurred from the page being loaded to the recording started. We will
                // subtract this value from the timestamp on the events in order to eliminate the dead time from our playback JSON log.
                startTimeDelay = Math.abs(startTimeDelay - new Date().getTime());
                // recordInProgress = true;

            } else {
                throw new Error("Cannot start recording -- test playback is in progress.");
            }
        },

        /*	Method: stop
                When this method is invoked, jsReplay will stop recording user events and print playback JSON script to the console.
        */

    };

    recording = true;
}
function replayEvents(events) {

}
var selectorHash = {};

function simulateEvent(userEvent) {



    if (userEvent.selector === "document") {
        var eventTarget = document;
    } else {
        var eventTarget = $(userEvent.selector)[0];
    }

    if (userEvent.hasOwnProperty("clientX") && userEvent.hasOwnProperty("clientY")) {

        // get the target based on the click coordinates
        var target = document.elementFromPoint(userEvent.clientX, userEvent.clientY);

        // verify that the target from the coordinates matches the logged CSS selector
        if (target === eventTarget) {
            //console.log("PASS - click target matches selector element.");
            selectorHash[userEvent.selector] = eventTarget;
        } else {
            throw new Error("FAIL - Element at point (" + userEvent.clientX + "px, " + userEvent.clientY + "px) does not match selector " + userEvent.selector);
        }

    }


    //    //console.log(userEvent.selector);


    //  //console.log(eventTarget);
    //  //console.log(userEvent);
    //console.log("Simulating event (" + (userEvent.timeStamp / 1000).toFixed(3) + "s). Selector: " + userEvent.selector);

    var event = null;

    switch (userEvent.type) {
        case "scroll":
            if (userEvent.selector == "document" && userEvent.type == "scroll") {
                $(window).scrollLeft(userEvent.scrollLeft);
                $(window).scrollTop(userEvent.scrollTop);

                // $("html, body").animate({scrollTop : userEvent.scrollTop, scrollLeft:userEvent.scrollLeft }, { queue: false, duration: 2000 });
            } else {
                $(eventTarget).scrollLeft(userEvent.scrollLeft);
                $(eventTarget).scrollTop(userEvent.scrollTop);
            }

            break;
        case "focusin":
        case "focusout":
        case "focus":
        case "blur":
            event = new FocusEvent(userEvent.type, userEvent);
            break;
        case "tap":
        case "click":
        case "mouseup":
        case "mousedown":
            event = new MouseEvent(userEvent.type, userEvent);
            break;
        case "touchstart":
        case "touchend":
        case "touchmove":
        case "touchcancel":

            var touchList = [];
            for (var i = 0; i < userEvent.touches.length; i++) {
                var touch = userEvent.touches[i];
                var newTouch = new Touch({
                    "clientX": touch.clientX
                    , "clientY": touch.clientY
                    , "force": touch.force
                    , "identifier": touch.identifier
                    , "pageX": touch.pageX
                    , "pageY": touch.pageY
                    , "radiusX": touch.radiusX
                    , "radiusY": touch.radiusY
                    , "rotationAngle": touch.rotationAngle
                    , "screenX": touch.screenX
                    , "screenY": touch.screenY
                    , "target": $(touch.selector)[0]
                });
                touchList.push(newTouch);
            }

            userEvent.touches = touchList;

            var touchList = [];
            for (var i = 0; i < userEvent.changedTouches.length; i++) {
                var touch = userEvent.changedTouches[i];
                var newTouch = new Touch({
                    "clientX": touch.clientX
                    , "clientY": touch.clientY
                    , "force": touch.force
                    , "identifier": touch.identifier
                    , "pageX": touch.pageX
                    , "pageY": touch.pageY
                    , "radiusX": touch.radiusX
                    , "radiusY": touch.radiusY
                    , "rotationAngle": touch.rotationAngle
                    , "screenX": touch.screenX
                    , "screenY": touch.screenY
                    , "target": $(touch.selector)[0]
                });
                touchList.push(newTouch);
            }

            userEvent.changedTouches = touchList;

            event = new TouchEvent(userEvent.type, userEvent);

            break;
        case "keypress":
        case "keydown":
        case "keyup":
            event = new KeyboardEvent(userEvent.type, userEvent);
            break;
        case "input":
            event = new Event(userEvent.type, userEvent);
            $(eventTarget).focus();
            simulateKey(userEvent.value);
            break;
        case "contains":
            verifyContains(userEvent);
            return;
        default:
            throw new Error("Unsupported event type.");
            break;
    }
    if (event !== null) {
        //  //console.log("normals!");

        eventTarget.dispatchEvent(event);
    }

};
var verifyContains = function (userEvent) {

    var elementText = $(userEvent.selector).val() || $(userEvent.selector)[0].innerHTML;

    if (elementText.indexOf(userEvent.text) !== -1) {
        //console.log("PASS - element does contain specified text.");
    } else {
        throw new Error("FAIL - element does not contain specified text.");
    }
};

function replayRecorder(events) {

    if (true) {
        //console.log("Stop recording.");

        recordInProgress = false;
        playbackInProgress = true;

        var playbackScript = {
            "window": { "width": window.innerWidth, "height": window.innerHeight }
            , "event_log": events
        };
        //    //console.log("WHAT");

        /* 	Function: verifyContains 
                Verifies whether the element specified by the userEvent.selector contains the text stored in userEvent.text
            
            Parameters:
                userEvent - Object, a single DOM event from the JSON playback file. 
            
            Returns:
                Boolean - true if the element does contain the specified text or false if it does not.
        */

        var timeStartedPlayback = new Date().getTime();

        var runSimulator = setInterval(function () {

            var currentTime = new Date().getTime();

            // we store the array length as a variable for performance reasons (faster than continually accessing the .length property).
            var userEventLength = playbackScript.event_log.length;

            // if the current time is greater than the timestamp of the first event in the array (e.g., 3000ms) plus when the playback started, 
            // then the event should be triggered
            if (currentTime > (playbackScript.event_log[0].timeStamp + timeStartedPlayback)) {
                do {
                    // we're going to trigger this event, so we remove it from the array
                    var userEvent = playbackScript.event_log.splice(0, 1)[0];

                    // reduce the array length, must be done manually since we've stored the length in a variable for performance reasons
                    userEventLength--;

                    // trigger the event
                    simulateEvent(userEvent);
                    document.getElementById("script").style.display = "none";
                    document.getElementById("newnocode").style.display = "none";
                    document.getElementById("console").style.display = "none";
                    document.getElementById("schedulerblock").style.display = "none";

                    // continue this loop for events that occurred up to 50ms in the future. we do this because a simple user action like a mouse click
                    // will trigger multiple events (click, mousedown, mouseup, etc). if those events were separated by even 10ms, then the DOM could change in-between
                    // those events and we'd encounter an element target mismatch. looking forward 200ms and firing them at the same time allows us to avoid this issue.
                } while (userEventLength > 0 && ((currentTime + 50) > (playbackScript.event_log[0].timeStamp + timeStartedPlayback)));
            }

            // if userEventLength is 0, then thatf means there are no more events to replay
            if (userEventLength == 0) {
                clearInterval(runSimulator);
                //console.log("Test script playback finished.");
                playbackInProgress = false;
                //  recordInProgress = true;
            }
        }, 10);

    }

}

function stop() {
    var last_event;
    var new_events = [];
    //console.log("STOP RECORDING");
    SendMessage("stopRecording", "stopRecording", "completed_steps");

    if (!document.getElementById('loadingCheat')) {
        $('HTML').append(`<div id='loadingCheat' style='width:100%;height:100%;left:0%;top:0px;position:fixed;background-color:white;z-index:100000000000000;'><img style='position:fixed;left:25%; top:30%;' src='` + chrome.runtime.getURL("logo.gif") + `'></img></div>`);
    } else {
        $('#loadingCheat').show();
    }


}
function remove_no_code(id) {
    var index = no_code_container.findIndex(x => x.id === id);
    no_code_container.splice(index, 1);
    drawNoCodeContainer();
}
function edit_no_code(id) {
    var index = no_code_container.findIndex(x => x.id === id);
    var no_code = no_code_container[index];
    //  //console.log(no_code);
}
var cssPath = function (el) {
    if (!(el instanceof Element))
        return;
    var path = [];
    var el2 = el;
    while (el.nodeType === Node.ELEMENT_NODE) {
        var selector = el.nodeName.toLowerCase();
        if (el.id) {
            selector += '#' + el.id;
            path.unshift(selector);
            break;
        } else {
            var sib = el, nth = 1;
            while (sib = sib.previousElementSibling) {
                if (sib.nodeName.toLowerCase() == selector)
                    nth++;
            }
            if (nth != 1)
                selector += ":nth-of-type(" + nth + ")";
        }
        path.unshift(selector);
        el = el.parentNode;
    }


    var path2 = [];
    while (el2 && el2.nodeType === Node.ELEMENT_NODE) {
        var selector = el2.nodeName.toLowerCase();
        if (el2.id) {
            //selector += '#' + el.id;
            //path.unshift(selector);
            break;
        } else {
            var sib = el2, nth = 1;
            while (sib = sib.previousElementSibling) {
                if (sib.nodeName.toLowerCase() == selector)
                    nth++;
            }
            if (nth != 1)
                selector += ":nth-of-type(" + nth + ")";
        }
        path2.unshift(selector);
        el2 = el2.parentNode;
    }
    if (path2.length != 0) {
        path = path2;
    }

    return path.join(" > ");
}


function CSVToArray(CSV_string, delimiter) {
    delimiter = (delimiter || ","); // user-supplied delimeter or default comma

    var pattern = new RegExp( // regular expression to parse the CSV values.
        ( // Delimiters:
            "(\\" + delimiter + "|\\r?\\n|\\r|^)" +
            // Quoted fields.
            "(?:\"([^\"]*(?:\"\"[^\"]*)*)\"|" +
            // Standard fields.
            "([^\"\\" + delimiter + "\\r\\n]*))"
        ), "gi"
    );

    var rows = [[]];  // array to hold our data. First row is column headers.
    // array to hold our individual pattern matching groups:
    var matches = false; // false if we don't find any matches
    // Loop until we no longer find a regular expression match
    while (matches = pattern.exec(CSV_string)) {
        var matched_delimiter = matches[1]; // Get the matched delimiter
        // Check if the delimiter has a length (and is not the start of string)
        // and if it matches field delimiter. If not, it is a row delimiter.
        if (matched_delimiter.length && matched_delimiter !== delimiter) {
            // Since this is a new row of data, add an empty row to the array.
            rows.push([]);
        }
        var matched_value;
        // Once we have eliminated the delimiter, check to see
        // what kind of value was captured (quoted or unquoted):
        if (matches[2]) { // found quoted value. unescape any double quotes.
            matched_value = matches[2].replace(
                new RegExp("\"\"", "g"), "\""
            );
        } else { // found a non-quoted value
            matched_value = matches[3];
        }
        // Now that we have our value string, let's add
        // it to the data array.
        rows[rows.length - 1].push(matched_value);
    }
    return rows; // Return the parsed data Array
}
function drawLines() {
    if (no_code_container.length > 1) {
        for (var kk = 0; kk < no_code_container.length - 1; kk++) {
            if (kk < no_code_container.length - 1) {
                if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                    leader_lines[kk].remove();
                    leader_lines[kk] = null;

                }
                leader_lines[kk] = new LeaderLine(document.getElementById('drag-' + no_code_container[kk].code_ids), document.getElementById('drag-' + no_code_container[kk + 1].code_ids), { color: 'white', size: 8 });
                leader_lines[kk].setOptions({ // element-1, element-2
                    color: 'rgb(108, 77, 255)',
                    outlinecolor: 'rgb(108, 77, 255)',
                    startPlugColor: 'rgb(108, 77, 255)',
                    endPlugColor: 'rgb(0, 0, 0)',
                    startPlug: 'disc',
                    endPlug: 'disc'
                });
            }
        }
    }
}

function drawNoCodeContainer() {
    //  code_ids = 0;
    box.hide();

    if (!document.getElementById('newnocode')) {
        $('HTML').append("<div id='newnocode' class='cheatlayer cheatlayer' style='display:block;overflow-y:hidden;background-color:white; opacity:1.0;position:fixed;z-index:1000000;top:64.5px; font-size:24px; left:0%;width: calc(100% - 270px);height:70%;color:white'></div>");
        // (no_code);
        added_no_code = true;
    } else {
        document.getElementById('newnocode').style.display = 'block';

    }
    $("#newnocode").on('scroll', function () {
        for (var kk = 0; kk < no_code_container.length - 1; kk++) {
            if (kk < no_code_container.length - 1) {
                if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                    leader_lines[kk].position();
                }

            }
        }

    });


    $(window).on('scroll', function () {

        for (var kk = 0; kk < no_code_container.length - 1; kk++) {
            if (kk < no_code_container.length - 1) {
                if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                    leader_lines[kk].position();
                }

            }
        }

    });

    $('#newnocode').html("");
    for (var kk = 0; kk < no_code_container.length; kk++) {

        var img_src = "https://cheatlayer.com/icon2.png";
        var Title = "";
        if (no_code_container[kk].style.includes("gsheet")) {
            img_src = "https://cheatlayer.com/images/textarea/text1.png";
            Title += "Scrape to GSheets</h2>";
        }
        if (no_code_container[kk].style.includes("getdata")) {
            img_src = "https://cheatlayer.com/images/textarea/text1.png";
            Title += "Get Data GSheets</h2>";
        }

        if (no_code_container[kk].style.includes("webhook") || no_code_container[kk].style.includes("contains")) {
            img_src = "https://cheatlayer.com/webhook.png";
            Title += "Send To Webhook</h2>";
        }

        if (no_code_container[kk].style.includes("pdf")) {
            img_src = chrome.runtime.getURL("pdf.png");
            Title += "PDF To Text</h2>";
        }




        if (no_code_container[kk].style.includes("excel")) {
            img_src = chrome.runtime.getURL("excel.png");
            Title += "Excel</h2>";
        }
        if (no_code_container[kk].style.includes("rss")) {
            img_src = chrome.runtime.getURL("rss.png");
            Title += "RSS</h2>";
        }
        if (no_code_container[kk].style.includes("gmail")) {
            img_src = chrome.runtime.getURL("gmail.png");
            Title += "Gmail</h2>";
        }

        if (no_code_container[kk].style.includes("prompt")) {
            img_src = chrome.runtime.getURL("openai.png");
            Title += "GPT-3 Prompt</h2>";
        }
        if (no_code_container[kk].style.includes("filter")) {
            img_src = chrome.runtime.getURL("filter.png");
            Title += "Filter Data</h2>";
        }
        if (no_code_container[kk].style.includes("OCR")) {
            img_src = "https://cheatlayer.com/images/textarea/text5.png";
            Title += "OCR Image To Text</h2>";
        }
        if (no_code_container[kk].style.includes("object")) {
            img_src = "https://cheatlayer.com/images/textarea/text5.png";
            Title += "Object Detection</h2>";
        }
        if (no_code_container[kk].style.includes("sentiment")) {
            img_src = "https://cheatlayer.com/images/textarea/text6.png";
            Title += "Sentiment Anlaysis</h2>";
        }
        if (no_code_container[kk].style.includes("gcal")) {
            img_src = "https://cheatlayer.com/images/textarea/text3.png";
            Title += "Create Event(soon)</h2>";
        }
        if (no_code_container[kk].style.includes("gdoc")) {
            img_src = "https://cheatlayer.com/images/textarea/text2.png";
            Title += "Scrape to Gdocs</h2>";
        }
        if (no_code_container[kk].style.includes("print")) {
            img_src = "https://cheatlayer.com/images/textarea/text4.png";
            Title += "Print To Console</h2>";
        }
        if (no_code_container[kk].style.includes("click")) {// Local Variable
            img_src = "https://cheatlayer.com/images/textarea/text8.png";
            Title += "Click Link</h2>";
        }
        if (no_code_container[kk].style.includes("variable")) {// Temp
            img_src = "https://cheatlayer.com/images/textarea/text10.png";
            Title += "Save Data</h2>";
        }

        if (no_code_container[kk].style.includes("cloud")) {// Temp
            img_src = "https://cheatlayer.com/images/textarea/text9.png";
            Title += "Save To Cloud</h2>";
        }
        if (no_code_container[kk].style.includes("input")) {// Temp
            img_src = "https://cheatlayer.com/images/textarea/text11.png";
            Title += "Set Input Value</h2>";
        }
        if (no_code_container[kk].style.includes("download")) {// Temp
            img_src = "https://cheatlayer.com/images/textarea/text12.png";
            Title += "Download File</h2>";
        }
        if (no_code_container[kk].style.includes("innerText")) {// Temp
            img_src = "https://cheatlayer.com/images/textarea/text13.png";
            Title += "Set Inner Text</h2>";
        }


        if (no_code_container[kk].style.includes("keypress")) {// Temp
            img_src = "https://cheatlayer.com/images/textarea/text14.png";
            Title += "Keypress</h2>";
        }

        if (no_code_container[kk].style.includes("hover")) {// Temp
            img_src = "https://cheatlayer.com/images/textarea/text15.png";
            Title += "Hover</h2>";
        }

        if (no_code_container[kk].style.includes("screenshot")) {// Temp
            img_src = "https://cheatlayer.com/images/textarea/text16.png";
            Title += "Screenshot</h2>";
        }

        if (no_code_container[kk].style.includes("back")) {// Temp
            img_src = "https://cheatlayer.com/goback.png";
            Title += "Go Back</h2>";
        }


        if (no_code_container[kk].style.includes("forward")) {// Temp
            img_src = "https://cheatlayer.com/goforward.png";
            Title += "Go Forward</h2>";

        }

        if (no_code_container[kk].style.includes("riku")) {// Temp
            img_src = "https://cheatlayer.com/Riku-logo.png";
            Title += "Riku.ai Prompt</h2>";
        }

        
        if (no_code_container[kk].style.includes("scroll")) {// Temp
            img_src = "https://cheatlayer.com/scroll.png";
            Title += "Scroll</h2>";
        }

        if (no_code_container[kk].style.includes("script")) {
            img_src = "https://cheatlayer.com/images/textarea/text7.png";
            Title += "Run Code On Tab</h2>";
        }
        if (no_code_container[kk].style.includes("projectatlas")) {
            img_src = chrome.runtime.getURL("atlas.gif");
            Title += "Project Atlas</h2>";
        }
        var new_block = `
<div id="drag-` + no_code_container[kk].code_ids + `" class="cheatlayer draggableCheat cheatlayer graphic-node" style='width: 200px; height: 80px;z-index:100000000;background:rgba(255,255,255,1.0);opacity:1.0 !important;position:absolutio;left:${100 + kk * 200}px;'>
<img src="${img_src}" style="margin:5px;padding:5px;pointer-events: none;width:25%;height:70%;">${Title}
</div>
`;
        $('#newnocode').append(new_block);
        $('.draggableCheat').map(function () {
            //Now you've got a loop that goes through all the elements with drag_class   
            var current_id = $(this).attr('id').split('drag-')[1];
            //  //console.log(current_id);
            var drag_object = document.getElementById($(this).attr('id')); //Gets the DOM Object (Which is what 'target' is)
            var clicked_container = null;
            for (var jj = 0; jj < no_code_container.length; jj++) {
                if (no_code_container[jj].code_ids == current_id) {
                    clicked_container = no_code_container[jj];
                }
            }


            if (clicked_container.position && typeof clicked_container.position != 'undefined') {
                drag_object.style.transform =
                    'translate(' + Math.floor(clicked_container.position.X) + 'px,' + Math.floor(clicked_container.position.Y) + 'px)';

                drag_object.setAttribute('data-x', Math.floor(clicked_container.position.X))
                drag_object.setAttribute('data-y', Math.floor(clicked_container.position.Y))

            } else {

                drag_object.style.transform =
                    'translate(' + 25 * current_id + 'px, ' + 25 * current_id + 'px)';

                drag_object.setAttribute('data-x', 25 * current_id)
                drag_object.setAttribute('data-y', 25 * current_id)
            }
        });


    }
    leader_lines = []
    if (no_code_container.length > 1) {
        for (var kk = 0; kk < no_code_container.length - 1; kk++) {
            if (kk < no_code_container.length - 1) {
                if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                    leader_lines[kk].remove();
                    leader_lines[kk] = null;

                }
                leader_lines.push(new LeaderLine(document.getElementById('drag-' + no_code_container[kk].code_ids), document.getElementById('drag-' + no_code_container[kk + 1].code_ids), { color: 'white', size: 8 }));

                leader_lines[leader_lines.length - 1].setOptions({ // element-1, element-2
                    color: 'rgb(108, 77, 255)',
                    outlinecolor: 'rgb(108, 77, 255)',
                    startPlugColor: 'rgb(108, 77, 255)',
                    endPlugColor: 'rgb(0, 0, 0)',
                    startPlug: 'disc',
                    endPlug: 'disc'
                });
            }
        }
    }



    interact('.draggableCheat').on('down', function (event) {
        // //console.log(event.type, event.target);

        if (event.target.id.includes("drag-")) {
            // //console.log(event.target.id.split('drag-')[1]);//.split('drag-')[1]
            //
            document.getElementById('no_code_parameters').style.display = 'block';

            var clicked_container = null;
            var kk = event.target.id.split('drag-')[1];
            for (var jj = 0; jj < no_code_container.length; jj++) {
                if (no_code_container[jj].code_ids == event.target.id.split('drag-')[1]) {
                    clicked_container = no_code_container[jj];
                    kk = no_code_container[jj].code_ids;

                }
            }

            $('#no_code_parameters').html(clicked_container.no_code);
            var extra_optins = ``;
            if ("options" in clicked_container) {

                for (var jj = 0; jj < clicked_container['options'].length; jj++) {
                    if (clicked_container['options'][jj]['type'] == 'text') {
                        extra_optins += `<br>` + clicked_container['options'][jj]["title"] + `<br><input class='cheatlayer cheat-input'style='background-color:white; color:black' type="text" id='` + clicked_container['options'][jj]["id"] + `'  style='background-color:white; color:black'type="text" value="` + clicked_container['options'][jj]["value"] + `"></input><br>`
                    }
                    if (clicked_container['options'][jj]['type'] == 'dropdown') {
                        extra_optins += `<br>` + clicked_container['options'][jj]["title"] + `<br><select class='cheatlayer cheat-input'style='background-color:white; color:black' type="text" id='` + clicked_container['options'][jj]["id"] + `'  style='background-color:white; color:black'>`
                        for (var hh = 0; hh < clicked_container['options'][jj]["options"].length; hh++) {
                            extra_optins += `<option value='` + clicked_container['options'][jj]["options"][hh] + `'>` + clicked_container['options'][jj]["options"][hh] + `</option>`;

                        }
                        extra_optins += `</select>`;

                    }
                }
            }
            $('#no_code_parameters').append(extra_optins);

            var no_code_html = ``;
            if (clicked_container.options && typeof clicked_container.options != 'undefined') {

                for (var hh = 0; hh < clicked_container.options.length; hh++) {




                }

            }

            if (clicked_container.no_code.includes('XPATHKEY')) {
                if (last_element) {
                    last_element.style.transition = last_transition;
                    last_element.style.backgroundColor = last_color;
                    last_element.style.border = last_border;
                }
                for (var jj = 0; jj < last_elements.length; jj++) {

                    last_elements[jj].style.transition = last_transition;
                    last_elements[jj].style.backgroundColor = last_color;
                    last_elements[jj].style.border = last_border;
                }
                var id = clicked_container.no_code.split("XPATHKEY")[1].split("'")[0];
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                ////console.log(editor_code);
                var element_xpath = "";
                if (editor_code.split(`lookupElementByXPath(\``).length > 0) {
                    element_xpath = editor_code.split(`lookupElementByXPath(\``)[1].split(`\`)`)[0];
                }
                var element = lookupElementByXPath(element_xpath);
                if (element) {
                    // var element_xpath = document.getElementById('xpath').value;
                    last_color = element.style.backgroundColor;
                    last_transition = element.style.transition;
                    last_border = element.style.border;
                    last_element = element;
                    element.style.transition = "background 1s";
                    element.style.backgroundColor = "#ADD8E6";
                    element.style.border = '5px dotted black';
                }

            }
            if (clicked_container.no_code.includes('CSSKEY')) {
                if (last_element) {
                    last_element.style.transition = last_transition;
                    last_element.style.backgroundColor = last_color;
                    last_element.style.border = last_border;
                }
                for (var jj = 0; jj < last_elements.length; jj++) {

                    last_elements[jj].style.transition = last_transition;
                    last_elements[jj].style.backgroundColor = last_color;
                    last_elements[jj].style.border = last_border;
                }

                var id = clicked_container.no_code.split("CSSKEY")[1].split("'")[0];

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];

                //  //console.log(id);
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                if (editor_code.includes('document.querySelector(')) {
                    var element_xpath = editor_code.split("document.querySelector('")[1].split("')")[0];


                    var element = document.querySelector(element_xpath);
                    if (element) {
                        // var element_xpath = document.getElementById('cssselector').value;
                        last_color = element.style.backgroundColor;
                        last_transition = element.style.transition;
                        last_border = element.style.border;
                        last_element = element;
                        element.style.transition = "background 1s";
                        element.style.backgroundColor = "#6C4DFF";
                        element.style.border = '5px dotted black';
                    }
                }

            }
            if (clicked_container.no_code.includes('ELEMENTKEY')) {

                for (var jj = 0; jj < last_elements.length; jj++) {

                    last_elements[jj].style.transition = last_transition;
                    last_elements[jj].style.backgroundColor = last_color;
                    last_elements[jj].style.border = last_border;
                }
                if (last_element) {
                    last_element.style.transition = last_transition;
                    last_element.style.backgroundColor = last_color;
                    last_element.style.border = last_border;
                }

                var node = clicked_container.no_code.split(`type="text" value="`)[1].split(`"`)[0];

                var new_selected_attribute = clicked_container.no_code.split(`type="text" value="`)[2].split(`"`)[0];
                var new_selected_attribute_val = clicked_container.no_code.split(`type="text" value="`)[3].split(`"`)[0];

                var elements = document.getElementsByTagName(node);
                // last_elements = elements;
                last_elemets = [];
                for (var hh = 0; hh < elements.length; hh++) {
                    if (elements[hh].getAttribute(new_selected_attribute) && elements[hh].getAttribute(new_selected_attribute).indexOf(new_selected_attribute_val) >= 0) {
                        last_color = elements[hh].style.backgroundColor;
                        last_transition = elements[hh].style.transition;
                        last_border = elements[hh].style.border;
                        last_elements.push(elements[hh]);
                        elements[hh].style.transition = "background 1s";
                        elements[hh].style.backgroundColor = "#ADD8E6";
                        elements[hh].style.border = '5px dotted black';

                    }
                }
            }
            //  //console.log("setup DRAG");
            // for(var kk = 0; kk < no_code_container.length; kk++){

            $("#TIMERKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });

            $("#CODEKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });

            $("#ELEMENTKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });

            $("#SELECTORKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });
            $("#XPATHKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });

            $("#ELEMENTSELECTKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });

            $("#CSSKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });
            $("#KEYPRESSKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });
            $("#DELAYKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });

            $("#INPUTKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });

            $("#INNERTEXTKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });

            $("#VARIABLEKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });
            $("#VALUEKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });
            $("#LOCATIONKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });

            $("#SHEETKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });
            $("#SHEETIDKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });

            $("#DOCIDKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });
            $("#SHEETVALUESKEY" + kk).on('focusin', function () {

                //$(this).data('val', $(this).val());
            });
            $("#DOCVALUESKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });
            $("#SHEETNAMEKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });
            $("#CSVURLKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });
            $("#WEBHOOKURLKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });
            $("#WEBHOOKDATAKEY" + kk).on('focusin', function () {

                $(this).data('val', $(this).val());
            });




            var clicked_container = null;


            for (var jj = 0; jj < no_code_container.length; jj++) {
                if (no_code_container[jj].code_ids == id) {
                    clicked_container = no_code_container[jj];

                }
            }

            if (false && clicked_container["headers"] > 0) {
                for (var gg = 0; gg < clicked_container["headers"]; gg++) {

                    $("#WEBHOOKBODYKEY_" + gg + '_' + kk).on('change', function () {

                        ///  var prev = $(this).data('val');
                        var id = this.id.split("_")[2];
                        var newVal = $(this).val();

                        var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                        var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                        var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");





                    });


                    $("#WEBHOOKBODYVALUE_" + gg + '_' + kk).on('change', function () {

                        ///  var prev = $(this).data('val');
                        var id = this.id.split("_")[2];
                        var newVal = $(this).val();

                        var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                        var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                        var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");





                    });
                }


                for (var gg = 0; gg < clicked_container["body_size"]; gg++) {

                }
            }



            $("#TIMERKEY" + kk).on('keyup', function () {
                var prev = $(this).data('val');
                var id = this.id.split("TIMERKEY").join("");




                var newVal = this.value;

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                prev = editor_code.split('},')[1].split('*1000')[0];


                editor_code = editor_code.split('},' + prev + '*1000);').join('},' + newVal + '*1000);');


                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "\n//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);

                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);



            });



            $("#ELEMENTKEY" + kk).on('keyup', function () {

                var id = this.id.split("ELEMENTKEY").join("");

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");

                var newVal = this.value;



                var first = editor_code.split(".getElementsByTagName('")[0];

                var prev = editor_code.split(".getElementsByTagName('")[1].split("')")[0];

                var second = editor_code.split(".getElementsByTagName('")[1].replace(prev, '');;


                editor_code = first + ".getElementsByTagName('" + newVal + second;



                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //     window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }


                first = clicked_container.no_code.split(`id='ELEMENTKEY` + id + `' type="text" value="`)[0];

                prev = clicked_container.no_code.split(`id='ELEMENTKEY` + id + `' type="text" value="`)[1].split("\"")[0];

                second = prev = clicked_container.no_code.split(`id='ELEMENTKEY` + id + `' type="text" value="`).slice(1).join(`id='ELEMENTKEY` + id + `' type="text" value="`).replace(prev, '');;



                clicked_container.no_code = first + `id='ELEMENTKEY` + id + `' type="text" value="` + newVal + second;




            });




            $("#REMOVEKEY" + kk).on('click', function () {
                ///  var prev = $(this).data('val');

                var id = this.id.split("REMOVEKEY").join("");
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                //  no_code_container.splice(id, 1);
                for (var kk = 0; kk < no_code_container.length; kk++) {
                    if (no_code_container[kk].id == id) {
                        no_code_container.splice(kk, 1);
                    }
                }
                for (var kk = 0; kk < leader_lines.length; kk++) {
                    if (leader_lines[kk] && typeof leader_lines[kk] !== 'undefined') {
                        leader_lines[kk].remove();
                        leader_lines[kk] = null;
                    }
                }
                drawNoCodeContainer();
                $('#no_code_parameters').html('');


                window.editor.setValue(before_code + after_code, 1);
                //      window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

            });
            //ELEMENTSELECTKEY

            $("#ELEMENTSELECTKEY" + kk).on('keyup', function () {

                var prev = $(this).data('val');

                var id = this.id.split("ELEMENTSELECTKEY").join("");
                var newVal = this.value;

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                prev = editor_code.split(`document.getElementsByTagName(\``)[1].split(`\`)`)[0];



                var first = editor_code.split(`document.getElementsByTagName(\``)[0];
                var second = editor_code.split(`document.getElementsByTagName(\``).slice(1).join(`document.getElementsByTagName(\``).split(prev).join('');

                editor_code = first + `document.getElementsByTagName(\`` + newVal + second.replace(/(^[ \t]*\n)/gm, "");
                //   //console.log(after_code);


                //    editor_code = editor_code.split(prev).join( newVal );

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "\n//endcode" + after_code, 1);
                //    window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                first = clicked_container.no_code.split('value=\'')[0];

                prev = clicked_container.no_code.split('value=\'')[1].split("\'")[0];

                second = prev = clicked_container.no_code.split('value=\'').slice(1).join('value=\'').replace(prev, '');;



                clicked_container.no_code = first + 'value=\'' + newVal + second;



            });
            $("#XPATHKEY" + kk).on('keyup', function () {

                var prev = $(this).data('val');

                var id = this.id.split("XPATHKEY").join("");
                var newVal = this.value;

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                prev = editor_code.split(`lookupElementByXPath(\``)[1].split(`\`)`)[0];



                var first = editor_code.split(`lookupElementByXPath(\``)[0];
                var second = editor_code.split(`lookupElementByXPath(\``).slice(1).join(`lookupElementByXPath(\``).split(prev).join('');

                editor_code = first + `lookupElementByXPath(\`` + newVal + second.replace(/(^[ \t]*\n)/gm, "");
                //   //console.log(after_code);


                //    editor_code = editor_code.split(prev).join( newVal );

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "\n//endcode" + after_code, 1);
                //    window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                first = clicked_container.no_code.split('value=\'')[0];

                prev = clicked_container.no_code.split('value=\'')[1].split("\'")[0];

                second = prev = clicked_container.no_code.split('value=\'').slice(1).join('value=\'').replace(prev, '');;



                clicked_container.no_code = first + 'value=\'' + newVal + second;



            });


            $("#CSSKEY" + kk).on('keyup', function () {

                var prev = $(this).data('val');

                var id = this.id.split("CSSKEY").join("");
                var newVal = this.value;

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                if (!editor_code.includes('document.querySelectorAll')) {
                    prev = editor_code.split("document.querySelector(")[1].split(")")[0];



                    var first = editor_code.split("document.querySelector('")[0];
                    var second = editor_code.split(`document.querySelector('`)[1].split(`')`).slice(1, editor_code.split(`document.querySelector('`)[1].split(`')`).length).join("')").split(prev).join('');

                    editor_code = first + "document.querySelector('" + newVal + "')" + second.replace(/(^[ \t]*\n)/gm, "");
                } else {
                    prev = editor_code.split("document.querySelectorAll(")[1].split(")")[0];

                    var first = editor_code.split("document.querySelectorAll('")[0];
                    var second = editor_code.split(`document.querySelectorAll('`)[1].split(`')`).slice(1, editor_code.split(`document.querySelectorAll('`)[1].split(`')`).length).join("')").split(prev).join('');

                    editor_code = first + "document.querySelectorAll('" + newVal + "')" + second.replace(/(^[ \t]*\n)/gm, "");

                }

                //  //console.log(second);

                //  editor_code = editor_code.split(prev).join("\'" + newVal + "\'");

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "\n//endcode" + after_code, 1);
                //    window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }


                first = clicked_container.no_code.split('value="')[0];

                prev = clicked_container.no_code.split('value="')[1].split("\"")[0];

                second = prev = clicked_container.no_code.split('value="').slice(1).join('value="').replace(prev, '');;



                clicked_container.no_code = first + 'value="' + newVal + second;


            });

            $("#WEBHOOKURLKEY" + kk).on('keyup', function () {

                ///  var prev = $(this).data('val');

                var id = this.id.split("WEBHOOKURLKEY").join("");
                var newVal = this.value;

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");

                var num = editor_code.split("sendAjax('").length;

                var first = editor_code.split("sendAjax('")[0];
                var prev = editor_code.split("sendAjax('")[1].split("',")[0];

                var second = editor_code.split("sendAjax('").slice(1).join("sendAjax('").replace(prev, '');;


                editor_code = first + "sendAjax('" + newVal + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //    window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                first = clicked_container.no_code.split(`id='WEBHOOKURLKEY` + id + `'  value='`)[0];

                prev = clicked_container.no_code.split(`id='WEBHOOKURLKEY` + id + `'  value='`)[1].split("\'")[0];

                second = prev = clicked_container.no_code.split(`id='WEBHOOKURLKEY` + id + `'  value='`).slice(1).join(`id='WEBHOOKURLKEY` + id + `'  value='`).replace(prev, '');

                clicked_container.no_code = first + `id='WEBHOOKURLKEY` + id + `'  value='` + newVal + second;

            });

            $("#CSVURLKEY" + kk).on('keyup', function () {

                ///  var prev = $(this).data('val');

                var id = this.id.split("CSVURLKEY").join("");
                var newVal = this.value;

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");

                var num = editor_code.split("sendAjax('").length;

                var first = editor_code.split("sendAjax('")[0];
                var prev = editor_code.split("sendAjax('")[1].split("',")[0];

                var second = editor_code.split("sendAjax('").slice(1).join("sendAjax('").replace(prev, '');;


                editor_code = first + "sendAjax('" + newVal + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //    window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }


                first = clicked_container.no_code.split(`id='CSVURLKEY` + id + `'  value='`)[0];

                prev = clicked_container.no_code.split(`id='CSVURLKEY` + id + `'  value='`)[1].split("\'")[0];

                second = prev = clicked_container.no_code.split(`id='CSVURLKEY` + id + `'  value='`).slice(1).join(`id='CSVURLKEY` + id + `'  value='`).replace(prev, '');

                clicked_container.no_code = first + `id='CSVURLKEY` + id + `'  value='` + newVal + second;

            });
            //      FILTERINPKEY
            //     FILTEROPKEY
            //     FILTERVALKEY

            $("#FILTERVALKEY" + kk).on('change', function () {

                ///  var prev = $(this).data('val');
                var id = this.id.split("FILTERVALKEY").join("");
                var newVal = $(this).val();
                var input = $("#FILTERINPKEY" + id).val();
                var op = $("#FILTEROPKEY" + id).val();
                var value = $("#FILTERVALKEY" + id).val();

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");


                var first = editor_code.split("/*start filter code*/")[0];

                var second = editor_code.split("/*end filter code*/")[1];
                var middle = ``;
                if (op == "regex") {
                    middle = `
            var re = new RegExp(` + value + `);

            if(re.test(`+ input + `)){
                window.location.reload();
            }
            `;
                }
                if (op == "contains") {
                    middle = `

            if(`+ input + `.includes('` + value + `')){
                window.location.reload();
            }
            `;
                }


                if (op == "notcontains") {
                    middle = `

            if(!`+ input + `.includes('` + value + `')){
                window.location.reload();
            }
            `;
                }


                if (op == "less") {
                    middle = `

            if(`+ input + ` < int('` + value + `')){
                window.location.reload();
            }
            `;
                }

                if (op == "greater") {
                    middle = `

            if(`+ input + ` > int('` + value + `')){
                window.location.reload();
            }
            `;
                }


                if (op == "dateless") {
                    middle = `
            var d1 = new Date()
            if(d1 < new Date('` + value + `')){
                window.location.reload();
            }
            `;
                }


                if (op == "dategreater") {
                    middle = `
            var d1 = new Date()
            if(d1 > new Date('` + value + `')){
                window.location.reload();
            }
            `;
                }


                if (op == "matches") {
                    middle = `

            if(`+ input + ` == '` + value + `'){
                window.location.reload();
            }
            `;
                }

                editor_code = first + "/*start filter code*/" + middle + "/*end filter code*/" + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //    window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                var no_code_variables_string = '';
                var selected_string = '';

                var options_string = `<select class='selectCheat selectBox  select' name="vars" id='FILTERINPKEY` + id + `'>
    `;
                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj]["variables"].length > 0) {
                        if (input == no_code_container[jj]["variables"]) {
                            selected_string = " selected='selected'";

                        }
                        options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        selected_string = '';
                    }
                }
                for (var jj = 0; jj < storage_vars.length; jj++) {
                    if (storage_vars[jj].length > 0) {
                        //      //console.log(no_code_container[jj]["variables"])
                        if (input == storage_vars[jj]) {
                            selected_string = " selected='selected'";

                        }
                        options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                        no_code_variables_string += ',' + storage_vars[jj];
                        selected_string = '';
                    }
                }
                if (input == "element.src") {
                    selected_string = " selected='selected'";

                }
                options_string += `<option value="element.src">Image Source</option>`;
                selected_string = '';

                if (input == "element.href") {
                    selected_string = " selected='selected'";

                }
                options_string += `<option value="element.href">Link Destination</option>`;
                selected_string = '';


                if (input == "element.innerText") {
                    selected_string = " selected='selected'";

                }
                options_string += `<option  selected='selected' value="element.innerText">Inner Text element.innerText</option>`;
                selected_string = '';

                options_string += `</select>`;

                var first = clicked_container.no_code.split("Filter")[0]
                var second = clicked_container.no_code.split("Delay")[1]
                text = `Filter<br> 

        Filter Operations:<br> <select class='selectCheat selectBox  select' name="vars" id='FILTEROPKEY` + id + `'>
        <option value='regex'>Regex Filter</option>
        <option selected="selected" value='contains'>Contains</option>
        <option value='notcontains'>Does Not Contain</option>
        <option value='less'>Less Than</option>
        <option value='greater'>Greater Than</option>
        <option value='dateless'>Date Less Than</option>
        <option value='dategreater'>Date Greater Than</option>
        <option value='matches'>Matches</option>
    
        </select>
        Value: <br><input class='cheatlayer cheat-input'style='background-color:white; color:black' type="text" id='FILTERVALKEY` + id + `'  style='background-color:white; color:black'type="text" value="` + value + `"></input><br>
        
        <br>
        Variable: <br>
    ` + options_string + `
    
        <br>
    
        Delay
        `;

                clicked_container.no_code = first + text + second;

            });

            $("#FILTEROPKEY" + kk).on('change', function () {

                ///  var prev = $(this).data('val');
                var id = this.id.split("FILTEROPKEY").join("");
                var newVal = $(this).val();
                var input = $("#FILTERINPKEY" + id).val();
                var op = $("#FILTEROPKEY" + id).val();
                var value = $("#FILTERVALKEY" + id).val();

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");


                var first = editor_code.split("/*start filter code*/")[0];

                var second = editor_code.split("/*end filter code*/")[1];
                var middle = ``;
                if (op == "regex") {
                    middle = `
            var re = new RegExp(` + value + `);

            if(re.test(`+ input + `)){
                window.location.reload();
            }
            `;
                }
                if (op == "contains") {
                    middle = `

            if(`+ input + `.includes('` + value + `')){
                window.location.reload();
            }
            `;
                }


                if (op == "notcontains") {
                    middle = `

            if(!`+ input + `.includes('` + value + `')){
                window.location.reload();
            }
            `;
                }


                if (op == "less") {
                    middle = `

            if(`+ input + ` < int('` + value + `')){
                window.location.reload();
            }
            `;
                }

                if (op == "greater") {
                    middle = `

            if(`+ input + ` > int('` + value + `')){
                window.location.reload();
            }
            `;
                }


                if (op == "dateless") {
                    middle = `
            var d1 = new Date()
            if(d1 < new Date('` + value + `')){
                window.location.reload();
            }
            `;
                }


                if (op == "dategreater") {
                    middle = `
            var d1 = new Date()
            if(d1 > new Date('` + value + `')){
                window.location.reload();
            }
            `;
                }


                if (op == "matches") {
                    middle = `

            if(`+ input + ` == '` + value + `'){
                window.location.reload();
            }
            `;
                }

                editor_code = first + "/*start filter code*/" + middle + "/*end filter code*/" + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //    window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                var no_code_variables_string = '';
                var selected_string = '';

                var options_string = `<select class='selectCheat selectBox  select' name="vars" id='FILTERINPKEY` + id + `'>
    `;
                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj]["variables"].length > 0) {
                        if (input == no_code_container[jj]["variables"]) {
                            selected_string = " selected='selected'";

                        }
                        options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        selected_string = '';
                    }
                }
                for (var jj = 0; jj < storage_vars.length; jj++) {
                    if (storage_vars[jj].length > 0) {
                        //      //console.log(no_code_container[jj]["variables"])
                        if (input == storage_vars[jj]) {
                            selected_string = " selected='selected'";

                        }
                        options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                        no_code_variables_string += ',' + storage_vars[jj];
                        selected_string = '';
                    }
                }
                if (input == "element.src") {
                    selected_string = " selected='selected'";

                }
                options_string += `<option value="element.src">Image Source</option>`;
                selected_string = '';

                if (input == "element.href") {
                    selected_string = " selected='selected'";

                }
                options_string += `<option value="element.href">Link Destination</option>`;
                selected_string = '';


                if (input == "element.innerText") {
                    selected_string = " selected='selected'";

                }
                options_string += `<option  selected='selected' value="element.innerText">Inner Text element.innerText</option>`;
                selected_string = '';

                options_string += `</select>`;

                var first = clicked_container.no_code.split("Filter")[0]
                var second = clicked_container.no_code.split("Delay")[1]
                text = `Filter<br> 

        Filter Operations:<br> <select class='selectCheat selectBox  select' name="vars" id='FILTEROPKEY` + id + `'>
        <option value='regex'>Regex Filter</option>
        <option selected="selected" value='contains'>Contains</option>
        <option value='notcontains'>Does Not Contain</option>
        <option value='less'>Less Than</option>
        <option value='greater'>Greater Than</option>
        <option value='dateless'>Date Less Than</option>
        <option value='dategreater'>Date Greater Than</option>
        <option value='matches'>Matches</option>
    
        </select>
        Value: <br><input class='cheatlayer cheat-input'style='background-color:white; color:black' type="text" id='FILTERVALKEY` + id + `'  style='background-color:white; color:black'type="text" value="` + value + `"></input><br>
        
        <br>
        Variable: <br>
    ` + options_string + `
    
        <br>
    
        Delay
        `;

                clicked_container.no_code = first + text + second;

            });



            $("#FILTERVALKEY" + kk).on('keyup', function () {

                ///  var prev = $(this).data('val');
                var id = this.id.split("FILTERVALKEY").join("");
                var newVal = $(this).val();
                var input = $("#FILTERINPKEY" + id).val();
                var op = $("#FILTEROPKEY" + id).val();
                var value = $("#FILTERVALKEY" + id).val();

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");


                var first = editor_code.split("/*start filter code*/")[0];

                var second = editor_code.split("/*end filter code*/")[1];
                var middle = ``;
                if (op == "regex") {
                    middle = `
            var re = new RegExp(` + value + `);

            if(re.test(`+ input + `)){
                window.location.reload();
            }
            `;
                }
                if (op == "contains") {
                    middle = `

            if(`+ input + `.includes('` + value + `')){
                window.location.reload();
            }
            `;
                }


                if (op == "notcontains") {
                    middle = `

            if(!`+ input + `.includes('` + value + `')){
                window.location.reload();
            }
            `;
                }


                if (op == "less") {
                    middle = `

            if(`+ input + ` < int('` + value + `')){
                window.location.reload();
            }
            `;
                }

                if (op == "greater") {
                    middle = `

            if(`+ input + ` > int('` + value + `')){
                window.location.reload();
            }
            `;
                }


                if (op == "dateless") {
                    middle = `
            var d1 = new Date()
            if(d1 < new Date('` + value + `')){
                window.location.reload();
            }
            `;
                }


                if (op == "dategreater") {
                    middle = `
            var d1 = new Date()
            if(d1 > new Date('` + value + `')){
                window.location.reload();
            }
            `;
                }


                if (op == "matches") {
                    middle = `

            if(`+ input + ` == '` + value + `'){
                window.location.reload();
            }
            `;
                }

                editor_code = first + "/*start filter code*/" + middle + "/*end filter code*/" + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //    window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                var no_code_variables_string = '';
                var selected_string = '';

                var options_string = `<select class='selectCheat selectBox  select' name="vars" id='FILTERINPKEY` + id + `'>
    `;
                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj]["variables"].length > 0) {
                        if (input == no_code_container[jj]["variables"]) {
                            selected_string = " selected='selected'";

                        }
                        options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        selected_string = '';
                    }
                }
                for (var jj = 0; jj < storage_vars.length; jj++) {
                    if (storage_vars[jj].length > 0) {
                        //      //console.log(no_code_container[jj]["variables"])
                        if (input == storage_vars[jj]) {
                            selected_string = " selected='selected'";

                        }
                        options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                        no_code_variables_string += ',' + storage_vars[jj];
                        selected_string = '';
                    }
                }
                if (input == "element.src") {
                    selected_string = " selected='selected'";

                }
                options_string += `<option value="element.src">Image Source</option>`;
                selected_string = '';

                if (input == "element.href") {
                    selected_string = " selected='selected'";

                }
                options_string += `<option value="element.href">Link Destination</option>`;
                selected_string = '';


                if (input == "element.innerText") {
                    selected_string = " selected='selected'";

                }
                options_string += `<option  selected='selected' value="element.innerText">Inner Text element.innerText</option>`;
                selected_string = '';

                options_string += `</select>`;

                var first = clicked_container.no_code.split("Filter")[0]
                var second = clicked_container.no_code.split("Delay")[1]
                text = `Filter<br> 

        Filter Operations:<br> <select class='selectCheat selectBox  select' name="vars" id='FILTEROPKEY` + id + `'>
        <option value='regex'>Regex Filter</option>
        <option selected="selected" value='contains'>Contains</option>
        <option value='notcontains'>Does Not Contain</option>
        <option value='less'>Less Than</option>
        <option value='greater'>Greater Than</option>
        <option value='dateless'>Date Less Than</option>
        <option value='dategreater'>Date Greater Than</option>
        <option value='matches'>Matches</option>
    
        </select>
        Value: <br><input class='cheatlayer cheat-input'style='background-color:white; color:black' type="text" id='FILTERVALKEY` + id + `'  style='background-color:white; color:black'type="text" value="` + value + `"></input><br>
        
        <br>
        Variable: <br>
    ` + options_string + `
    
        <br>
    
        Delay
        `;

                clicked_container.no_code = first + text + second;

            });

            $("#GMAILVALUEKEY" + kk).on('change', function () {

                ///  var prev = $(this).data('val');
                var id = this.id.split("GMAILVALUEKEY").join("");
                var newVal = $(this).val();

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");


                var first = editor_code.split("var body = ")[0];
                var prev = editor_code.split("var body = ")[1].split(";")[0];

                var second = editor_code.split("var body = ").slice(1).join("var body = ").replace(prev, '');;


                editor_code = first + "var body = " + newVal + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //    window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                ////console.log(clicked_container)
                var no_code_variables_string = '';
                var options_string = `<select class='selectCheat selectBox  select' name="vars" id='GMAILVALUEKEY` + id + `'>
                `;
                var selected_string = '';

                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj]["variables"].length > 0) {
                        if (newVal == no_code_container[jj]["variables"]) {
                            selected_string = " selected='selected'";

                        }
                        options_string += `<option ` + selected_string + ` value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        selected_string = '';
                    }
                }
                for (var jj = 0; jj < storage_vars.length; jj++) {
                    if (storage_vars[jj].length > 0) {
                        //      ////console.log(no_code_container[jj]["variables"])
                        if (newVal == storage_vars[jj]) {
                            selected_string = " selected='selected'";

                        }
                        options_string += `<option ` + selected_string + ` value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                        no_code_variables_string += ',' + storage_vars[jj];
                        selected_string = '';
                    }
                }
                if (newVal == "element.src") {
                    selected_string = " selected='selected'";

                }
                options_string += `<option ` + selected_string + ` value="element.src">Image Source</option>`;
                selected_string = '';
                if (newVal == "element.href") {
                    selected_string = " selected='selected'";

                }
                options_string += `<option ` + selected_string + ` value="element.href">Link Destination</option>`;
                selected_string = '';
                if (no_code_variables_string.length > 0) {
                    if (newVal == "element.innerText" + no_code_variables_string) {
                        selected_string = " selected='selected'";

                    }
                    options_string += `<option ` + selected_string + `  value="element.innerText` + no_code_variables_string + `">Inner Text element.innerText` + no_code_variables_string + `</option>`;
                    selected_string = '';
                    if (newVal == "element.innerText") {
                        selected_string = " selected='selected'";

                    }
                    options_string += `<option  ` + selected_string + ` value="element.innerText">Inner Text</option>`;
                    selected_string = '';
                } else {
                    if (newVal == "element.innerText") {
                        selected_string = " selected='selected'";

                    }
                    options_string += `<option ` + selected_string + ` value="element.innerText">Inner Text element.innerText</option>`;
                    selected_string = '';
                }
                options_string += `</select>`;


                var first = clicked_container.no_code.split("Gmail")[0]
                var second = clicked_container.no_code.split("Delay")[1]
                text = `Gmail<br>
            Body: <br>
        ` + options_string + `
        
            <br>
        
            Delay
            `;

                clicked_container.no_code = first + text + second;

            });


            $("#WEBHOOKDATAKEY" + kk).on('change', function () {

                ///  var prev = $(this).data('val');
                var id = this.id.split("WEBHOOKDATAKEY").join("");
                var newVal = $(this).val();

                if (newVal == "custom" || newVal == "Custom") {
                    newVal = `"` + prompt('Enter a custom value') + `"`;

                }
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");

                var num = editor_code.split("{data:").length;

                var first = editor_code.split("{data:[")[0];
                var prev = editor_code.split("{data:[")[1].split("]}")[0];

                var second = editor_code.split("{data:[").slice(1).join("{data:]").replace(prev, '');;


                editor_code = first + "{data:[" + newVal + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //    window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }


                first = clicked_container.no_code.split(prev + `'`)[0];

                second = clicked_container.no_code.split(prev + `'`).slice(1).join();

                clicked_container.no_code = first + ` selected="selected" ` + second;
            });


            $("#SELECTORKEY" + kk).on('keyup', function () {

                ///  var prev = $(this).data('val');

                var id = this.id.split("SELECTORKEY").join("");
                var newVal = this.value;

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");

                var num = editor_code.split(".getAttribute('").length;

                var first = editor_code.split(".getAttribute('")[0];
                var prev = editor_code.split(".getAttribute('")[1].split("')")[0];

                var second = editor_code.split(".getAttribute('").slice(1).join(".getAttribute('").replace(prev, '');;



                editor_code = first + ".getAttribute('" + newVal + second;


                var first = editor_code.split(".getAttribute('").slice(1).join(".getAttribute('");
                var prev = editor_code.split(".getAttribute('")[2].split("')")[0];

                var second = editor_code.split(".getAttribute('").slice(1, 2).join(".getAttribute('").replace(prev, '');;


                editor_code = first + ".getAttribute('" + newVal + second;




                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                window.editor.setValue(window.editor.getValue().split('undefined').join(''), 1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }


                first = clicked_container.no_code.split(`id='SELECTORKEY` + id + `' type="text" value="`)[0];

                prev = clicked_container.no_code.split(`id='SELECTORKEY` + id + `' type="text" value="`)[1].split("\"")[0];

                second = prev = clicked_container.no_code.split(`id='SELECTORKEY` + id + `' type="text" value="`).slice(1).join(`id='SELECTORKEY` + id + `' type="text" value="`).replace(prev, '');

                clicked_container.no_code = first + `id='SELECTORKEY` + id + `' type="text" value="` + newVal + second;


            });

            $("#TIMEOUTKEY" + kk).on('change', function () {



                var prev = $(this).val();
                var newVal = this.value;

                var id = this.id.split("TIMEOUTKEY").join("");
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                prev = editor_code.split("/*timeout*/")[1].split(",")[0];




                var first = editor_code.split("/*timeout*/")[0];
                var prev = editor_code.split("/*timeout*/")[1].split(",")[0];

                var second = editor_code.split("/*timeout*/").slice(1).join("/*timeout*/").replace(prev, '');;

                editor_code = first + "/*timeout*/" + newVal + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                // window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                first = clicked_container.no_code.split(prev + `'`)[0];

                second = clicked_container.no_code.split(prev + `'`).slice(1).join();

                clicked_container.no_code = first + ` selected="selected" ` + second;

            });

            $("#TABIDKEY" + kk).on('change', function () {



                var prev = $(this).val();
                var newVal = this.value;
                if (last_complete == 19 && newVal == 'Screenshot') {


                    //document.querySelector('#xpathkey').style.display = 'block';
                    // $("#no_code_parameters").html(new_onboard_html);
                    if (window.location.href.includes('cheatlayer')) {

                        introJs().setOptions({
                            steps: [
                                {
                                    element: document.querySelector('#filemenu'),
                                    intro: 'Then click File, and Run to open this link to google in a new tab and run the Screenshot Cheat on it.'
                                }]
                        }).start();
                    }
                    //   runOnTab(element.href,'SCRIPT_NAME',/*timeout*/30,/*options*/{/*id*/id:-1, /*newWindow*/newWindow:false,/*custom1*/data1:"none",/*custom2*/data2:"none",/*custom3*/data3:"none"});

                    //  completed_steps[19] = 1;
                    // //startOnboard(0);
                }
                var id = this.id.split("TABIDKEY").join("");
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                prev = editor_code.split("/*id*/id:")[1].split("');")[0];




                var first = editor_code.split("/*id*/id:")[0];
                var prev = editor_code.split("/*id*/id:")[1].split(",")[0];

                var second = editor_code.split("/*id*/id:").slice(1).join("/*id*/id:").replace(prev, '');;

                editor_code = first + "/*id*/id:" + newVal + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                // window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                first = clicked_container.no_code.split(prev + `'`)[0];

                second = clicked_container.no_code.split(prev + `'`).slice(1).join();

                clicked_container.no_code = first + ` selected="selected" ` + second;

            });



            $("#NEWWINDOWKEY" + kk).on('change', function () {



                var prev = $(this).val();
                var newVal = this.value;
                if (last_complete == 19 && newVal == 'Screenshot') {


                    //document.querySelector('#xpathkey').style.display = 'block';
                    // $("#no_code_parameters").html(new_onboard_html);
                    if (window.location.href.includes('cheatlayer')) {

                        introJs().setOptions({
                            steps: [
                                {
                                    element: document.querySelector('#filemenu'),
                                    intro: 'Then click File, and Run to open this link to google in a new tab and run the Screenshot Cheat on it.'
                                }]
                        }).start();
                    }
                    //   runOnTab(element.href,'SCRIPT_NAME',/*timeout*/30,/*options*/{/*id*/id:-1, /*newWindow*/newWindow:false,/*custom1*/data1:"none",/*custom2*/data2:"none",/*custom3*/data3:"none"});

                    //  completed_steps[19] = 1;
                    // //startOnboard(0);
                }
                var id = this.id.split("NEWWINDOWKEY").join("");
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                prev = editor_code.split("/*newWindow*/newWindow:")[1].split("');")[0];




                var first = editor_code.split("/*newWindow*/newWindow:")[0];
                var prev = editor_code.split("/*newWindow*/newWindow:")[1].split(",")[0];

                var second = editor_code.split("/*newWindow*/newWindow:").slice(1).join("/*newWindow*/newWindow:").replace(prev, '');;

                editor_code = first + "/*newWindow*/newWindow:" + newVal + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                // window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                first = clicked_container.no_code.split(prev + `'`)[0];

                second = clicked_container.no_code.split(prev + `'`).slice(1).join();

                clicked_container.no_code = first + ` selected="selected" ` + second;

            });
            //PAGINATIONKEY
            $("#PAGINATIONKEY" + kk).on('keyup', function () {



                var prev = $(this).val();
                var newVal = this.value;
                var id = this.id.split("PAGINATIONKEY").join("");
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");

                var attr = '';
                var timeout = $("#TIMEOUTKEY" + id).val();
                var id_set = $("#TABIDKEY" + id).val();
                var newWindow = $("#NEWWINDOWKEY" + id).val();
                var script = $("#CODEKEY" + id).val();
                var variable = $("#RUNONVARSKEY" + id).val();
                ////console.log(id)
                ////console.log(id)
                ////console.log(newWindow)

                editor_code = `
            function slow(jj){

            runOnTab("` + newVal + `" + jj,/*script*/'` + script + `',/*timeout*/` + timeout + `,/*options*/{/*id*/id:` + id_set + `, /*newWindow*/newWindow:` + newWindow + `,/*custom1*/data1:"` + variable + `",/*custom2*/data2:"none",/*custom3*/data3:"none"});

                if(jj< 100){
                    setTimeout(function(){slow(jj+1)},30000)
                }
            }
            slow(0)
            
            `;


                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                // window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                first = clicked_container.no_code.split(prev + `'`)[0];

                second = clicked_container.no_code.split(prev + `'`).slice(1).join();

                clicked_container.no_code = first + ` selected="selected" ` + second;

            });

            $("#RUNONVARSKEY" + kk).on('change', function () {



                var prev = $(this).val();
                var newVal = this.value;
                if (last_complete == 19 && newVal == 'Screenshot') {


                    //document.querySelector('#xpathkey').style.display = 'block';
                    // $("#no_code_parameters").html(new_onboard_html);
                    if (window.location.href.includes('cheatlayer')) {

                        introJs().setOptions({
                            steps: [
                                {
                                    element: document.querySelector('#filemenu'),
                                    intro: 'Then click File, and Run to open this link to google in a new tab and run the Screenshot Cheat on it.'
                                }]
                        }).start();
                    }

                    //  completed_steps[19] = 1;
                    // //startOnboard(0);
                }
                var id = this.id.split("RUNONVARSKEY").join("");
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                prev = editor_code.split("/*custom1*/data1:")[1].split("');")[0];




                var first = editor_code.split("/*custom1*/data1:")[0];
                var prev = editor_code.split("/*custom1*/data1:")[1].split(",")[0];

                var second = editor_code.split("/*custom1*/data1:").slice(1).join("/*custom1*/data1:").replace(prev, '');;

                editor_code = first + "/*custom1*/data1:" + newVal + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                // window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                first = clicked_container.no_code.split(prev + `'`)[0];

                second = clicked_container.no_code.split(prev + `'`).slice(1).join();

                clicked_container.no_code = first + ` selected="selected" ` + second;

            });


            $("#CODEGETDATA" + kk).on('change', function () {


                var prev = $(this).val();
                var newVal = this.value;
                ////console.log(newVal)
                if (last_complete == 19 && newVal == 'Screenshot') {


                    //document.querySelector('#xpathkey').style.display = 'block';
                    // $("#no_code_parameters").html(new_onboard_html);
                    if (window.location.href.includes('cheatlayer')) {

                        introJs().setOptions({
                            steps: [
                                {
                                    element: document.querySelector('#filemenu'),
                                    intro: 'Then click File, and Run to open this link to google in a new tab and run the Screenshot Cheat on it.'
                                }]
                        }).start();
                    }

                    //  completed_steps[19] = 1;
                    // //startOnboard(0);
                }
                var id = this.id.split("CODEGETDATA").join("");
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                //prev = editor_code.split("/*startCheat*/'")[1].split("/*stopCheat*/")[0];

                if (newVal != 'none') {


                    var first = editor_code.split("/*startCheat*/")[0];
                    //    var prev = editor_code.split("/*startCheat*/'")[1].split("/*stopCheat*/")[0];

                    //      var second = editor_code.split("/*startCheat*/'").slice(1).join("/*startCheat*/'").replace(prev, '');;

                    var scripts_code = '';
                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        ////console.log(window.data);



                        if (window.data.split('\r\n').length > 1) {


                            scripts_code += `
                    
                    function slow(jj){
                    runOnTab(window.data.split('\\\\r\\\\n')[jj].split(',')[0],"` + newVal + `", 30, {newWindow:false, row: window.data.split('\\\\r\\\\n')[jj].split(',')})
                     if(jj < window.data.split('\\\\r\\\\n').length){
                        setTimeout(function(){slow(jj+1)},2000);
                     }
                    }
                    slow(0);
                    `;

                        } else {

                            scripts_code += `
                    
                function slow(jj){
                    runOnTab(window.data.split('\\\\n')[jj].split(',')[0],"` + newVal + `", 30, {newWindow:false, row: window.data.split('\\\\n')[jj].split(',')})
                 if(jj < window.data.split('\\\\n').length){
                    setTimeout(function(){slow(jj+1)},2000);
                 }
                }
                slow(0);
                `;
                        }
                    }

                    editor_code = first + "/*startCheat*/" + scripts_code + `
            /*stopCheat*/
            \`);         
            //console.log(window.data);     
            },/*delay*/` + currentDelay + `*delayKey);
                    `;

                    window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                    // window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                    window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


                    var clicked_container = null;


                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj].code_ids == id) {
                            clicked_container = no_code_container[jj];

                        }
                    }

                    first = clicked_container.no_code.split(prev + `'`)[0];

                    second = clicked_container.no_code.split(prev + `'`).slice(1).join();

                    clicked_container.no_code = first + ` selected="selected" ` + second;
                }
            });


            $("#CODEKEY" + kk).on('change', function () {



                var prev = $(this).val();
                var newVal = this.value;
                if (last_complete == 19 && newVal == 'Screenshot') {


                    //document.querySelector('#xpathkey').style.display = 'block';
                    // $("#no_code_parameters").html(new_onboard_html);
                    if (window.location.href.includes('cheatlayer')) {

                        introJs().setOptions({
                            steps: [
                                {
                                    element: document.querySelector('#filemenu'),
                                    intro: 'Then click File, and Run to open this link to google in a new tab and run the Screenshot Cheat on it.'
                                }]
                        }).start();
                    }

                    //  completed_steps[19] = 1;
                    // //startOnboard(0);
                }
                var id = this.id.split("CODEKEY").join("");
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                prev = editor_code.split("/*script*/'")[1].split("'")[0];




                var first = editor_code.split("/*script*/'")[0];
                var prev = editor_code.split("/*script*/'")[1].split("'")[0];

                var second = editor_code.split("/*script*/'").slice(1).join("/*script*/'").replace(prev, '');;

                editor_code = first + "/*script*/'" + newVal + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                // window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                first = clicked_container.no_code.split(prev + `'`)[0];

                second = clicked_container.no_code.split(prev + `'`).slice(1).join();

                clicked_container.no_code = first + ` selected="selected" ` + second;

            });


            $("#LOCATIONKEY" + kk).on('keyup', function () {


                var prev = $(this).data('val');
                var newVal = this.value;

                var id = this.id.split("LOCATIONKEY").join("");
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");

                prev = editor_code.split(',{')[1].split(":")[0];

                editor_code = editor_code.split(prev).join(newVal);

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                // window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


            });

            $("#DELAYKEY" + kk).on('change', function () {

                var prev = $(this).data('val');

                var id = this.id.split("DELAYKEY").join("");
                var newVal = this.value;
                if (newVal == "Random") {
                    var min = prompt('Enter the min value ');
                    var max = prompt('Enter the max value ');


                    newVal = (Math.random() * max + min);
                }
                if (newVal == "Custom") {
                    newVal = prompt('Enter the delay ');
                }
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");

                var first = editor_code.split("/*delay*/")[0];
                var second = editor_code.split("/*delay*/")[1].split("*delayKey")[1];

                editor_code = first + "/*delay*/" + newVal + "*delayKey" + second;



                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }
                first = clicked_container.no_code.split(`id='DELAYKEY` + id + `'  style='background-color:white; color:black'type="text" value="`)[0];

                prev = clicked_container.no_code.split(`id='DELAYKEY` + id + `'  style='background-color:white; color:black'type="text" value="`)[1].split("\"")[0];

                second = prev = clicked_container.no_code.split(`id='DELAYKEY` + id + `'  style='background-color:white; color:black'type="text" value="`).slice(1).join(`id='DELAYKEY` + id + `'  style='background-color:white; color:black'type="text" value="`).replace(prev, '');

                clicked_container.no_code = first + `id='DELAYKEY` + id + `'  style='background-color:white; color:black'type="text" value="` + newVal + second;



            });
            //PRINTKEY
            $("#GPT3KEY" + kk).on('change', function () {

                var prev = $(this).val();

                var id = this.id.split("GPT3KEY").join("");
                var newVal = "";//
                    for(var kk =0; kk < scripts.length; kk++){
                        if(scripts[kk].name == $(this).val()){
                            newVal = scripts[kk].script.split('[prompt]').join('');
                        }
                    }
                //$(this).val();
                var isCustom = false;


                if (prev == "Custom") {
                    prev = prompt('Enter a custom Prompt');
                    isCustom = true;
                    newVal = prev;

                }
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                // rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");       

                prev = editor_code.split(`/*prompt*/\``)[1].split(`\`,`)[0];


                var first = editor_code.split(`/*prompt*/\``)[0];
                var second = editor_code.split(`/*prompt*/\``)[1].split(`\`,`).splice(1).join(`\`,`);

                if (isCustom) {
                    editor_code = first + `/*prompt*/\`` + newVal + `\`,` + second;
                } else {
                    editor_code = first + `/*prompt*/\`` + newVal + `\`,` + second;
                }
                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }



            });


            $("#RIKUINPUT5KEY" + kk).on('change', function () {

                var prev = $(this).val();

                var id = this.id.split("RIKUINPUT5KEY").join("");
                var newVal = $(this).val();
                var isCustom = false;


                if (prev == "Custom") {
                    prev = prompt('Enter a custom Riku.ai Input 5 value');
                    isCustom = true;
                    newVal = prev;

                }
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                // rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");       

                prev = editor_code.split(`/*input5*/"`)[1].split(`",`)[0];


                var first = editor_code.split(`/*input5*/"`)[0];
                var second = editor_code.split(`/*input5*/"`)[1].split(`",`).splice(1).join(`",`);

                if (isCustom) {
                    editor_code = first + `/*input1*/"` + newVal + `",` + second;
                } else {
                    editor_code = first + `/*input1*/` + newVal + `,` + second;
                }
                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }



            });

            $("#RIKUINPUT4KEY" + kk).on('change', function () {

                var prev = $(this).val();

                var id = this.id.split("RIKUINPUT4KEY").join("");
                var newVal = $(this).val();
                var isCustom = false;

                if (prev == "Custom") {
                    prev = prompt('Enter a custom Riku.ai Input 1 value');
                    newVal = prev;
                    isCustom = true;

                }
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                // rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");       

                prev = editor_code.split(`/*input4*/"`)[1].split(`",`)[0];


                var first = editor_code.split(`/*input4*/"`)[0];
                var second = editor_code.split(`/*input4*/"`)[1].split(`",`).splice(1).join(`",`);

                if (isCustom) {
                    editor_code = first + `/*input1*/"` + newVal + `",` + second;
                } else {
                    editor_code = first + `/*input1*/` + newVal + `,` + second;
                } window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }


            });




            $("#RIKUINPUT3KEY" + kk).on('change', function () {

                var prev = $(this).val();


                var id = this.id.split("RIKUINPUT3KEY").join("");
                var newVal = $(this).val();
                var isCustom = false;

                if (prev == "Custom") {
                    prev = prompt('Enter a custom Riku.ai Input 1 value');
                    newVal = prev;
                    isCustom = true;

                }
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                // rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");       

                prev = editor_code.split(`/*input3*/"`)[1].split(`",`)[0];


                var first = editor_code.split(`/*input3*/"`)[0];
                var second = editor_code.split(`/*input3*/"`)[1].split(`",`).splice(1).join(`",`);

                if (isCustom) {
                    editor_code = first + `/*input1*/"` + newVal + `",` + second;
                } else {
                    editor_code = first + `/*input1*/` + newVal + `,` + second;
                }
                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }


            });

            $("#RIKUINPUT2KEY" + kk).on('change', function () {

                var prev = $(this).val();

                var id = this.id.split("RIKUINPUT2KEY").join("");
                var newVal = $(this).val();
                var isCustom = false;

                if (prev == "Custom") {
                    prev = prompt('Enter a custom Riku.ai Input 1 value');
                    newVal = prev;
                    isCustom = true;

                }
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                // rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");       
                prev = editor_code.split(`/*input2*/"`)[1].split(`",`)[0];


                var first = editor_code.split(`/*input2*/"`)[0];
                var second = editor_code.split(`/*input2*/"`)[1].split(`",`).splice(1).join(`",`);

                if (isCustom) {
                    editor_code = first + `/*input1*/"` + newVal + `",` + second;
                } else {
                    editor_code = first + `/*input1*/` + newVal + `,` + second;
                }
                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }




            });


            $("#RIKUINPUT1KEY" + kk).on('change', function () {

                var prev = $(this).val();

                var id = this.id.split("RIKUINPUT1KEY").join("");
                var newVal = $(this).val();
                var isCustom = false;
                if (prev == "Custom") {
                    prev = prompt('Enter a custom Riku.ai Input 1 value');
                    newVal = prev;
                    isCustom = true;
                }
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                // rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");       

                prev = editor_code.split(`/*input1*/"`)[1].split(`",`)[0];


                var first = editor_code.split(`/*input1*/"`)[0];
                var second = editor_code.split(`/*input1*/"`)[1].split(`",`).splice(1).join(`",`);
                if (isCustom) {
                    editor_code = first + `/*input1*/"` + newVal + `",` + second;
                } else {
                    editor_code = first + `/*input1*/` + newVal + `,` + second;
                }
                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }



            });

            $("#PROMPTKEY" + kk).on('keyup', function () {

                var prev = $(this).val();

                var id = this.id.split("PROMPTKEY").join("");
                var newVal = $(this).val();

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                // rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");       

                prev = editor_code.split(`/*prompt id*/"`)[1].split(`",`)[0];


                var first = editor_code.split(`/*prompt id*/"`)[0];
                var second = editor_code.split(`/*prompt id*/"`)[1].split(`",`).splice(1).join(`",`);

                editor_code = first + `/*prompt id*/"` + newVal + `",` + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                first = clicked_container.no_code.split(`id='PROMPTKEY` + id + `' width='174px' style='background-color:white; color:black;width:174px !important;' value='`)[0];

                prev = clicked_container.no_code.split(`id='PROMPTKEY` + id + `' width='174px' style='background-color:white; color:black;width:174px !important;' value='`)[1].split("'")[0];

                second = prev = clicked_container.no_code.split(`id='PROMPTKEY` + id + `' width='174px' style='background-color:white; color:black;width:174px !important;' value='`).slice(1).join(`id='PROMPTKEY` + id + `' width='174px' style='background-color:white; color:black;width:174px !important;' value='`).replace(prev, '');

                clicked_container.no_code = first + `id='PROMPTKEY` + id + `' width='174px' style='background-color:white; color:black;width:174px !important;' value='` + newVal + second;



            });

            $("#RIKUAPIKEY" + kk).on('keyup', function () {

                var prev = $(this).val();

                var id = this.id.split("RIKUAPIKEY").join("");
                var newVal = $(this).val();

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                // rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");       

                prev = editor_code.split(`/*api key*/"`)[1].split(`",`)[0];


                var first = editor_code.split(`/*api key*/"`)[0];
                var second = editor_code.split(`/*api key*/"`)[1].split(`",`).splice(1).join(`",`);

                editor_code = first + `/*api key*/"` + newVal + `",` + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                first = clicked_container.no_code.split(`id='RIKUAPIKEY` + id + `' width='174px' style='background-color:white; color:black;width:174px !important;' value='`)[0];

                prev = clicked_container.no_code.split(`id='RIKUAPIKEY` + id + `' width='174px' style='background-color:white; color:black;width:174px !important;' value='`)[1].split("'")[0];

                second = prev = clicked_container.no_code.split(`id='RIKUAPIKEY` + id + `' width='174px' style='background-color:white; color:black;width:174px !important;' value='`).slice(1).join(`id='RIKUAPIKEY` + id + `' width='174px' style='background-color:white; color:black;width:174px !important;' value='`).replace(prev, '');

                clicked_container.no_code = first + `id='RIKUAPIKEY` + id + `' width='174px' style='background-color:white; color:black;width:174px !important;' value='` + newVal + second;



            });

            $("#RIKUNAME" + kk).on('keyup', function () {

                var prev = $(this).val();

                var id = this.id.split("RIKUNAME").join("");
                var newVal = $(this).val();

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                //  rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");       

                prev = editor_code.split(`/*account name*/"`)[1].split(`",`)[0];


                var first = editor_code.split(`/*account name*/"`)[0];
                var second = editor_code.split(`/*account name*/"`)[1].split(`",`).splice(1).join(`",`);

                editor_code = first + `/*account name*/"` + newVal + `",` + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }
                first = clicked_container.no_code.split(`id='RIKUNAME` + id + `' width='174px' style='background-color:white; color:black;width:174px !important;' value='`)[0];

                prev = clicked_container.no_code.split(`id='RIKUNAME` + id + `' width='174px' style='background-color:white; color:black;width:174px !important;' value='`)[1].split("'")[0];

                second = prev = clicked_container.no_code.split(`id='RIKUNAME` + id + `' width='174px' style='background-color:white; color:black;width:174px !important;' value='`).slice(1).join(`id='RIKUNAME` + id + `' width='174px' style='background-color:white; color:black;width:174px !important;' value='`).replace(prev, '');

                clicked_container.no_code = first + `id='RIKUNAME` + id + `' width='174px' style='background-color:white; color:black;width:174px !important;' value='` + newVal + second;



            });

            $("#VARIABLEATTRKEY" + kk).on('change', function () {

                var prev = $(this).val();

                var id = this.id.split("VARIABLEATTRKEY").join("");
                var newVal = $(this).val();

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                var first = '';
                var second = '';
                if(newVal.includes("URL")){
                    newVal = "window.location.href";
                    if (editor_code.includes("elements[kk].")) {

                        if (editor_code.includs(" = []")) {
                            prev = editor_code.split("/*attribute*/")[1].split(");")[0];
    
    
                            first = editor_code.split("/*attribute*/")[0];
                            second = editor_code.split("/*attribute*/")[1].split(");").slice(1).join(");").replace(prev, '');
    
                            editor_code = editor_code.split(prev).join(newVal)
                        } else {
                            prev = editor_code.split("/*attribute*/")[1].split(";")[0];
    
    
                            first = editor_code.split("/*attribute*/")[0];
                            second = editor_code.split("/*attribute*/")[1].split(";").slice(1).join(";").replace(prev, '');
    
                            editor_code = editor_code.split(prev).join(newVal)
                        }
    
                    } else {
                        prev = editor_code.split("/*attribute*/")[1].split(";")[0];
    
    
                        first = editor_code.split("/*attribute*/")[0];
                        second = editor_code.split("/*attribute*/")[1].split(";").slice(1).join(";").replace(prev, '');
    
                        editor_code = editor_code.split(prev).join(newVal)
                    }   
                }else{
                if (editor_code.includes("elements[kk].")) {

                    if (editor_code.includs(" = []")) {
                        prev = editor_code.split("/*attribute*/elements[kk].")[1].split(");")[0];


                        first = editor_code.split("/*attribute*/elements[kk].")[0];
                        second = editor_code.split("/*attribute*/elements[kk].")[1].split(");").slice(1).join(");").replace(prev, '');

                        editor_code = editor_code.split(prev).join(newVal)
                    } else {
                        prev = editor_code.split("/*attribute*/elements[kk].")[1].split(";")[0];


                        first = editor_code.split("/*attribute*/elements[kk].")[0];
                        second = editor_code.split("/*attribute*/elements[kk].")[1].split(";").slice(1).join(";").replace(prev, '');

                        editor_code = editor_code.split(prev).join(newVal)
                    }

                } else {
                    prev = editor_code.split("/*attribute*/element.")[1].split(";")[0];


                    first = editor_code.split("/*attribute*/element.")[0];
                    second = editor_code.split("/*attribute*/element.")[1].split(";").slice(1).join(";").replace(prev, '');

                    editor_code = editor_code.split(prev).join(newVal)
                }
            }
                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }




                var options_string = `<select class='selectCheat selectBox  select' name="vars" id='VARIABLEATTRKEY` + id + `'>
            `;
                if (newVal == "href") {
                    options_string += `<option selected="selected" value="href">.href</option>`;

                } else {
                    options_string += `<option value="href">.href</option>`;
                }
                if (newVal == "src") {
                    options_string += `<option selected="selected" value="src">.src</option>`;

                } else {
                    options_string += `<option value="src">.src</option>`;
                }
                if (newVal == "innerText") {
                    options_string += `<option selected="selected" value="innerText">.innerText</option>`;

                } else {
                    options_string += `<option value="innerText">.innerText</option>`;
                }
                if (newVal == "Custom Attribute") {
                    options_string += `<option selected="selected" value="Custom Attribute">Custom Attribute</option>`;

                } else {
                    options_string += `<option value="Custom Attribute">Custom Attribute</option>`;
                }
                if (newVal == "URL") {
                    options_string += `<option selected="selected" value="URL">Page URL</option>`;

                } else {
                    options_string += `<option value="URL">Page URL</option>`;
                }
                options_string += `</select>`;


                var text = ` Variable<br>
            Attribute:<br>
            ` + options_string + `<br>
            Delay: <br><input class='cheatlayer cheat-input'   style='background-color:white; color:black'type="text" id='DELAYKEY` + id + `'  style='background-color:white; color:black'type="text" value="` + currentDelay + `"></input><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY` + id + `' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            `;


                first = clicked_container.no_code.split(`Endpoint :`)[0];



                clicked_container.no_code = first + ` Endpoint : ` + text;


            });

            $("#PRINTKEY" + kk).on('change', function () {

                var prev = $(this).val();

                var id = this.id.split("PRINTKEY").join("");
                var newVal = $(this).val();

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");

                prev = editor_code.split("//console.log(element.")[1].split(")")[0];


                var first = editor_code.split("//console.log(element.")[0];
                var second = editor_code.split("//console.log(element.")[1].split(");")[1] + ");";

                editor_code = first + "//console.log(element." + newVal + ");" + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }




                var options_string = `<select class='selectCheat selectBox  select' name="vars" id='PRINTKEY` + id + `'>
             `;
                if (newVal == "href") {
                    options_string += `<option selected="selected" value="href">.href</option>`;

                } else {
                    options_string += `<option value="href">.href</option>`;
                }
                if (newVal == "src") {
                    options_string += `<option selected="selected" value="src">.src</option>`;

                } else {
                    options_string += `<option value="src">.src</option>`;
                }
                if (newVal == "innerText") {
                    options_string += `<option selected="selected" value="innerText">.innerText</option>`;

                } else {
                    options_string += `<option value="innerText">.innerText</option>`;
                }
                if (newVal == "Custom Attribute") {
                    options_string += `<option selected="selected" value="Custom Attribute">Custom Attribute</option>`;

                } else {
                    options_string += `<option value="Custom Attribute">Custom Attribute</option>`;
                }
                options_string += `</select>`;


                var text = ` Web Console<br>
             Attribute: <br>
             ` + options_string + `<br>
             Delay: <br><input class='cheatlayer cheat-input'   style='background-color:white; color:black'type="text" id='DELAYKEY` + id + `'  style='background-color:white; color:black'type="text" value="` + currentDelay + `"></input><br>
             <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY` + id + `' style='background-color:white; color:red;'>Remove </a><br>
             
             `;


                first = clicked_container.no_code.split(`Endpoint :`)[0];



                clicked_container.no_code = first + ` Endpoint : ` + text;


            });
            $("#KEYPRESSKEY" + kk).on('change', function () {

                var prev = $(this).val();
                var id = this.id.split("KEYPRESSKEY").join("");
                var newVal = $(this).val();
                if (newVal == "Custom") {
                    newVal = `"` + prompt('Enter a custom input for the form:') + `"`;
                }

                if (newVal == "Webhook") {
                    newVal = `data["` + prompt('Enter the name of the webhook key for this input:') + `"]`;
                }
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");

                prev = editor_code.split("simulateKey(")[1].split(");")[0];


                var first = editor_code.split("simulateKey(")[0];
                var second = editor_code.split("simulateKey(")[1].split(");")[1] + ");" + editor_code.split("simulateKey(")[1].split(");")[2];

                editor_code = first + "simulateKey(" + newVal + ");" + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }
                var options_string = `<select class='selectCheat selectBox  select' style='width:100%' name="vars" id='KEYPRESSKEY` + id + `'>
             `;
                var selected_text = '';
                //console.log(newVal)
                //   //console.log(prev)


                if (typeof window.data != 'undefined' && window.data.length > 0) {
                    var newData = CSVToArray(window.data);

                    //console.log(window.data);
                    if (true) {
                        for (var jj = 0; jj < newData.length; jj++) {
                            for (var kk = 0; kk < newData[jj].length; kk++) {
                                if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                    if (newVal == `window.data.split('\\r\\n')[` + jj + `].split(',')[` + kk + `]`) {
                                        selected_text = `selected="selected"`;
                                        //       //console.log('found')
                                    }
                                    //     //console.log(`window.data.split('\\r\\n')[` + jj + `].split(',')[` + kk+ `]`)
                                    options_string += `<option ` + selected_text + ` value="window.data.split('\\r\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    selected_text = ''
                                }
                            }
                        }
                        if (clicked_container.no_code.includes('currentRun') || last_saved != 'new') {
                            var script_num = 0;

                            for (var kk = 0; kk < scripts.length; kk++) {
                                if (scripts[kk].name == name) {
                                    script_num = kk;
                                }
                            }
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        if (newVal == `window.data.split('\\r\\n')[currentRun%window.data.split('\\r\\n').length].split(',')[` + kk + `]`) {
                                            selected_text = `selected="selected"`;
                                            //             //console.log('found')

                                        }
                                        //       //console.log(`window.data.split('\\r\\n')[currentRun%newData.length].split(',')[` + kk+ `]`)
                                        options_string += `<option  ` + selected_text + ` value="window.data.split('\\r\\n')[` + scripts[script_num]["runs"] % newData.length + `].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + scripts[script_num]["runs"] % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        selected_text = ''
                                    }
                                }
                            }
                        }
                    } else {
                        for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                            for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                    if (newVal == `window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]`) {
                                        selected_text = `selected="selected"`;
                                        //       //console.log('found')

                                    }
                                    options_string += `<option ` + selected_text + ` value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    selected_text = ''
                                }
                            }
                        }
                        if (clicked_container.no_code.includes('currentRun') || last_saved != 'new') {
                            var script_num = 0;

                            for (var kk = 0; kk < scripts.length; kk++) {
                                if (scripts[kk].name == name) {
                                    script_num = kk;
                                }
                            }
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        //               //console.log(`window.data.split('\\n')[` + scripts[script_num]["runs"]%window.data.split('\\n').length + `].split(',')[` + kk+ `]`)
                                        if (newVal == `window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]`) {
                                            selected_text = `selected="selected"`;
                                            //      //console.log('found')

                                        }
                                        options_string += `<option  ` + selected_text + ` value="window.data.split('\\\\n')[` + scripts[script_num]["runs"] % window.data.split('\\n').length + `].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + scripts[script_num]["runs"] % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        selected_text = ''
                                    }
                                }
                            }
                        }
                    }
                }
                options_string += `<option value="">None</option>`;
                //  //console.log(selected_text)
                if (!newVal.includes('window.data')) {
                    selected_text = `selected="selected"`;

                }
                options_string += `<option ` + selected_text + ` value="Custom">Custom</option>`;

                options_string += `</select>`;

                var delayval = clicked_container.no_code.split(`id='DELAYKEY` + id + `'  style='background-color:white; color:black'type="text" value="`)[1].split('"')[0];
                var text = `Keypress<br> ` + options_string + `<br>
             <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY` + id + `' style='background-color:white; color:red;'>Remove </a><br>
             
             
             `;
                var first = clicked_container.no_code.split('Endpoint :')[0];

                clicked_container.no_code = first + 'Endpoint :' + text;


            });
            $("#INPUTKEY" + kk).on('change', function () {
                if (last_complete == 8) {


                    //document.querySelector('#xpathkey').style.display = 'block';
                    // $("#no_code_parameters").html(new_onboard_html);
                    if (window.location.href.includes('cheatlayer')) {

                        setTimeout(function () {
                            introJs().setOptions({
                                steps: [
                                    {
                                        element: document.querySelector('#filemenu'),
                                        intro: 'Click File, then Run to execute automating the form input.'
                                    }]
                            }).start();
                        }, 500);
                    }


                    //startOnboard();
                }

                var prev = $(this).val();

                var id = this.id.split("INPUTKEY").join("");
                var newVal = this.value;
                if (newVal == "Custom") {
                    newVal = prompt('Enter a custom input for the form:');
                }
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");

                prev = editor_code.split(".value = '")[1].split("'")[0];



                var first = editor_code.split(".value = '")[0];
                var second = editor_code.split(".value = '")[1].split("'")[1];

                editor_code = first + ".value = '" + newVal + "'" + second;




                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }
                var options_string = `<select class='selectCheat selectBox  select' name="vars" id='INPUTKEY` + id + `'>
             `;
                var selected_text = "";
                if (typeof window.data != 'undefined' && window.data.length > 0) {
                    //console.log(window.data);
                    if (window.data.split('\r\n').length > 1) {
                        for (var jj = 0; jj < window.data.split('\r\n').length; jj++) {
                            for (var kk = 0; kk < window.data.split('\r\n')[jj].split(',').length; kk++) {
                                if (window.data.split('\r\n')[jj].split(',')[kk] && window.data.split('\r\n')[jj].split(',')[kk].length > 0) {
                                    options_string += `<option value="window.data.split('\\r\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\r\n')[jj].split(',')[kk] + ` )</option>`;
                                }
                            }
                        }
                        if (last_saved != 'new') {
                            var script_num = 0;

                            for (var kk = 0; kk < scripts.length; kk++) {
                                if (scripts[kk].name == name) {
                                    script_num = kk;
                                }
                            }
                            for (var jj = 0; jj < window.data.split('\r\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\r\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\r\n')[jj].split(',')[kk] && window.data.split('\r\n')[jj].split(',')[kk].length > 0) {
                                        options_string += `<option value="window.data.split('\\r\\n')[` + scripts[script_num]["runs"] % window.data.split('\r\n').length + `].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + scripts[script_num]["runs"] % window.data.split('\r\n').length + ` Column ` + kk + `( ` + window.data.split('\r\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                        }
                    } else {
                        for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                            for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                    options_string += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                }
                            }
                        }
                        if (last_saved != 'new') {
                            var script_num = 0;

                            for (var kk = 0; kk < scripts.length; kk++) {
                                if (scripts[kk].name == name) {
                                    script_num = kk;
                                }
                            }
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string += `<option value="window.data.split('\\\\n')[` + scripts[script_num]["runs"] % window.data.split('\\n').length + `].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + scripts[script_num]["runs"] % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                        }
                    }
                }
                options_string += `<option selected="selected" value="">None</option>`;

                options_string += `<option value="Custom">Custom</option>`;

                options_string += `</select>`;

                text = `Input<br>
             ` + options_string + `
             <br>
             Delay: <br><input class='cheatlayer cheat-input'   style='background-color:white; color:black'type="text" id='DELAYKEY` + id + `'  style='background-color:white; color:black'type="text" value="` + currentDelay + `"></input><br>
             <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY` + id + `' style='background-color:white; color:red;'>Remove </a><br>
             
             `;

                var first = clicked_container.no_code.split('Endpoint :')[0];

                clicked_container.no_code = first + 'Endpoint :' + text;


            });
            $("#INNERTEXTKEY" + kk).on('keyup', function () {

                var prev = $(this).data('val');

                var id = this.id.split("INNERTEXTKEY").join("");
                var newVal = this.value;

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");

                prev = editor_code.split(".innerText = '")[1].split("'")[0];




                var first = editor_code.split(".innerText = '")[0];
                var second = editor_code.split(".innerText = '")[1].split("'")[1];

                editor_code = first + ".innerText = '" + newVal + "'" + second;


                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }



            });
            $("#VARIABLEKEY" + kk).on('keyup', function () {


                var id = this.id.split("VARIABLEKEY").join("");
                var newVal = this.value;

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");

                var first = editor_code.split("_")[0];
                var prev = editor_code.split("_")[1].split("=")[0];

                var second = editor_code.split("_").slice(1).join("_").replace(prev, '');
                if (newVal != prev) {
                    editor_code = first + "_" + newVal + second;



                    first = editor_code.split("_")[0] + "_" + editor_code.split("_")[1];
                    second = editor_code.split("_").slice(2).join("_").replace(prev, '');
                    editor_code = first + "_" + newVal + second;

                    // prev = editor_code.split("_")[1].split("=")[0];
                    window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                    //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                    window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                    var clicked_container = null;


                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj].code_ids == id) {
                            clicked_container = no_code_container[jj];

                        }
                    }


                    first = clicked_container.no_code.split(`id='VARIABLEKEY` + id + `' value="`)[0];

                    prev = clicked_container.no_code.split(`id='VARIABLEKEY` + id + `' value="`)[1].split("\"")[0];

                    second = prev = clicked_container.no_code.split(`id='VARIABLEKEY` + id + `' value="`).slice(1).join(`id='VARIABLEKEY` + id + `' value="`).replace(prev, '');

                    clicked_container.no_code = first + `id='VARIABLEKEY` + id + `' value="` + newVal + second;

                }
            });

            $("#VALUEKEY" + kk).on('keyup', function () {

                var prev = $(this).data('val');

                var id = this.id.split("VALUEKEY").join("");
                var newVal = this.value;

                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");

                prev = editor_code.split(`.indexOf(\``)[1].split(`\`)`)[0];
                var first = editor_code.split(`.indexOf(\``)[0];
                var prev = editor_code.split(`.indexOf(\``)[1].split(`\`)`)[0];

                var second = editor_code.split(`.indexOf(\``).slice(1).join(`.indexOf(\``).replace(prev, '');;

                editor_code = first + `.indexOf(\`` + newVal + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);



                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }


                first = clicked_container.no_code.split(`id='VALUEKEY` + id + `' type="text" value="`)[0];

                prev = clicked_container.no_code.split(`id='VALUEKEY` + id + `' type="text" value="`)[1].split("\"")[0];

                second = prev = clicked_container.no_code.split(`id='VALUEKEY` + id + `' type="text" value="`).slice(1).join(`id='VALUEKEY` + id + `' type="text" value="`).replace(prev, '');

                clicked_container.no_code = first + `id='VALUEKEY` + id + `' type="text" value="` + newVal + second;



            });

            $("#DOCIDKEY" + kk).on('keyup', function () {


                var prev = $(this).val();
                var newVal = this.value;
                var id = this.id.split("DOCIDKEY").join("");
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");


                var first = editor_code.split("google_docs_append('")[0];
                var prev = editor_code.split("google_docs_append('")[1].split("',")[0];

                var second = editor_code.split("google_docs_append('").slice(1).join("google_docs_append('").replace(prev, '');;

                editor_code = first + "google_docs_append('" + newVal + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                first = clicked_container.no_code.split(`id='DOCIDKEY` + id + `' value='`)[0];

                prev = clicked_container.no_code.split(`id='DOCIDKEY` + id + `' value='`)[1].split("\'")[0];

                second = prev = clicked_container.no_code.split(`id='DOCIDKEY` + id + `' value='`).slice(1).join(`id='DOCIDKEY` + id + `' value='`).replace(prev, '');

                clicked_container.no_code = first + `id='DOCIDKEY` + id + `' value='` + newVal + second;



            });
            $("#SHEETIDKEY" + kk).on('keyup', function () {


                var prev = $(this).val();
                var newVal = this.value;
                var id = this.id.split("SHEETIDKEY").join("");
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");


                var first = editor_code.split("google_sheets_add_row('")[0];
                var prev = editor_code.split("google_sheets_add_row('")[1].split("',")[0];

                var second = editor_code.split("google_sheets_add_row('").slice(1).join("google_sheets_add_row('").replace(prev, '');;

                editor_code = first + "google_sheets_add_row('" + newVal + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }


                first = clicked_container.no_code.split(`id='SHEETIDKEY` + id + `' value='`)[0];

                prev = clicked_container.no_code.split(`id='SHEETIDKEY` + id + `' value='`)[1].split("\'")[0];

                second = prev = clicked_container.no_code.split(`id='SHEETIDKEY` + id + `' value='`).slice(1).join(`id='SHEETIDKEY` + id + `' value='`).replace(prev, '');

                clicked_container.no_code = first + `id='SHEETIDKEY` + id + `' value='` + newVal + second;


            });


            $("#SHEETNAMEKEY" + kk).on('keyup', function () {


                var prev = $(this).val();
                var newVal = this.value;

                var id = this.id.split("SHEETNAMEKEY").join("");
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");


                var first = editor_code.split(",/*name*/'")[0];
                var prev = editor_code.split(",/*name*/'")[1].split("',")[0];

                var second = editor_code.split(",/*name*/'").slice(1).join(",/*name*/'").replace(prev, '');;

                editor_code = first + ",/*name*/'" + newVal + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                first = clicked_container.no_code.split(`id='SHEETNAMEKEY` + id + `'  value='`)[0];

                prev = clicked_container.no_code.split(`id='SHEETNAMEKEY` + id + `'  value='`)[1].split("\'")[0];

                second = prev = clicked_container.no_code.split(`id='SHEETNAMEKEY` + id + `'  value='`).slice(1).join(`id='SHEETNAMEKEY` + id + `'  value='`).replace(prev, '');

                clicked_container.no_code = first + `id='SHEETNAMEKEY` + id + `'  value='` + newVal + second;


            });

            $("#DOCVALUESKEY" + kk).on('keyup', function () {


                var prev = $(this).val();
                var newVal = this.value;

                var id = this.id.split("DOCVALUESKEY").join("");
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");


                var first = editor_code.split("',")[0];
                var prev = editor_code.split("',")[1].split(")")[0];

                var second = editor_code.split("',").slice(1).join("',").replace(prev, '');;

                editor_code = first + "'," + newVal + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }

                first = clicked_container.no_code.split(`id='DOCVALUESKEY` + id + `'  value='`)[0];

                prev = clicked_container.no_code.split(`id='DOCVALUESKEY` + id + `'  value='`)[1].split("\'")[0];

                second = prev = clicked_container.no_code.split(`id='DOCVALUESKEY` + id + `'  value='`).slice(1).join(`id='DOCVALUESKEY` + id + `'  value='`).replace(prev, '');

                clicked_container.no_code = first + `id='DOCVALUESKEY` + id + `'  value='` + newVal + second;



            });


            $("#SHEETVALUESKEY" + kk).change(function () {


                var prev = $(this).val();
                var newVal = this.value;

                var id = this.id.split("SHEETVALUESKEY").join("");
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");


                var first = editor_code.split(",[")[0];
                var prev = editor_code.split(",[")[1].split("])")[0];

                var second = editor_code.split(",[").slice(1).join(",[").replace(prev, '');;

                editor_code = first + ",[" + newVal + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                var clicked_container = null;


                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj].code_ids == id) {
                        clicked_container = no_code_container[jj];

                    }
                }


                first = clicked_container.no_code.split(`id='SHEETVALUESKEY` + id + `' value='`)[0];

                prev = clicked_container.no_code.split(`id='SHEETVALUESKEY` + id + `' value='`)[1].split("\'")[0];

                second = prev = clicked_container.no_code.split(`id='SHEETVALUESKEY` + id + `' value='`).slice(1).join(`id='SHEETVALUESKEY` + id + `' value='`).replace(prev, '');

                clicked_container.no_code = first + `id='SHEETVALUESKEY` + id + `' value='` + newVal + second;



            });

            $("#SHEETKEY" + kk).on('keyup', function () {


                var prev = $(this).val();
                var newVal = this.value;

                var id = this.id.split("SHEETKEY").join("");
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                prev = editor_code.split('sendAjax(')[1].split(',')[0];


                var first = editor_code.split("sendAjax('")[0];
                var prev = editor_code.split("sendAjax('")[1].split("',")[0];

                var second = editor_code.split("sendAjax('").slice(1).join("sendAjax('").replace(prev, '');;

                editor_code = first + "sendAjax('" + newVal + second;

                window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


            });
            document.getElementById('scriptlist').style.background = "rgba(255,255,255,0.5);";
            document.getElementById('newnocode').style.background = "rgba(255,255,255,0.5);";





            if (window.location.href.includes('cheatlayer')) {

                if (last_complete == 19) {


                    //document.querySelector('#gptselector').style.display = 'block';
                    // $("#no_code_parameters").html(new_onboard_html);

                    introJs().setOptions({
                        steps: [
                            {
                                element: document.querySelector('#CODEKEY' + event.target.id.split('drag-')[1]),
                                intro: 'Change SCRIPT_NAME to Screenshot exactly.'
                            }]
                    }).start();

                    //  completed_steps[19] = 1;
                    // //startOnboard(0);
                }
            }
            if (window.location.href.includes('cheatlayer')) {

                if (last_complete == 7) {


                    //document.querySelector('#gptselector').style.display = 'block';
                    // $("#no_code_parameters").html(new_onboard_html);

                    introJs().setOptions({
                        steps: [
                            {
                                element: document.querySelector('.inputkey'),
                                intro: 'Change TEST_VALUE to any other word like dog. We prototype forms with dummy values once. Then once we prove we can automate the whole form, we may get the values from Google sheets to scale up.'
                            }]
                    }).start();

                    //startOnboard();
                }
            }
        }
        // /no_code_parameters

        $('#scriptlist').animate({ scrollTop: 0 }, "slow")
    })


    interact('.draggableCheat')
        .draggable({
            // enable inertial throwing
            inertia: true,
            // keep the element within the area of it's parent
            modifiers: [
                interact.modifiers.restrictRect({
                    restriction: 'parent',
                    endOnly: true
                })
            ],
            // enable autoScroll
            autoScroll: true,

            listeners: {
                // call this function on every dragmove event
                move: dragMoveListener,

                // call this function on every dragend event
                end(event) {
                    var textEl = event.target.querySelector('p')

                    if (no_code_container.length > 1) {
                        for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                            if (kk < no_code_container.length - 1) {
                                if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                    leader_lines[kk].remove();
                                    leader_lines[kk] = null;

                                }
                                leader_lines[kk] = new LeaderLine(document.getElementById('drag-' + no_code_container[kk].code_ids), document.getElementById('drag-' + no_code_container[kk + 1].code_ids), { color: 'white', size: 8 });

                                leader_lines[kk].setOptions({ // element-1, element-2
                                    color: 'rgb(108, 77, 255)',
                                    outlinecolor: 'rgb(108, 77, 255)',
                                    startPlugColor: 'rgb(108, 77, 255)',
                                    endPlugColor: 'rgb(0, 0, 0)',
                                    startPlug: 'disc',
                                    endPlug: 'disc'
                                });

                            }
                        }
                    }

                }
            }
        })

    function dragMoveListener(event) {
        var target = event.target
        // keep the dragged position in the data-x/data-y attributes
        var x = (parseFloat(target.getAttribute('data-x')) || 0) + event.dx
        var y = (parseFloat(target.getAttribute('data-y')) || 0) + event.dy

        // translate the element
        target.style.transform = 'translate(' + x + 'px, ' + y + 'px)'

        // update the posiion attributes
        target.setAttribute('data-x', x)
        target.setAttribute('data-y', y)
        var dragid = event.target.id.split("drag-")[1];
        var clicked_container = null;


        for (var jj = 0; jj < no_code_container.length; jj++) {
            if (no_code_container[jj].code_ids == dragid) {
                clicked_container = no_code_container[jj];
                dragid = jj;

            }
        }

        no_code_container[dragid].position = { X: x, Y: y };

        if (no_code_container.length > 1) {
            for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                if (kk < no_code_container.length - 1) {
                    if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                        leader_lines[kk].position();
                    }

                }
            }
        }


    }

    // this function is used later in the resizing and gesture demos
    window.dragMoveListener = dragMoveListener
    if (window.location.href.includes('cheatlayer')) {


        if (last_complete == 7) {


            //document.querySelector('#gptselector').style.display = 'block';
            // $("#no_code_parameters").html(new_onboard_html);

            setTimeout(function () {
                introJs().setOptions({
                    steps: [
                        {
                            element: document.querySelector('#drag-' + no_code_container.length - 1),
                            intro: 'Click this draggable no-code module to move it around, and you will notice two things:<Br>1. It highlights the element you are automating in the background. <br>2. A new no-code parameter menu opens on the right.'
                        }]
                }).start();
            }, 1000);


        }
        if (last_complete == 19) {
            setTimeout(function () {

                introJs().setOptions({
                    steps: [
                        {
                            element: document.querySelector('#drag-0'),
                            intro: 'Click this draggable Run Code On Tab no-code module to move it around, and you will notice two things:<Br>1. It highlights the element you are automating in the background. <br>2. A new no-code parameter menu opens on the right.'
                        }]
                }).start();
            }, 1000);

        }
        if (last_complete == 3) {


            //document.querySelector('#gptselector').style.display = 'block';
            // $("#no_code_parameters").html(new_onboard_html);

            setTimeout(function () {
                introJs().setOptions({
                    steps: [
                        {
                            element: document.querySelector('#filemenu'),
                            intro: 'Click File, then Run, or CTRL+R to run the script:'
                        }]
                }).start();
            }, 500);


        }
    }
    if (no_code_container.length > 1) {
        for (var kk = 0; kk < no_code_container.length - 1; kk++) {
            if (kk < no_code_container.length - 1) {
                if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                    // //console.log(leader_lines[kk]);
                    leader_lines[kk].remove();
                    leader_lines[kk] = null;

                }
                leader_lines[kk] = new LeaderLine(document.getElementById('drag-' + no_code_container[kk].code_ids), document.getElementById('drag-' + no_code_container[kk + 1].code_ids), { color: 'white', size: 8 });
                leader_lines[kk].setOptions({ // element-1, element-2
                    color: 'rgb(108, 77, 255)',
                    outlinecolor: 'rgb(108, 77, 255)',
                    startPlugColor: 'rgb(108, 77, 255)',
                    endPlugColor: 'rgb(0, 0, 0)',
                    startPlug: 'disc',
                    endPlug: 'disc'
                });
            }
        }
    }

}

function addCheat() {
   
    
    if (!(document.getElementById('addCheatMenu'))) {
    $('HTML').append(`
<div id="addCheatMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >

<div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:80%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
<center><h1 style="color:black !important;">Add Automation</h1><br>
Building Style:<br><br>
<button id="addpa" style="width:100%;height:50px;font-size:24px;border-radius:25px;border:1px solid black;padding:10px;">Project Atlas</button>

<button id="addeditor" style="width:100%;height:50px;font-size:24px;border-radius:25px;border:1px solid black;padding:10px;">No Code Editor</button>

<button id="addcode" style="width:100%;height:50px;font-size:24px;border-radius:25px;border:1px solid black;padding:10px;">Code Editor</button>
<button id="addoffice" style="width:100%;height:50px;font-size:24px;border-radius:25px;border:1px solid black;padding:10px;">Office Hours</button><br><br>
<button id="cancelCheat" style="width:100%;height:50px;font-size:24px;border-radius:25px;border:1px solid black;padding:10px;">Cancel</button><br><br>

</center>
</div>


</div>`);
    }else{
        $("#addCheatMenu").show();
    }

$(document).on('click', '#addpa', function () {
launchAtlas();
$("#addCheatMenu").hide();

});


$(document).on('click', '#addoffice', function () {
if(user_plan != "free"){
    window.location.href = "https://calendly.com/cheatlayer-office-hours/on-demand-office-hours";
}else{
    alert("Office Hours is only available on paid plans. Please uprade on the billing page at https://cheatlayer.com/billing.");
}
$("#addCheatMenu").hide();

});
    
$(document).on('click', '#cancelCheat', function () {

    $("#addCheatMenu").hide();

});
    

$(document).on('click', '#addeditor', function () {
    $("#addCheatMenu").hide();
    no_code_enabled = true;
no_code_editor = true;
var folder ="";


});
    

$(document).on('click', '#addwebhook', function () {
    $("#addCheatMenu").hide();


     
    $('HTML').append(`
<div id="webhookMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >

<div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:80%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
<center><h1 style="color:black !important;">Webhook Instructions</h1><br>

<button id="cancelCheat" style="width:100%;height:50px;font-size:24px;border-radius:25px;border:1px solid black;padding:10px;">Cancel</button><br><br>

</center>
</div>


</div>`);
    no_code_enabled = true;
no_code_editor = true;
var folder ="";

if (!document.getElementById('loadingCheat')) {
    $('HTML').append(`<div id='loadingCheat' style='width: calc(100% - 270px);height:90%;left:0%;top:64.5px;position:fixed;background-color:white;z-index:1000000;'><img style='position:fixed;left:25%; top:30%;' src='` + chrome.runtime.getURL("logo.gif") + `'></img></div>`);
} else {
    $('#loadingCheat').show();
}

var name = "";
name = document.getElementById('cheatname').value;


if (last_saved == 'new') {

    name = document.getElementById('cheatname').value;
    var start = window.location.href;
    if (!start) {
        start = 'www.cheatlayer.com';
    }
    last_saved = name;
}
if (!name) {
    name = 'null';
}

var found = false;
old = window.editor.getValue();
for (var kk = 0; kk < interface.length; kk++) {

    interface[kk].value = document.getElementById('input' + kk).value;
    //  interface[kk].name = document.getElementById('input' + kk).name;

}


var saved_script = window.editor.getValue()

if (saved_script.includes("[stop interface code]")) {

    saved_script = saved_script.split('[stop interface code]')[1].split('//[start interface code]')[0];
}

if (interface.length > 0) {


    var options_html = "var inputs = {";
    for (var kk = 0; kk < interface.length; kk++) {
        options_html += '"' + interface[kk].name + '":"' + interface[kk].value + '",';
    }
    options_html += `};
function start(){
`;
    saved_script = options_html + `
//[stop interface code]
` + saved_script + `
//[start interface code]
}
$("body").append(\`<div id='cheatInterface' style='overflow:auto;position:fixed;top:0;left:25%;width:50%;height:50%;background-color:white;opacity:1.0;z-index:10000000000;'>
<center><h1>` + name + `</h1>
<br>
`
    for (var kk = 0; kk < interface.length; kk++) {
        saved_script += 'input ' + kk + ' : <input class="interfaceCheatInput" style="padding:10px;margin:10px;" id="input' + kk + '" type="text" value="' + interface[kk].value + '"></input><br>';
    }

    saved_script += `<button style="padding:10px;margin:10px;" id='startCheat'>Start</button><br><button style="padding:10px;margin:10px;" id='cancelCheat'>Cancel</button></center></div>
\`);
`;
    for (var kk = 0; kk < interface.length; kk++) {

        saved_script += `
$('#input` + kk + `').on('keyup', function(e) {

inputs['input` + kk + `'] = e.target.value;
});
`;

    }

    saved_script += `
document.getElementById('startCheat').onclick = function(){
start();
document.getElementById('cheatInterface').style.display = "none";

};
document.getElementById('cancelCheat').onclick = function(){
document.getElementById('cheatInterface').style.display = "none";
};

`;
}
old_code = saved_script;
old = saved_script;
var time = 5;

window.editor.setValue(saved_script);
window.editor.renderer.updateFull(); window.editor.resize();
//setTimeout(function(){window.editor.renderer.updateFull(); window.editor.resize();},2000);

for (var kk = 0; kk < scripts.length; kk++) {
    if (scripts[kk].name == name) {
        found = true;
        scripts[kk].script = saved_script;
        scripts[kk].deleted = false;
        scripts[kk].time = time;
        scripts[kk].folder = folder;

    }
}
last_saved = name;

if (found == false) {
    scripts.push({
        name: name,
        start: start,
        time: time,
        folder: folder,
        interface: interface,
        script: saved_script,
        no_code_container: no_code_container
    });
}
interface = [];

SendMessage("Scripts", "target", { scripts: scripts });

});
    

$(document).on('click', '#addcode', function () {
    $("#addCheatMenu").hide();
    no_code_enabled = true;
    
    no_code_editor = true;
    var folder = "";
    
    box.hide();

    if (window.location.href.includes('cheatlayer')) {

        if (last_complete == 10) {
            introJs().setOptions({
                steps: [
                    {
                        element: document.querySelector('#filemenu'),
                        intro: 'Click File, then GPT-3 Code Generator to generate custom automations:'
                    }]
            }).start();
        }
    }


    document.getElementById('newnocode').style.display = 'none';
    document.getElementById('script').style.display = 'block';
    document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
    document.getElementById('cheatmenu').style.display = 'block';
    if (no_code_container.length > 0) {
        for (var kk = 0; kk < no_code_container.length - 1; kk++) {
            if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                leader_lines[kk].remove();
                leader_lines[kk] = null;
            }

        }
    }
    for (var kk = 0; kk < leader_lines.length - 1; kk++) {
        if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
            leader_lines[kk].remove();
            leader_lines[kk] = null;
        }

    }
    window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


    if (window.location.href.includes("chat.openai.com")) {


        //Generating GPT-3 code.. Please wait up to 20 seconds//Generated Script id=3
        var divs = document.getElementsByTagName('code');
        //Loop through divs and find the divs with class that includes "!whitespace-pre"
        var chat_code = "";
        for (var i = 0; i < divs.length; i++) {
            if (divs[i].className.includes("whitespace-pre")) {
                ////console.log(divs[i].innerText);
                ////console.log(divs[i].innerText);
                //console.log(divs[i].innerText);
                chat_code += divs[i].innerText;
            }
        }

        window.editor = ace.edit("script");
        //window.editor.setValue(old_code);
        window.editor.setAutoScrollEditorIntoView(true);
        window.editor.getSession().setMode("ace/mode/javascript");
        window.editor.setTheme("ace/theme/tomorrow");

        window.editor.setValue(chat_code);
        runScriptEval();

        //endcode GPT Prompt: Collect all the div on the page with an inner text that includes poop and print them. 
        //Generating GPT-3 code.. Please 
    }
setTimeout(function(){    $("#codelayer").click();},2000);
    });
        

}


function showHide(msg) {


    if (!msg.scripts.includes(window.location.href.split("/")[2])) {
        if (opened_cheatLayer == false) {


            //https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.26.1/min/vs/loader.min.js

            if (true) {
                //("ADD BOX");
                $('HTML').append("<div id='elementselector'></div><style>.ace-tomorrow  { background-color: #16092F !important; color: #4D4D4C; } .ace_editor, .ace_editor *{ font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', 'Droid Sans Mono', 'Consolas', monospace !important; font-size: 24px !important; font-weight: 400 !important; letter-spacing: 0 !important; }</style>");


                SendMessage("GetScripts", "target", window.location.href);
                setTimeout(function () {
                    $('HTML').append("<script>var community_scripts = [];</script>");

                    if (!document.getElementById('highlight')) {
                        box = $("<div id='highlight' class='cheatlayer boxcheat cheatlayer outer'><div id='targetcheat' style='background-color:rgba(108,77,255,1.0 );font-size:18px;z-index:1000000000000000000; pointer-events: auto;width: 200px; color:black; position: absolute; top: 00%; left: 0%; color:white;margin: 5px 0 0 5px;'></div><button id='addCheat'  class='text-area-btn' style=' z-index:1000000000000000000; pointer-events: auto;width: 200px; color:white; height: 50px; /* Center vertically and horizontally */ position: absolute; top: 0%; left: 50%; margin: -49px 0 0 -100px;'>Add To Cheat<br>(CTRL + Enter)</button></div>").css({
                            display: "none",
                            position: "absolute",
                            zIndex: 50000000000000,
                            border: '5px black',
                            transition: "all .2s ease-in-out"
                        }).appendTo("body");
                    }
                    $(document).on('click', '#addCheat', function () {
                        if (true) {
                            box.hide();

                            var el = target;
                            pressedKeys[17] = false;

                            var arr = [];
                            //  //console.log("WHAT");
                            //(el);
                            //(el.attributes);     <input type='checkbox' id='useattr' name='useattr' checked value='useattr'><br>

                            var attr_str = "";

                            if (typeof el != 'undefined' && typeof el.attributes != '') {
                                for (var i = 0, atts = el.attributes, n = atts.length, arr = []; i < n; i++) {
                                    arr.push(atts[i].nodeName);
                                }

                                // document.getElementById('highlight').style.pointEvents = 'none';
                                // selected_element.getAttribute(arr[kk])
                                attr_str += `
                              
                              <div class="cheatlayer selector-type-form">
                                <h3 class="cheatlayer text-area-heading">Choose Selector Type: </h3>
                                <div class="cheatlayer row">
                                  <div id="selectattr" class="code-line-selector cheatlayer col-lg-3 col-md-12 col-sm-12 " style='width:80% !important;margin:10px;'>
                                    <label>Attributes</label><br>
                                    <div class="cheatlayer selectWrapper"><select id='attributeSelector' width="200px" class="cheatlayer select selectBox">
                                    
                              `;
                                for (var kk = 0; kk < arr.length; kk++) {
                                    if (selected_element.getAttribute(arr[kk])) {
                                        attr_str += "<option style='color:black;width:100%;' value='" + arr[kk] + "," + selected_element.getAttribute(arr[kk]) + "'>" + arr[kk] + " (" + selected_element.getAttribute(arr[kk]) + ")</option>";
                                    }
                                }
                                if (selected_element.innerText) {
                                    attr_str += "<option style='color:black;width:100%;' value='innerText," + selected_element.innerText.split('"').join('').split('\'').join('') + "'>innerText (" + selected_element.innerText + ")</option>";
                                }
                                attr_str += ` 
                             </select>
                            
                            </div>
                            </div>
                            <div id="selectxpath" class="code-line-selector cheatlayer col-lg-3 col-md-12 col-sm-12" style='width:80% !important;margin:10px;'>
                              <label>xPath</label><br>
                              <input id='xpath' style='color:black;width:200px;' class='cheatlayer cheatlayer' style='color:black;' placeholder='XPath'>
                            </div>

                            <div id="selectelement" class="code-line-selector cheatlayer col-lg-3 col-md-12 col-sm-12" style='width:80% !important;margin:10px;'>
                            <label>All Elements</label><br>
                          </div>
                          
                          <div id="selectgroupcss" class="code-line-selector cheatlayer col-lg-3 col-md-12 col-sm-12" style='width:80% !important;margin:10px;'>
                          <label>Group CSS Selector</label><br>
                          <input id='cssselectorgroup' style='color:black;width:200px;' class='cheatlayer cheatlayer' style='color:black;' placeholder='XPath'>
                        </div>
                        
                            <div  id="selectcss"  class="code-line-selector cheatlayer col-lg-3 col-md-12 col-sm-12 selected-attr" style='width:80% !important;margin:10px;'>
                              <label>css selector</label><br>
                              <input id='cssselector' style='color:black;width:200px;' class='cheatlayer cheatlayer' style='color:black;' placeholder='CssSelector'>
                            </div>
                            <div  id="selectrecoder"  class="code-line-selector cheatlayer col-lg-2 col-md-12 col-sm-12 " style='width:80% !important;margin:10px;'>
                            <label>Action Recorder<br><br>New!</b></label>
                          </div>
                          </div>
                        </div>
                        `;
                            }

                            selected_attribute = arr[0];
                            (selected_attribute);




                            //collect all the A on the page with a id that includes onboarding_step23 and run a script on them.
                            //collect all the DIV on the page with a id that includes productTitle and save them to a local variable.



                            last_selected_element = selected_element;
                            var element = "";
                            //selected_element.attributes[0];
                            if (typeof selected_element.attributes != 'undefined') {
                                element = selected_element.attributes[0];
                            }
                            opened_selector = true;
                            window.postMessage({ removeLine: 'test' }, '*');

                            if ($(".introjs-showElement")[0])  //  case: the tour is in process
                            {
                                $('.introjs-skipbutton').click();   //  Terminate Introduction
                            }
                            box.hide();
                            document.getElementById('scriptlist').scrollTop = 0;
                            getTabs();
                            selector_type = 'usecss';
                            if (!document.getElementById('gptselector')) {


                                $('HTML').append(`<div id='gptselector' class='cheatlayer cheatlayer bootstrap-wrapper' style='overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; opacity:1.0;width:600px;z-index:10000000000;position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black !important;'>
                            <div class="container">
                            <a href="#" id="closeGPT" style='font-size:32px;position:absolute;top:0px;right:0px;'>&times;</a>
                            <div class="cheatlayer text-area-start">
                            <center>
                            <div class="cheatlayer text-area-start-right">
                              <article class='cheatlayer' >Element Type:</article>
                              <span> ` + selected_element.nodeName + `</span>
                            </div>
                            </center>
                        </div>
                     ` + attr_str + `
                 
                     <h3 class="cheatlayer text-area-heading">Choose The Type of Action: </h3>
                
                     <div class="cheatlayer row">
                                      <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='gsheetsgpt'>
                                          <div class="cheatlayer text-area-list" >
                                              <div class="cheatlayer logo-box">
                                                <img src="https://cheatlayer.com/images/textarea/text1.png" class="cheatlayer img-fluid">
                                              </div>
                                              <div class="cheatlayer logo-text">
                                                <span>Scrape to GSheets</span>
                                              </div>
                                          </div>
                                      </div>
                                      <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='gdocsgpt' >
                                        <div class="cheatlayer text-area-list">
                                            <div class="cheatlayer logo-box">
                                              <img src="https://cheatlayer.com/images/textarea/text2.png" class="cheatlayer img-fluid">
                                            </div>
                                            <div class="cheatlayer logo-text">
                                              <span>Scrape to GDocs</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='excelgpt'>
                                    <div class="cheatlayer text-area-list" >
                                        <div class="cheatlayer logo-box">
                                          <img src="` + chrome.runtime.getURL("excel.png") + `" class="cheatlayer img-fluid">
                                        </div>
                                        <div class="cheatlayer logo-text">
                                          <span>To Excel File</span>
                                        </div>
                                    </div>
                                   </div>
                                    <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='consolegpt' >
                                        <div class="cheatlayer text-area-list">
                                            <div class="cheatlayer logo-box">
                                              <img src="https://cheatlayer.com/images/textarea/text4.png" class="cheatlayer img-fluid">
                                            </div>
                                            <div class="cheatlayer logo-text">
                                              <span>Print To Console</span>
                                            </div>
                                        </div>
                                    </div>
                                  </div>
                                  <div class="cheatlayer row mr-30">
                                  <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='ocrgpt'>
                                      <div class="cheatlayer text-area-list">
                                          <div class="cheatlayer logo-box">
                                            <img src="https://cheatlayer.com/images/textarea/text5.png" class="cheatlayer img-fluid">
                                          </div>
                                          <div class="cheatlayer logo-text">
                                            <span>OCR Image To Text</span>
                                          </div>
                                      </div>
                                  </div>
                                  <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='objectgpt'>
                                      <div class="cheatlayer text-area-list">
                                          <div class="cheatlayer logo-box">
                                            <img src="https://cheatlayer.com/images/textarea/text5.png" class="cheatlayer img-fluid">
                                          </div>
                                          <div class="cheatlayer logo-text">
                                            <span>object Detection</span>
                                          </div>
                                      </div>
                                  </div>
                                  <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='sentimentgpt'>
                                    <div class="cheatlayer text-area-list">
                                        <div class="cheatlayer logo-box">
                                          <img src="https://cheatlayer.com/images/textarea/text6.png" class="cheatlayer img-fluid">
                                        </div>
                                        <div class="cheatlayer logo-text">
                                          <span>Sentiment Analysis</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='codegpt' >
                                    <div class="cheatlayer text-area-list">
                                        <div class="cheatlayer logo-box">
                                          <img src="https://cheatlayer.com/images/textarea/text7.png" class="cheatlayer img-fluid">
                                        </div>
                                        <div class="cheatlayer logo-text">
                                          <span>Run Code on tab</span>
                                        </div>
                                    </div>
                                </div>
                                
                              </div>
                              <div class="cheatlayer row mr-30">
                              <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='pushgpt' >
                              <div class="cheatlayer text-area-list">
                                  <div class="cheatlayer logo-box">
                                    <img src="https://cheatlayer.com/images/textarea/text8.png" class="cheatlayer img-fluid">
                                  </div>
                                  <div class="cheatlayer logo-text">
                                    <span>Click Link/ Button</span>
                                  </div>
                              </div>
                          </div>
                              <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='webhookgpt' >
                              <div class="cheatlayer text-area-list">
                                  <div class="cheatlayer logo-box">
                                    <img width='40px' height='40px' src="https://cheatlayer.com/webhook.png" class="cheatlayer img-fluid">
                                  </div>
                                  <div class="cheatlayer logo-text">
                                    <span>Send To Webhook</span>
                                  </div>
                              </div>
                          </div>
                          <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='getdatagpt' >
                              <div class="cheatlayer text-area-list">
                                  <div class="cheatlayer logo-box">
                                    <img src="https://cheatlayer.com/images/textarea/text1.png" class="cheatlayer img-fluid">
                                  </div>
                                  <div class="cheatlayer logo-text">
                                    <span>Get Data GSheets</span>
                                  </div>
                              </div>
                          </div>
                
                              <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='localgpt' >
                                <div class="cheatlayer text-area-list">
                                    <div class="cheatlayer logo-box">
                                      <img src="https://cheatlayer.com/images/textarea/text10.png" class="cheatlayer img-fluid">
                                    </div>
                                    <div class="cheatlayer logo-text">
                                      <span>Save Data</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                
                            <div class="cheatlayer row mr-30">
                
                        <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='setgpt' >
                            <div class="cheatlayer text-area-list">
                                <div class="cheatlayer logo-box">
                                  <img src="https://cheatlayer.com/images/textarea/text11.png" class="cheatlayer img-fluid">
                                </div>
                                <div class="cheatlayer logo-text">
                                  <span>Set Dropdown</span>
                                </div>
                            </div>
                        </div>
                        <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;"  id='downloadgpt'>
                            <div class="cheatlayer text-area-list">
                                <div class="cheatlayer logo-box">
                                  <img src="https://cheatlayer.com/images/textarea/text12.png" class="cheatlayer img-fluid">
                                </div>
                                <div class="cheatlayer logo-text">
                                  <span>Download File</span>
                                </div>
                            </div>
                        </div>
                
                
                            <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='innertextgpt' >
                                <div class="cheatlayer text-area-list">
                                    <div class="cheatlayer logo-box">
                                      <img src="https://cheatlayer.com/images/textarea/text13.png" class="cheatlayer img-fluid">
                                    </div>
                                    <div class="cheatlayer logo-text">
                                      <span>Set Inner Text</span>
                                    </div>
                                </div>
                            </div>
                            <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='keypressgpt'>
                              <div class="cheatlayer text-area-list">
                                  <div class="cheatlayer logo-box">
                                    <img src="https://cheatlayer.com/images/textarea/text14.png" class="cheatlayer img-fluid">
                                  </div>
                                  <div class="cheatlayer logo-text">
                                    <span>Key Press</span>
                                  </div>
                              </div>
                          </div>
                          
                        </div>
                
            <div class="cheatlayer row mr-30">
                <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='hovergpt'>
                     <div class="cheatlayer text-area-list">
                         <div class="cheatlayer logo-box">
                           <img src="https://cheatlayer.com/images/textarea/text15.png" class="cheatlayer img-fluid">
                         </div>
                         <div class="cheatlayer logo-text">
                           <span>Hover</span>
                         </div>
                     </div>
                 </div>
                 <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='scrollgpt'>
                     <div class="cheatlayer text-area-list">
                         <div class="cheatlayer logo-box">
                           <img src="https://cheatlayer.com/images/textarea/text15.png" class="cheatlayer img-fluid">
                         </div>
                         <div class="cheatlayer logo-text">
                           <span>Scroll</span>
                         </div>
                     </div>
                 </div>
                 
               <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='gmailgpt'>
               <div class="cheatlayer text-area-list" >
                   <div class="cheatlayer logo-box">
                     <img src="` + chrome.runtime.getURL("gmail.png") + `" class="cheatlayer img-fluid">
                   </div>
                   <div class="cheatlayer logo-text">
                     <span>Gmail</span>
                   </div>
               </div>
              </div>
                 <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='screenshotgpt' >
                     <div class="cheatlayer text-area-list">
                         <div class="cheatlayer logo-box">
                           <img src="https://cheatlayer.com/images/textarea/text16.png" class="cheatlayer img-fluid">
                         </div>
                         <div class="cheatlayer logo-text">
                           <span>Screenshot</span>
                         </div>
                     </div>
                 </div>
                 </div>

                 <div class="cheatlayer row mr-30">

              <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='rikugpt'>
                 <div class="cheatlayer text-area-list" >
                     <div class="cheatlayer logo-box">
                       <img src="https://cheatlayer.com/Riku-logo.png" class="cheatlayer img-fluid">
                     </div>
                     <div class="cheatlayer logo-text">
                       <span>Riku.ai Generator</span>
                     </div>
                 </div>
             </div>

             <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='promptgpt'>
             <div class="cheatlayer text-area-list" >
                 <div class="cheatlayer logo-box">
                   <img src="` + chrome.runtime.getURL("openai.png") + `" class="cheatlayer img-fluid">
                 </div>
                 <div class="cheatlayer logo-text">
                   <span>GPT-3 Prompt</span>
                 </div>
             </div>
         </div>

            <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='pdfgpt'>
             <div class="cheatlayer text-area-list" >
                 <div class="cheatlayer logo-box">
                   <img src="` + chrome.runtime.getURL("pdf.png") + `" class="cheatlayer img-fluid">
                 </div>
                 <div class="cheatlayer logo-text">
                   <span>PDF Parser</span>
                 </div>
             </div>
            </div>
            <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='filtergpt'>
            <div class="cheatlayer text-area-list" >
                <div class="cheatlayer logo-box">
                  <img src="` + chrome.runtime.getURL("filter.png") + `" class="cheatlayer img-fluid">
                </div>
                <div class="cheatlayer logo-text">
                  <span>Filter</span>
                </div>
            </div>
           </div>
       
                </div>


                <div class="cheatlayer row mr-30">

                <div class="cheatlayer offset-md-1  col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='rssgpt'>
                <div class="cheatlayer text-area-list" >
                    <div class="cheatlayer logo-box">
                      <img src="` + chrome.runtime.getURL("rss.png") + `" class="cheatlayer img-fluid">
                    </div>
                    <div class="cheatlayer logo-text">
                      <span>RSS Input</span>
                    </div>
                </div>
               </div>



                </div>

                    <div class="cheatlayer text-area-btn-group">
                    <a  id='cancelGPTSelect' class="cheatlayer text-area-btn" href="#">Cancel</a>
                </div>
                </center><br><br><br><br>
                </div>
                     </div>`);

                                var newXpath = createXPathFromElement(selected_element);
                                // //console.log(newXpath);
                                document.getElementById('xpath').value = newXpath;

                                var newcss = cssPath(selected_element);
                                // //console.log(newXpath);
                                document.getElementById('cssselector').value = newcss;
                                document.getElementById('cssselectorgroup').value = newcss;

                                $('HTML').append(`<script>
   var selected_attribute = '` + arr[0] + `';var selected_attribute_val = \`` + selected_element.getAttribute(arr[0]) + `\`;
   document.getElementById('attributeSelector').addEventListener('change', function() {
    selected_attribute = this.value.split(',')[0];
    selected_attribute_val = this.value.split(',')[1];
 });
    </script>`);

                                $('HTML').append(`<script>var type_of_selector = 'attr';
    document.getElementById('selectrecoder').onclick = function(){
                        
        window.postMessage({recordActions: "type_of_selector"}, '*');
    }
    document.getElementById('selectcss').onclick = function(){
        document.getElementById('selectattr').classList.remove("selected-attr");
        
        document.getElementById('selectxpath').classList.remove("selected-attr");
        document.getElementById('selectcss').classList.add("selected-attr");
       var type_of_selector = 'usecss';
        window.postMessage({selectorType: type_of_selector}, '*');
    }
    document.getElementById('selectxpath').onclick = function(){
        document.getElementById('selectxpath').classList.add("selected-attr");
        
        document.getElementById('selectattr').classList.remove("selected-attr");
        document.getElementById('selectcss').classList.remove("selected-attr");
      var  type_of_selector = 'usexpath';
        window.postMessage({selectorType: type_of_selector}, '*');

    }


    document.getElementById('selectelement').onclick = function(){
        document.getElementById('selectelement').classList.add("selected-attr");
        
        document.getElementById('selectattr').classList.remove("selected-attr");
        document.getElementById('selectcss').classList.remove("selected-attr");
      var  type_of_selector = 'useelement';
        window.postMessage({selectorType: type_of_selector}, '*');

    }

    document.getElementById('selectgroupcss').onclick = function(){
        document.getElementById('selectgroupcss').classList.add("selected-attr");
        
        document.getElementById('selectattr').classList.remove("selected-attr");
        document.getElementById('selectcss').classList.remove("selected-attr");
      var  type_of_selector = 'usegroupcss';
        window.postMessage({selectorType: type_of_selector}, '*');

    }
    document.getElementById('selectattr').onclick = function(){
        document.getElementById('selectattr').classList.add("selected-attr");
        document.getElementById('selectxpath').classList.remove("selected-attr");
        document.getElementById('selectcss').classList.remove("selected-attr");

       var type_of_selector = 'useattr';
        window.postMessage({selectorType: type_of_selector}, '*');

    }
        </script>`);

                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;  document.getElementById('cancelGPTSelect').onclick = function(){ window.postMessage({opened_selector: "false"} , '*'); if(document.getElementById('gptselector')){document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';} }
                    </script>`);

                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;  document.getElementById('closeGPT').onclick = function(){ window.postMessage({opened_selector: "false"} , '*'); if(document.getElementById('gptselector')){document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';} }
                    </script>`);

                                $('HTML').append(`<script>var type_of_selector = 'attr';
                    
                    
                    document.getElementById('selectrecoder').onclick = function(){
                        
                        window.postMessage({recordActions: "type_of_selector"}, '*');
                    }
                    document.getElementById('selectcss').onclick = function(){
                        document.getElementById('selectattr').classList.remove("selected-attr");
                        
                        document.getElementById('selectxpath').classList.remove("selected-attr");
                        document.getElementById('selectcss').classList.add("selected-attr");
                        var type_of_selector = 'usecss';
                        window.postMessage({selectorType: type_of_selector}, '*');
                    }
                    document.getElementById('selectxpath').onclick = function(){
                        document.getElementById('selectxpath').classList.add("selected-attr");
                        
                        document.getElementById('selectattr').classList.remove("selected-attr");
                        document.getElementById('selectcss').classList.remove("selected-attr");
                        var type_of_selector = 'usexpath';
                        window.postMessage({selectorType: type_of_selector}, '*');
                
                    }
                    
    document.getElementById('selectelement').onclick = function(){
        document.getElementById('selectelement').classList.add("selected-attr");
        
        document.getElementById('selectattr').classList.remove("selected-attr");
        document.getElementById('selectcss').classList.remove("selected-attr");
      var  type_of_selector = 'useelement';
        window.postMessage({selectorType: type_of_selector}, '*');

    }

    document.getElementById('selectgroupcss').onclick = function(){
        document.getElementById('selectgroupcss').classList.add("selected-attr");
        
        document.getElementById('selectattr').classList.remove("selected-attr");
        document.getElementById('selectcss').classList.remove("selected-attr");
      var  type_of_selector = 'usegroupcss';
        window.postMessage({selectorType: type_of_selector}, '*');

    }
                    document.getElementById('selectattr').onclick = function(){
                        document.getElementById('selectattr').classList.add("selected-attr");
                        document.getElementById('selectxpath').classList.remove("selected-attr");
                        document.getElementById('selectcss').classList.remove("selected-attr");
                
                        var type_of_selector = 'useattr';
                        window.postMessage({selectorType: type_of_selector}, '*');
                
                    }
                        </script>`);

                                $('HTML').append(`<script>
                
                    document.getElementById('scrollgpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        
                        
                        
                        
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                
                window.postMessage({style:'scroll', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value, setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:100000o000 !important;overflow-y: scroll; padding-right: 17px;  box-sizing: content-box; position:fixed;top:0px;left:0%;width:80%:height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);
                                /*    $('HTML').append(`<script>document.getElementById('forwardgpt').onclick = function(){
                                        opened_editor = !opened_editor; 
                                        //document.getElementById('script').style.display = 'block';
                                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                                        
                                        
                                        
                                        
                                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                                        
                                
                                window.postMessage({style:'forward', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                                       
                                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                                
                                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px;  box-sizing: content-box; position:fixed;top:0px;left:0%;width:80%:height:100%;background-color:white;color:black;display:none;';
                                
                                   if(document.all)
                                   for(var i in document.links)
                                   document.links[i].onfocus = document.links[i].blur;
                                       }</script>`);
                                    $('HTML').append(`<script>document.getElementById('backgpt').onclick = function(){
                                        opened_editor = !opened_editor; 
                                        //document.getElementById('script').style.display = 'block';
                                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                                        
                                        
                                        
                                        
                                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                                        
                                
                                window.postMessage({style:'back', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                                       
                                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                                
                                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; box-sizing: content-box; position:fixed;top:0px;left:0%;width:80%:height:100%;background-color:white;color:black;display:none;';
                                
                                   if(document.all)
                                   for(var i in document.links)
                                   document.links[i].onfocus = document.links[i].blur;
                                       }</script>`);
                                */


                                $('HTML').append(`<script>document.getElementById('excelgpt').onclick = function(){
                        opened_editor = !opened_editor; 
            
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
               window.postMessage({style:'excel', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
               
                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
               
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);


                                $('HTML').append(`<script>document.getElementById('gmailgpt').onclick = function(){
                        opened_editor = !opened_editor; 
            
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
               window.postMessage({style:'gmail', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
               
                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
               
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);

                                $('HTML').append(`<script>document.getElementById('rssgpt').onclick = function(){
                        opened_editor = !opened_editor; 
            
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
               window.postMessage({style:'rss', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
               
                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
               
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);


                                $('HTML').append(`<script>document.getElementById('filtergpt').onclick = function(){
                        opened_editor = !opened_editor; 
            
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
               window.postMessage({style:'filter', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
               
                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
               
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);



                                $('HTML').append(`<script>document.getElementById('pdfgpt').onclick = function(){
                        opened_editor = !opened_editor; 
            
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
               window.postMessage({style:'pdf', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
               
                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
               
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);

                                $('HTML').append(`<script>document.getElementById('rikugpt').onclick = function(){
                        opened_editor = !opened_editor; 
            
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
               window.postMessage({style:'riku', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
               
                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
               
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);


                       $('HTML').append(`<script>document.getElementById('promptgpt').onclick = function(){
                        opened_editor = !opened_editor; 
            
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
               window.postMessage({style:'prompt', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
               
                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
               
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);


                                $('HTML').append(`<script>document.getElementById('screenshotgpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        
                        
                        
                        
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                
                window.postMessage({style:'screenshot', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);
                                $('HTML').append(`<script>document.getElementById('hovergpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        
                        
                        
                        
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                
                window.postMessage({style:'hover', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);

                                $('HTML').append(`<script>document.getElementById('keypressgpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        
                        
                        
                        
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                
                window.postMessage({style:'keypress', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);

                                $('HTML').append(`<script>document.getElementById('gcalgpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                
                window.postMessage({style:'gcal', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);

                                $('HTML').append(`<script>document.getElementById('gsheetsgpt').onclick = function(){
                         opened_editor = !opened_editor; 
                         //document.getElementById('script').style.display = 'block';
                         document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                         var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                         
                window.postMessage({style:'gsheets', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                        
                      //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                        document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                    if(document.all)
                    for(var i in document.links)
                    document.links[i].onfocus = document.links[i].blur;
                        }</script>`);


                                $('HTML').append(`<script>document.getElementById('webhookgpt').onclick = function(){
                            opened_editor = !opened_editor; 
                            //document.getElementById('script').style.display = 'block';
                            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                            
                   
                   window.postMessage({style:'webhook', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                           
                         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                   
                           document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                   
                       if(document.all)
                       for(var i in document.links)
                       document.links[i].onfocus = document.links[i].blur;
                           }</script>`);



                                $('HTML').append(`<script>document.getElementById('getdatagpt').onclick = function(){
                            opened_editor = !opened_editor; 
                            //document.getElementById('script').style.display = 'block';
                            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                            
                   
                   window.postMessage({style:'getdata', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                           
                         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                   
                           document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                   
                       if(document.all)
                       for(var i in document.links)
                       document.links[i].onfocus = document.links[i].blur;
                           }</script>`);

                                $('HTML').append(`<script>document.getElementById('sentimentgpt').onclick = function(){
                            opened_editor = !opened_editor; 
                            //document.getElementById('script').style.display = 'block';
                            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                            
                   
                   window.postMessage({style:'sentiment', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                           
                         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                   
                           document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                   
                       if(document.all)
                       for(var i in document.links)
                       document.links[i].onfocus = document.links[i].blur;
                           }</script>`);

                                $('HTML').append(`<script>document.getElementById('ocrgpt').onclick = function(){
                            opened_editor = !opened_editor; 
                            //document.getElementById('script').style.display = 'block';
                            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                            
                   
                   window.postMessage({style:'OCR', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                           
                         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                   
                           document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                   
                       if(document.all)
                       for(var i in document.links)
                       document.links[i].onfocus = document.links[i].blur;
                           }</script>`);
                                $('HTML').append(`<script>document.getElementById('objectgpt').onclick = function(){
                            opened_editor = !opened_editor; 
                            //document.getElementById('script').style.display = 'block';
                            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                            
                   
                   window.postMessage({style:'object', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                           
                         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                   
                           document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                   
                       if(document.all)
                       for(var i in document.links)
                       document.links[i].onfocus = document.links[i].blur;
                           }</script>`);
                                $('HTML').append(`<script>document.getElementById('gdocsgpt').onclick = function(){
                            opened_editor = !opened_editor; 
                            //document.getElementById('script').style.display = 'block';
                            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                            
                            
                            
                            
                            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                            
                   
                   window.postMessage({style:'gdocs', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                           
                         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                   
                           document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                   
                       if(document.all)
                       for(var i in document.links)
                       document.links[i].onfocus = document.links[i].blur;
                           }</script>`);

                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
                     document.getElementById('consolegpt').onclick = function(){
                          opened_editor = !opened_editor; 
                          //document.getElementById('script').style.display = 'block';
                          document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                          
                          
                          
                          
                          var selected_attribute = '` + arr[0] + `';
                          var selected_attribute_val = \`` + selected_element.getAttribute(arr[0]) + `\`;
                          var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and loop through them and print them to the web console.';
                          
                
                          window.postMessage({style:'print', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                
                      
                      //    window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                          document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                    if(document.all)
                    for(var i in document.links)
                    document.links[i].onfocus = document.links[i].blur;
                      }</script>`);

                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
                      document.getElementById('codegpt').onclick = function(){
                          opened_editor = !opened_editor; 
                          //document.getElementById('script').style.display = 'block';
                          document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                          
                          
                          
                          
                          var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and run a script on them.';
                          
                
                          window.postMessage({style:'script', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                
                        
                          // window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                          document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                    if(document.all)
                    for(var i in document.links)
                    document.links[i].onfocus = document.links[i].blur;
                
                      }</script>`);


                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
                
                      document.getElementById('pushgpt').onclick = function(){ window.postMessage({opened_selector: "false"} , '*'); 
                      opened_editor = !opened_editor;
                      // document.getElementById('script').style.display = 'block';
                      document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none'; 
                      
                      
                      
                       
                       var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and pushes them.';
                       
                
                       window.postMessage({style:'click', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                
                       //   window.postMessage({generate: input} , '*');
                         document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                  }</script>`);


                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
                
                  document.getElementById('localgpt').onclick = function(){ window.postMessage({opened_selector: "false"} , '*');
                   opened_editor = !opened_editor; 
                   //document.getElementById('script').style.display = 'block';
                   document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                    
                    
                    
                     
                     var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and save them to a local variable.'; 
                     //window.postMessage({generate: input} , '*'); 
                     
                
                     window.postMessage({style:'variable', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                
                     document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                }</script>`);


                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
                
                document.getElementById('setgpt').onclick = function(){ 
                    window.postMessage({opened_selector: "false"} , '*');
                     opened_editor = !opened_editor; 
                   //  document.getElementById('script').style.display = 'block';
                     document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none'; 
                     
                     
                     
                     
                       var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and set the value to test.'; 
                      // window.postMessage({generate: input} , '*');
                      
                
                      window.postMessage({style:'input', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                
                        document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                if(document.all)
                for(var i in document.links)
                document.links[i].onfocus = document.links[i].blur;
                }</script>`);

                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
                
                document.getElementById('downloadgpt').onclick = function(){ 
                    window.postMessage({opened_selector: "false"} , '*'); 
                    opened_editor = !opened_editor; 
                  //  document.getElementById('script').style.display = 'block';
                    document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none'; 
                    
                    
                    
                     
                     var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and download them.';
                   // window.postMessage({generate: input} , '*');
                   
                
                   window.postMessage({style:'download', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                
                       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                
                if(document.all)
                for(var i in document.links)
                document.links[i].onfocus = document.links[i].blur;
                }</script>`);

                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
                
                document.getElementById('innertextgpt').onclick = function(){ 
                    window.postMessage({opened_selector: "false"} , '*'); 
                    opened_editor = !opened_editor; 
                 //   document.getElementById('script').style.display = 'block';
                    document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none'; 
                    
                    
                    
                    
                      var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and set the inner text to test.'; 
                   // window.postMessage({generate: input} , '*'); 
                   
                
                   window.postMessage({style:'innerText', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                
                      document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                if(document.all)
                for(var i in document.links)
                document.links[i].onfocus = document.links[i].blur;
                
                }</script>`);



                                added_selector = true;
                            } else {
                                document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; opacity:1.0;width:600px;z-index:100000000000;position:fixed;top:0px;left:0%;width: calc(100% - 270px); height:100%;background-color:white;color:black !important;';

                                document.getElementById('gptselector').innerHTML = `                <div class="container">
                            <a href="#" id="closeGPT" style='position:absolute;top:0px;right:0px;'>&times;</a>

                            <div class="cheatlayer text-area-start">
                            <center>
                            <div class="cheatlayer text-area-start-right">
                              <article class='cheatlayer' >Element Type:</article>
                              <span> ` + selected_element.nodeName + `</span>
                            </div>
                            </center>
                        </div>
                     ` + attr_str + `
                 
                     <h3 class="cheatlayer text-area-heading">Choose The Type of Action: </h3>
                
                     <div class="cheatlayer row">
                                      <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='gsheetsgpt'>
                                          <div class="cheatlayer text-area-list" >
                                              <div class="cheatlayer logo-box">
                                                <img src="https://cheatlayer.com/images/textarea/text1.png" class="cheatlayer img-fluid">
                                              </div>
                                              <div class="cheatlayer logo-text">
                                                <span>Scrape to GSheets</span>
                                              </div>
                                          </div>
                                      </div>
                                      <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='gdocsgpt' >
                                        <div class="cheatlayer text-area-list">
                                            <div class="cheatlayer logo-box">
                                              <img src="https://cheatlayer.com/images/textarea/text2.png" class="cheatlayer img-fluid">
                                            </div>
                                            <div class="cheatlayer logo-text">
                                              <span>Scrape to GDocs</span>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='excelgpt'>
                                    <div class="cheatlayer text-area-list" >
                                        <div class="cheatlayer logo-box">
                                          <img src="` + chrome.runtime.getURL("excel.png") + `" class="cheatlayer img-fluid">
                                        </div>
                                        <div class="cheatlayer logo-text">
                                          <span>To Excel File</span>
                                        </div>
                                    </div>
                                   </div>
                                    <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='consolegpt' >
                                        <div class="cheatlayer text-area-list">
                                            <div class="cheatlayer logo-box">
                                              <img src="https://cheatlayer.com/images/textarea/text4.png" class="cheatlayer img-fluid">
                                            </div>
                                            <div class="cheatlayer logo-text">
                                              <span>Print To Console</span>
                                            </div>
                                        </div>
                                    </div>
                                  </div>
                                  <div class="cheatlayer row mr-30">
                                  <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='ocrgpt'>
                                      <div class="cheatlayer text-area-list">
                                          <div class="cheatlayer logo-box">
                                            <img src="https://cheatlayer.com/images/textarea/text5.png" class="cheatlayer img-fluid">
                                          </div>
                                          <div class="cheatlayer logo-text">
                                            <span>OCR Image To Text</span>
                                          </div>
                                      </div>
                                  </div>
                                  <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='objectgpt'>
                                      <div class="cheatlayer text-area-list">
                                          <div class="cheatlayer logo-box">
                                            <img src="https://cheatlayer.com/images/textarea/text5.png" class="cheatlayer img-fluid">
                                          </div>
                                          <div class="cheatlayer logo-text">
                                            <span>object Detection</span>
                                          </div>
                                      </div>
                                  </div>
                                  <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='sentimentgpt'>
                                    <div class="cheatlayer text-area-list">
                                        <div class="cheatlayer logo-box">
                                          <img src="https://cheatlayer.com/images/textarea/text6.png" class="cheatlayer img-fluid">
                                        </div>
                                        <div class="cheatlayer logo-text">
                                          <span>Sentiment Analysis</span>
                                        </div>
                                    </div>
                                </div>
                                <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='codegpt' >
                                    <div class="cheatlayer text-area-list">
                                        <div class="cheatlayer logo-box">
                                          <img src="https://cheatlayer.com/images/textarea/text7.png" class="cheatlayer img-fluid">
                                        </div>
                                        <div class="cheatlayer logo-text">
                                          <span>Run Code on tab</span>
                                        </div>
                                    </div>
                                </div>
                                
                              </div>
                              <div class="cheatlayer row mr-30">
                              <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='pushgpt' >
                              <div class="cheatlayer text-area-list">
                                  <div class="cheatlayer logo-box">
                                    <img src="https://cheatlayer.com/images/textarea/text8.png" class="cheatlayer img-fluid">
                                  </div>
                                  <div class="cheatlayer logo-text">
                                    <span>Click Link/ Button</span>
                                  </div>
                              </div>
                          </div>
                              <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='webhookgpt' >
                              <div class="cheatlayer text-area-list">
                                  <div class="cheatlayer logo-box">
                                    <img width='40px' height='40px' src="https://cheatlayer.com/webhook.png" class="cheatlayer img-fluid">
                                  </div>
                                  <div class="cheatlayer logo-text">
                                    <span>Send To Webhook</span>
                                  </div>
                              </div>
                          </div>
                          <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='getdatagpt' >
                              <div class="cheatlayer text-area-list">
                                  <div class="cheatlayer logo-box">
                                    <img src="https://cheatlayer.com/images/textarea/text1.png" class="cheatlayer img-fluid">
                                  </div>
                                  <div class="cheatlayer logo-text">
                                    <span>Get Data GSheets</span>
                                  </div>
                              </div>
                          </div>
                
                              <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='localgpt' >
                                <div class="cheatlayer text-area-list">
                                    <div class="cheatlayer logo-box">
                                      <img src="https://cheatlayer.com/images/textarea/text10.png" class="cheatlayer img-fluid">
                                    </div>
                                    <div class="cheatlayer logo-text">
                                      <span>Save Data</span>
                                    </div>
                                </div>
                            </div>
                        </div>
                
                            <div class="cheatlayer row mr-30">
                
                        <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='setgpt' >
                            <div class="cheatlayer text-area-list">
                                <div class="cheatlayer logo-box">
                                  <img src="https://cheatlayer.com/images/textarea/text11.png" class="cheatlayer img-fluid">
                                </div>
                                <div class="cheatlayer logo-text">
                                  <span>Set Dropdown</span>
                                </div>
                            </div>
                        </div>
                        <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;"  id='downloadgpt'>
                            <div class="cheatlayer text-area-list">
                                <div class="cheatlayer logo-box">
                                  <img src="https://cheatlayer.com/images/textarea/text12.png" class="cheatlayer img-fluid">
                                </div>
                                <div class="cheatlayer logo-text">
                                  <span>Download File</span>
                                </div>
                            </div>
                        </div>
                
                
                            <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='innertextgpt' >
                                <div class="cheatlayer text-area-list">
                                    <div class="cheatlayer logo-box">
                                      <img src="https://cheatlayer.com/images/textarea/text13.png" class="cheatlayer img-fluid">
                                    </div>
                                    <div class="cheatlayer logo-text">
                                      <span>Set Inner Text</span>
                                    </div>
                                </div>
                            </div>
                            <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='keypressgpt'>
                              <div class="cheatlayer text-area-list">
                                  <div class="cheatlayer logo-box">
                                    <img src="https://cheatlayer.com/images/textarea/text14.png" class="cheatlayer img-fluid">
                                  </div>
                                  <div class="cheatlayer logo-text">
                                    <span>Key Press</span>
                                  </div>
                              </div>
                          </div>
                          
                        </div>
                
            <div class="cheatlayer row mr-30">
                <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='hovergpt'>
                     <div class="cheatlayer text-area-list">
                         <div class="cheatlayer logo-box">
                           <img src="https://cheatlayer.com/images/textarea/text15.png" class="cheatlayer img-fluid">
                         </div>
                         <div class="cheatlayer logo-text">
                           <span>Hover</span>
                         </div>
                     </div>
                 </div>
                 <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='scrollgpt'>
                     <div class="cheatlayer text-area-list">
                         <div class="cheatlayer logo-box">
                           <img src="https://cheatlayer.com/images/textarea/text15.png" class="cheatlayer img-fluid">
                         </div>
                         <div class="cheatlayer logo-text">
                           <span>Scroll</span>
                         </div>
                     </div>
                 </div>
                 
               <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='gmailgpt'>
               <div class="cheatlayer text-area-list" >
                   <div class="cheatlayer logo-box">
                     <img src="` + chrome.runtime.getURL("gmail.png") + `" class="cheatlayer img-fluid">
                   </div>
                   <div class="cheatlayer logo-text">
                     <span>Gmail</span>
                   </div>
               </div>
              </div>
                           
                 <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='screenshotgpt' >
                     <div class="cheatlayer text-area-list">
                         <div class="cheatlayer logo-box">
                           <img src="https://cheatlayer.com/images/textarea/text16.png" class="cheatlayer img-fluid">
                         </div>
                         <div class="cheatlayer logo-text">
                           <span>Screenshot</span>
                         </div>
                     </div>
                 </div>
                </div>
               <div class="cheatlayer row mr-30">

              <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='rikugpt'>
                 <div class="cheatlayer text-area-list" >
                     <div class="cheatlayer logo-box">
                       <img src="https://cheatlayer.com/Riku-logo.png" class="cheatlayer img-fluid">
                     </div>
                     <div class="cheatlayer logo-text">
                       <span>Riku.ai Generator</span>
                     </div>
                 </div>
             </div>

             
             <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='promptgpt'>
             <div class="cheatlayer text-area-list" >
                 <div class="cheatlayer logo-box">
                   <img src="` + chrome.runtime.getURL("openai.png") + `" class="cheatlayer img-fluid">
                 </div>
                 <div class="cheatlayer logo-text">
                   <span>GTP-3 Prompt</span>
                 </div>
             </div>
         </div>
             
            <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='pdfgpt'>
             <div class="cheatlayer text-area-list" >
                 <div class="cheatlayer logo-box">
                   <img src="` + chrome.runtime.getURL("pdf.png") + `" class="cheatlayer img-fluid">
                 </div>
                 <div class="cheatlayer logo-text">
                   <span>PDF Parser</span>
                 </div>
             </div>
            </div>
            <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='filtergpt'>
            <div class="cheatlayer text-area-list" >
                <div class="cheatlayer logo-box">
                  <img src="` + chrome.runtime.getURL("filter.png") + `" class="cheatlayer img-fluid">
                </div>
                <div class="cheatlayer logo-text">
                  <span>Filter</span>
                </div>
            </div>
           </div>
        
                </div>


                <div class="cheatlayer row mr-30">
                
           

               

                </div>    <div class="cheatlayer offset-md-1  col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='rssgpt'>
                <div class="cheatlayer text-area-list" >
                    <div class="cheatlayer logo-box">
                      <img src="` + chrome.runtime.getURL("rss.png") + `" class="cheatlayer img-fluid">
                    </div>
                    <div class="cheatlayer logo-text">
                      <span>RSS Input</span>
                    </div>
                </div>
               </div>

                    <div class="cheatlayer text-area-btn-group">
                    <a  id='cancelGPTSelect' class="cheatlayer text-area-btn" href="#">Cancel</a>
                </div></div>
                
                </center><br><br><br><br>`;
                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;  document.getElementById('cancelGPTSelect').onclick = function(){ window.postMessage({opened_selector: "false"} , '*'); if(document.getElementById('gptselector')){document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';} }
                   </script>`);
                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;  document.getElementById('closeGPT').onclick = function(){ window.postMessage({opened_selector: "false"} , '*'); if(document.getElementById('gptselector')){document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';} }
                   </script>`);



                                $('HTML').append(`<script>
   var selected_attribute = '` + arr[0] + `';var selected_attribute_val = \`` + selected_element.getAttribute(arr[0]) + `\`;
   document.getElementById('attributeSelector').addEventListener('change', function() {
    selected_attribute = this.value.split(',')[0];
    selected_attribute_val = this.value.split(',')[1];
 });
    </script>`);

                                $('HTML').append(`<script>var type_of_selector = 'attr';
    document.getElementById('selectrecoder').onclick = function(){
                        
        window.postMessage({recordActions: "type_of_selector"}, '*');
    }
    document.getElementById('selectcss').onclick = function(){
        document.getElementById('selectattr').classList.remove("selected-attr");
        
        document.getElementById('selectxpath').classList.remove("selected-attr");
        document.getElementById('selectcss').classList.add("selected-attr");
       var type_of_selector = 'usecss';
        window.postMessage({selectorType: type_of_selector}, '*');
    }
    document.getElementById('selectxpath').onclick = function(){
        document.getElementById('selectxpath').classList.add("selected-attr");
        
        document.getElementById('selectattr').classList.remove("selected-attr");
        document.getElementById('selectcss').classList.remove("selected-attr");
      var  type_of_selector = 'usexpath';
        window.postMessage({selectorType: type_of_selector}, '*');

    }
    
    document.getElementById('selectelement').onclick = function(){
        document.getElementById('selectelement').classList.add("selected-attr");
        
        document.getElementById('selectattr').classList.remove("selected-attr");
        document.getElementById('selectcss').classList.remove("selected-attr");
      var  type_of_selector = 'useelement';
        window.postMessage({selectorType: type_of_selector}, '*');

    }

    document.getElementById('selectgroupcss').onclick = function(){
        document.getElementById('selectgroupcss').classList.add("selected-attr");
        
        document.getElementById('selectattr').classList.remove("selected-attr");
        document.getElementById('selectcss').classList.remove("selected-attr");
      var  type_of_selector = 'usegroupcss';
        window.postMessage({selectorType: type_of_selector}, '*');

    }
    document.getElementById('selectattr').onclick = function(){
        document.getElementById('selectattr').classList.add("selected-attr");
        document.getElementById('selectxpath').classList.remove("selected-attr");
        document.getElementById('selectcss').classList.remove("selected-attr");

       var type_of_selector = 'useattr';
        window.postMessage({selectorType: type_of_selector}, '*');

    }
        </script>`);

                                $('HTML').append(`<script>document.getElementById('gmailgpt').onclick = function(){
            opened_editor = !opened_editor; 

            //document.getElementById('script').style.display = 'block';
            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
            
   window.postMessage({style:'gmail', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
           
         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
   
           document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
   
       if(document.all)
       for(var i in document.links)
       document.links[i].onfocus = document.links[i].blur;
           }</script>`);

                                $('HTML').append(`<script>document.getElementById('excelgpt').onclick = function(){
            opened_editor = !opened_editor; 

            //document.getElementById('script').style.display = 'block';
            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
            
   window.postMessage({style:'excel', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
           
         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
   
           document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
   
       if(document.all)
       for(var i in document.links)
       document.links[i].onfocus = document.links[i].blur;
           }</script>`);


                                $('HTML').append(`<script>document.getElementById('rssgpt').onclick = function(){
            opened_editor = !opened_editor; 

            //document.getElementById('script').style.display = 'block';
            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
            
   window.postMessage({style:'rss', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
           
         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
   
           document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
   
       if(document.all)
       for(var i in document.links)
       document.links[i].onfocus = document.links[i].blur;
           }</script>`);


                                $('HTML').append(`<script>document.getElementById('filtergpt').onclick = function(){
            opened_editor = !opened_editor; 

            //document.getElementById('script').style.display = 'block';
            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
            
   window.postMessage({style:'filter', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
           
         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
   
           document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
   
       if(document.all)
       for(var i in document.links)
       document.links[i].onfocus = document.links[i].blur;
           }</script>`);


                                $('HTML').append(`<script>document.getElementById('pdfgpt').onclick = function(){
                            opened_editor = !opened_editor; 
                
                            //document.getElementById('script').style.display = 'block';
                            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                            
                   window.postMessage({style:'pdf', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                           
                         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                   
                           document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                   
                       if(document.all)
                       for(var i in document.links)
                       document.links[i].onfocus = document.links[i].blur;
                           }</script>`);

                                $('HTML').append(`<script>document.getElementById('rikugpt').onclick = function(){
                            opened_editor = !opened_editor; 
                
                            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                            
                   window.postMessage({style:'riku', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                           
                         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                   
                           document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                   
                       if(document.all)
                       for(var i in document.links)
                       document.links[i].onfocus = document.links[i].blur;
                           }</script>`);

                           $('HTML').append(`<script>document.getElementById('promptgpt').onclick = function(){
                            opened_editor = !opened_editor; 
                
                            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                            
                   window.postMessage({style:'prompt', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                           
                         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                   
                           document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                   
                       if(document.all)
                       for(var i in document.links)
                       document.links[i].onfocus = document.links[i].blur;
                           }</script>`);

                                $('HTML').append(`<script>document.getElementById('webhookgpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                
                window.postMessage({style:'webhook', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);



                                $('HTML').append(`<script>document.getElementById('getdatagpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                
                window.postMessage({style:'getdata', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);


                                $('HTML').append(`<script>document.getElementById('gdocsgpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        
                        
                        
                        
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                
                window.postMessage({style:'gdocs', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);

                                $('HTML').append(`<script>document.getElementById('scrollgpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        
                        
                        
                        
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                 
                window.postMessage({style:'scroll', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px;  box-sizing: content-box; position:fixed;top:0px;left:0%;width:80%:height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);
                                /*       $('HTML').append(`<script>document.getElementById('forwardgpt').onclick = function(){
                                           opened_editor = !opened_editor; 
                                           //document.getElementById('script').style.display = 'block';
                                           document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                                           
                                           
                                           
                                           
                                           var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                                           
                                    
                                   window.postMessage({style:'forward', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                                          
                                        //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                                   
                                          document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; box-sizing: content-box; position:fixed;top:0px;left:0%;width:80%:height:100%;background-color:white;color:black;display:none;';
                                   
                                      if(document.all)
                                      for(var i in document.links)
                                      document.links[i].onfocus = document.links[i].blur;
                                          }</script>`);
                                       $('HTML').append(`<script>document.getElementById('backgpt').onclick = function(){
                                           opened_editor = !opened_editor; 
                                           //document.getElementById('script').style.display = 'block';
                                           document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                                           
                                           
                                           
                                           
                                           var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                                           
                                     
                                   window.postMessage({style:'back', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                                          
                                        //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                                   
                                          document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; box-sizing: content-box; position:fixed;top:0px;left:0%;width:80%:height:100%;background-color:white;color:black;display:none;';
                                   
                                      if(document.all)
                                      for(var i in document.links)
                                      document.links[i].onfocus = document.links[i].blur;
                                          }</script>`);
                                   
                                          */
                                $('HTML').append(`<script>document.getElementById('screenshotgpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        
                        
                        
                        
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                
                window.postMessage({style:'screenshot', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);
                                $('HTML').append(`<script>document.getElementById('hovergpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        
                        
                        
                        
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                
                window.postMessage({style:'hover', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);

                                $('HTML').append(`<script>document.getElementById('keypressgpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        
                        
                        
                        
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                 
                window.postMessage({style:'keypress', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);


                                $('HTML').append(`<script>document.getElementById('gcalgpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                
                window.postMessage({style:'gcal', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);


                                $('HTML').append(`<script>document.getElementById('sentimentgpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                
                window.postMessage({style:'sentiment', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);


                                $('HTML').append(`<script>document.getElementById('ocrgpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                
                window.postMessage({style:'OCR', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);


                                $('HTML').append(`<script>document.getElementById('objectgpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                
                window.postMessage({style:'object', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);

                                $('HTML').append(`<script>document.getElementById('gsheetsgpt').onclick = function(){
                        opened_editor = !opened_editor;
                      //  document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        
                        
                        
                        
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        //window.postMessage({generate: input} , '*'); 
                        
                
                       
                        window.postMessage({style:'gsheets', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                
                        window.postMessage({opened_selector: "false"} , '*');
                        document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';}
                        </script>`);


                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
                    document.getElementById('consolegpt').onclick = function(){
                         opened_editor = !opened_editor; 
                         //document.getElementById('script').style.display = 'block';
                         document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                         
                         
                         
                         
                         var selected_attribute = '` + arr[0] + `';
                         var selected_attribute_val = \`` + selected_element.getAttribute(arr[0]) + `\`;
                
                         var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and loop through them and print them to the web console.';
                      //   window.postMessage({generate: input} , '*'); 
                      
                
                    
                      window.postMessage({style:'print', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                
                         window.postMessage({opened_selector: "false"} , '*');
                         document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                     }</script>`);

                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
                     document.getElementById('codegpt').onclick = function(){
                         opened_editor = !opened_editor; 
                         //document.getElementById('script').style.display = 'block';
                         document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                         
                         
                         
                         
                         var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and run a script on them.';
                        // window.postMessage({generate: input} , '*'); 
                        
                
                        window.postMessage({style:'script', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                
                         window.postMessage({opened_selector: "false"} , '*');
                         document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                     }</script>`);



                                var newXpath = createXPathFromElement(selected_element);
                                // //console.log(newXpath);
                                document.getElementById('xpath').value = newXpath;
                                var newcss = cssPath(selected_element);
                                // //console.log(newXpath);
                                document.getElementById('cssselector').value = newcss;
                                document.getElementById('cssselectorgroup').value = newcss;

                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
                
                     document.getElementById('pushgpt').onclick = function(){ 
                         window.postMessage({opened_selector: "false"} , '*');
                opened_editor = !opened_editor;
                //document.getElementById('script').style.display = 'block';
                document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                
                 var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and pushes them.';
                //window.postMessage({generate: input} , '*');
                
                
                
                window.postMessage({style:'click', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                
                document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                 }</script>`);


                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
                
                 document.getElementById('localgpt').onclick = function(){ window.postMessage({opened_selector: "false"} , '*');
                opened_editor = !opened_editor;
                //document.getElementById('script').style.display = 'block';
                document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                
                 var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and save them to a local variable.';
                //window.postMessage({generate: input} , '*');
                
                
                window.postMessage({style:'variable', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                
                document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                }</script>`);
                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
                
                document.getElementById('setgpt').onclick = function(){ window.postMessage({opened_selector: "false"} , '*');
                opened_editor = !opened_editor;
                //document.getElementById('script').style.display = 'block';
                document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                
                 var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and set the value to test.';
                //window.postMessage({generate: input} , '*');
                
                
                window.postMessage({style:'input', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                
                document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                }</script>`);
                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
                
                document.getElementById('downloadgpt').onclick = function(){ window.postMessage({opened_selector: "false"} , '*');
                opened_editor = !opened_editor;
                //document.getElementById('script').style.display = 'block';
                document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                
                 var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and download them.';
                //window.postMessage({generate: input} , '*');
                
                
                window.postMessage({style:'download', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                
                document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                }</script>`);

                                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
                
                document.getElementById('innertextgpt').onclick = function(){ window.postMessage({opened_selector: "false"} , '*');
                opened_editor = !opened_editor;
                
                //document.getElementById('script').style.display = 'block';
                document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                
                 var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and set the inner text to test.';
                //window.postMessage({generate: input} , '*');
                
                
                window.postMessage({style:'innerText', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                
                document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
                }</script>`);




                            }

                            if (window.location.href.includes('cheatlayer')) {

                                if (last_complete == 19) {
                                    introJs().setOptions({
                                        steps: [
                                            {
                                                element: document.querySelector('#codegpt'),
                                                intro: 'Click Run Code On Tab:'
                                            }]
                                    }).start();

                                }

                                if (last_complete == 2) {


                                    //document.querySelector('#gptselector').style.display = 'block';
                                    // $("#no_code_parameters").html(new_onboard_html);


                                    introJs().setOptions({
                                        steps: [
                                            {
                                                element: document.querySelector('#consolegpt'),
                                                intro: 'Click Print To Console in the No Code Interface:'
                                            }]
                                    }).start();



                                }

                                if (last_complete == 6) {


                                    //document.querySelector('#gptselector').style.display = 'block';
                                    // $("#no_code_parameters").html(new_onboard_html);


                                    introJs().setOptions({
                                        steps: [
                                            {
                                                element: document.querySelector('#setgpt'),
                                                intro: 'Click Set Value in the No Code Interface when you want to automate Input forms. This is useful for logging into websites, posting to social media, posting to blogs, or filling out government registration forms.'
                                            }]
                                    }).start();



                                }
                            }

                            //var input = prompt(' Enter the code you want to generate using natural written language. Finish this sentence: Generate a javascript code that ');
                            //      SendMessage("Generate", "data", event.data.generate);
                            //    (event.data.generate);


                        }
                    });
                    // in case you need to support older browsers use a requestAnimationFrame polyfill
                    // e.g: https://gist.github.com/paulirish/1579671
                    window.requestAnimationFrame(function frame() {
                        //(visible);
                        window.requestAnimationFrame(frame);
                        if (!visible && live_recording == false && no_code_enabled) {

                            //(document.getElementById('script').style.display == "none");
                            if (document.getElementById('script') && document.getElementById('script').style.display == "none" && (!document.getElementById('gptselector') || document.getElementById('gptselector').style.display == "none") && document.getElementById('script') && document.getElementById('script').style.display == "none" && document.getElementById('newnocode').style.display == "none") {

                                if ((typeof target != "undefined" && target.nodeName != "#text" && (target && !target.getAttribute("class"))) || (typeof target != "undefined" && target.nodeName != "#text" && target && target.getAttribute("class") && !target.getAttribute("class").includes("cheatlayer") && !target.getAttribute("class").includes("introjs") && !target.getAttribute("class").includes("tippy"))) {

                                    if (!target.getAttribute("id") || !target.getAttribute("id").includes("addCheat")) {

                                        if (target.parentNode.classList.length === 0 || (target.parentNode.getAttribute('class') && !target.parentNode.getAttribute('class').includes("cheatlayer") && !target.parentNode.getAttribute('class').includes("tippy"))) {

                                            box.show();

                                            if (target === lastTarget) return;
                                            var classString = "";
                                            var idString = "";
                                            if (target.getAttribute("id")) {
                                                idString = target.getAttribute("id");
                                            }

                                            if (target.getAttribute("class")) {
                                                classString = target.getAttribute("class");
                                            }

                                            function dumpCSSText(element){
                                                var s = '';
                                                var o = getComputedStyle(element);
                                                for(var i = 0; i < o.length; i++){
                                                  s+=o[i] + ':' + o.getPropertyValue(o[i])+';';
                                                }
                                                return s;
                                              }
                                            $("#targetcheat").html("Type: " +target.nodeName + "<br>Class: " + classString.substring(0,20) + "<br>id: " + idString.substring(0,20) );
                                            lastTarget = target;
                                            var $target = $(target);
                                            var offset = $target.offset();
                                            box.css({
                                                width: $target.outerWidth() - 1,
                                                height: $target.outerHeight() - 1,
                                                left: offset.left,
                                                top: offset.top,
                                                display: 'block',
                                                zIndex: 1000000000000,
                                                backgroundColor: "rgba(108,77,255,0.5 )", //"#6C4DFF",
                                                pointerEvents: 'none',
                                                
                                                border: '1px black',
                                                transition: "all .2s ease-in-out",
                                            });

                                            selected_element = target;
                                            last_selected_element = selected_element;


                                            total_childs = [];
                                            BFS(selected_element);


                                            (selected_element);
                                            var el = target;
                                            var arr = [];

                                            if (typeof el.attributes != '') {
                                                for (var i = 0, atts = el.attributes, n = atts.length, arr = []; i < n; i++) {
                                                    arr.push(atts[i].nodeName);
                                                }
                                                if (document.getElementById('highlight')) {
                                                    document.getElementById('highlight').style.pointEvents = 'none';
                                                }
                                                attr_str = "Element Type: " + selected_element.nodeName + " Attributes:";
                                                for (var kk = 0; kk < arr.length; kk++) {
                                                    attr_str += arr[kk]
                                                    attr_str += " (" + selected_element.getAttribute(arr[kk]) + ") ";
                                                }
                                                //        document.getElementById('elementselector').innerHTML = attr_str;
                                                //       document.getElementById('elementselector').style.cssText = "display:black;position:fixed; left:" + (mouseX + 50) + "px; top:" + (mouseY + 50) + "px;z-index:100000000; opacity:1.0; color:black; background-color:white;";
                                                box.css({
                                                    width: $target.outerWidth() - 1,
                                                    height: $target.outerHeight() - 1,
                                                    left: offset.left,
                                                    top: offset.top,
                                                    display: 'block',
                                                    zIndex: 1000000000000,
                                                    backgroundColor: "rgba(108,77,255,0.5 )", //"#6C4DFF",
                                                    pointerEvents: 'none',
                                                    
                                                    border: '1px black',
                                                    transition: "all .2s ease-in-out",

                                                });


                                            }

                                        }
                                    }
                                } else {
                                  //  box.hide();

                                    //    document.getElementById('elementselector').style.cssText = "display:none;z-index:100000000; opacity:1.0; color:black; background-color:white;";

                                }

                                if (typeof target != 'undefined' && target.nodeName != "#text" && target.getAttribute("class") && !target.getAttribute("class").includes("cheatlayer")) {
                                    if (target.getAttribute("id") && target.getAttribute("id").includes("addCheat")) {

                                    } else {
                                      //  box.hide();
                                    }
                                    //    document.getElementById('elementselector').style.cssText = "display:none;z-index:100000000; opacity:1.0; color:black; background-color:white;";



                                    // target = document.elementFromPoint(mouseX, mouseY);
                                    (target);
                                }



                            }
                        }


                    });

                    $("body").mousemove(function (e) {
                        mouseX = e.clientX;
                        mouseY = e.clientY;
                        target = e.target;
                        //("moving");
                    });
                }, 500);

            }

        }

        enabled_once = true;
        opened_cheatLayer = true;
        //style='background-color:#FFFFFF; border:1px solid #FFFFFF; border-radius:0px; color:#000000; margin-right:10px; padding:0px 10px 0px 0px;'
        visible = !visible;

        if (visible) {

            $('HTML').append("<style>.ace_editor, .ace_editor *{ font-family: 'Monaco', 'Menlo', 'Ubuntu Mono', 'Droid Sans Mono', 'Consolas', monospace !important; font-size: 24px !important; font-weight: 400 !important; letter-spacing: 0 !important; }</style><script> if(document.getElementById('newnocode')){ document.getElementById('newnocode').style.display = 'none';}if(document.getElementById('gptselector')){document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';}if(document.getElementById('cheatmenu')){document.getElementById('cheatmenu').style.display ='none';} document.getElementById('script').style='display:none; display:none; z-index:-10000;'; document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;display:none; z-index:-10000;' ; document.getElementById('generate').style.display ='none';document.getElementById('generate').style='display:none;';  document.getElementById('schedulerblock').style='display:none';document.getElementById('console').style='display:none'; if(document.getElementById('nocode')){document.getElementById('nocode').style='display:none;';} showeditor = false;</script>");
            // drawNoCodeContainer();
        } else {

            $('HTML').append("<script>showeditor = true; if(document.getElementById('newnocode')){ document.getElementById('newnocode').style.display = 'none';}if(document.getElementById('cheatmenu')){document.getElementById('cheatmenu').style.display ='none';} if(document.getElementById('script')){document.getElementById('script').style='display:none;z-index:100005; opacity:1.0;width: calc(100% - 270px); height:70%; overflow-y:hidden;overflow-x:hidden; position:fixed; left:0px; top:64.5px; font-size:24px; ';}if(document.getElementById('console')){document.getElementById('schedulerblock').style='display:none; background-color:white;color:black;z-index:100005; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:hidden;overflow-x:hidden; position:fixed; left:40%; top:calc(70% + 64.5px); font-size:24px; min-height:calc(30% - 64.5px); background-color:white;';document.getElementById('console').style='display:none; background-color:white;color:black;z-index:100005; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:scroll;overflow-x:scroll;     resize:both; position:fixed; left:0px; top:calc(70% + 64.5px); font-size:24px; min-height:calc(30% - 64.5px); background-color:white;';}if(document.getElementById('scriptlist')){document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;background-color:white;color:black;z-index:1000005; opacity:1.0; width:270px;height:100%; overflow-y:auto;overflow-x:hidden;overflow-x:hidden; position:fixed; right:0px; top:0px;';} if(document.getElementById('nocode')){document.getElementById('nocode').style='display:block;background-color:#FFFFFF; border:1px solid #FFFFFF; border-radius:0px; color:#000000; margin-right:10px; padding:0px 10px 0px 0px;';}if(document.getElementById('generate')){ document.getElementById('generate').style.display = 'block';}</script>");
            //  "https://cdnjs.cloudflare.com/ajax/libs/monaco-editor/0.26.1/min/vs/loader.min.js"></scr
            //  drawNoCodeContainer();






        }

        //  document.getElementById('script').style.display = 'none';
        //document.getElementById('console').style.display = 'none';


    }
    setTimeout(function () {
        //startOnboard(0);
        document.getElementById('no_code_parameters').style.display = 'none';

    }, 2000);
    document.getElementById('no_code_parameters').style.display = 'none';


}
function mod(n, m) {
    return ((n % m) + m) % m;
}
window.onerror = function (error, url, line) {
    if (document.getElementById('console') && !error.includes('WorkerGlobalScope') && !url.includes('oolmdenpaebkcokkccakmlmhcpnogalc') && !error.includes('oolmdenpaebkcokkccakmlmhcpnogalc')) {

        error_log += 'ERR:' + error + ' URL:' + url + ' L:' + line + '\n';
        document.getElementById('console').value = error_log;
        document.getElementById('console').scrollTop = document.getElementById('console').scrollHeight;

    }
};

function saveScript() {
    if(window.location.href.includes("spreadsheets")){
        $('#loadingCheat').hide();
        return;
    }
    if (false) {
        alert("You have reached the maximum number of scripts the free version. Please upgrade at cheatlayer.com/billing.");
        window.location.href = "https://cheatlayer.com/billing";
    } else {




        for (var kk = 0; kk < leader_lines.length; kk++) {
            if (leader_lines[kk] && typeof leader_lines[kk] !== 'undefined') {
                leader_lines[kk].remove();
                leader_lines[kk] = null;
            }
        }
        var name = last_saved;
        //scripts = event.data.scriptsNew;

        old = window.editor.getValue();
        setTimeout(function () {

            window.editor.setValue(old)
            document.getElementById('console').style.display = "block";
            document.getElementById('script').style.display = "block";
            document.getElementById('cheatmenu').style.display = "block";

        }, 5000);

        if (last_saved == 'new') {
            if (!(document.getElementById('saveMenu'))) {

                var options_string = `<select class='selectCheat selectBox  select' name="vars" id='folderSelection'>
        `;
                for (var jj = 0; jj < folders.length; jj++) {
                    if (folders[jj].split(" ").join("").length == 0) {
                        continue;
                    }
                    options_string += `<option value="` + folders[jj] + `">` + folders[jj] + `</option>`;

                }
                options_string += `<option selected='selected' value="">None</option>`;

                options_string += `</select>`;

                $('HTML').append(`

<div id="saveMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >

<div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:80%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
<center><h1 style="color:black !important;">Save Script</h1><br>

Script Name:<br>
<input value='` + last_saved + `' style='border:1px solid !important;background-color:white;color:black;color:black;z-index:1000000000000000000;' type='text' id='nameSave' name='name'><br>
Website:<br>
<input style='border:1px solid !important;background-color:white;color:black;color:black;z-index:1000000000000000000;' type='text' id='websiteSave' name='website'><br>
Time Saved(minutes):<br>
<input  value="5" style='background-color:white;color:black;color:black;z-index:1000000000000000000;' type='text' id='timeSave' name='time'><br>
<br>Folder: 
` + options_string + `<br><br>

<button style='background-color:white;color:black;' id='saveScript'>Save</button>
<button style='background-color:white;color:black;' id='cancelsaveScript'>Cancel</button><br>
<a href='#' id='addInterfaceInput'>+Add Input</a><br>

<div id='interfaceCanvas' style='height:50%;width:100%;position:relative;overflow-y:hidden;'>
</div>

</center>
</div>


</div>
`);
            } else {
                document.getElementById('saveMenu').style.display = "block";

            }
            var interface_html = "";
            for (var kk = 0; kk < interface.length; kk++) {
                interface_html += 'input ' + kk + ' : <input class="interfaceCheatInput" id="input' + kk + '" type="text" value="' + interface[kk].value + '"></input><br>';
            }
            $("#nameSave").keypress(function (event) {
                if (event.keyCode === 13) {
                    $("#saveScript").click();
                }
            });
            $("#websiteSave").keypress(function (event) {
                if (event.keyCode === 13) {
                    $("#saveScript").click();
                }
            });
            document.getElementById('interfaceCanvas').innerHTML = interface_html + "<br>";
            $('.interfaceCheatInput').keyup(function (event) {
                // play with event
                // use $(this) to determine which element triggers this event
            });
            document.getElementById('addInterfaceInput').onclick = function () {
                //  document.getElementById('saveMenu').style.display = "none";
                var inputName = prompt('Enter Input Name');
                var name = inputName;
                interface.push({ type: "text", value: "default", name: name });
                var interface_html = "";
                for (var kk = 0; kk < interface.length; kk++) {
                    interface_html += interface[kk].name + ' : <input id="' + interface[kk].name + '" type="text" value="' + interface[kk].value + '"></input><br>';
                }
                input_vars
                input_vars.push(`inputs['` + inputName + `']`);

                document.getElementById('interfaceCanvas').innerHTML = interface_html + "<br>";

            };
            if (!(document.getElementById('saveMenu'))) {
                var options_string = `<select class='selectCheat selectBox  select' name="vars" id='folderSelection'>
            `;
                for (var jj = 0; jj < folders.length; jj++) {
                    if (folders[jj].split(" ").join("").length == 0) {
                        continue;
                    }
                    options_string += `<option value="` + folders[jj] + `">` + folders[jj] + `</option>`;

                }
                options_string += `<option selected='selected' value="">None</option>`;

                options_string += `</select>`;

                $('HTML').append(`
    
    <div id="saveMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
    
    <div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:80%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
    <center><h1 style="color:black !important;">Save Script</h1><br>
    
    Script Name:<br>
    <input value='` + last_saved + `' style='border:1px solid !important;background-color:white;color:black;color:black;z-index:1000000000000000000;' type='text' id='nameSave' name='name'><br>
    Website:<br>
    <input style='border:1px solid !important;background-color:white;color:black;color:black;z-index:1000000000000000000;' type='text' id='websiteSave' name='website'><br>
    Time Saved(minutes):<br>
    <input  value="5" style='background-color:white;color:black;color:black;z-index:1000000000000000000;' type='text' id='timeSave' name='time'><br>
<br>Folder: 
` + options_string + `<br>
    
    <button style='background-color:white;color:black;' id='saveScript'>Save</button>
    <button style='background-color:white;color:black;' id='cancelsaveScript'>Cancel</button>
    <a href='#' id='addInterfaceInput'>+Add Input</a><br>

    <div id='interfaceCanvas' style='height:50%;width:100%;position:relative;overflow-y:hidden;'>
    </div>

    </center>
    </div>
    
    
    </div>
    `);
            } else {
                document.getElementById('saveMenu').style.display = "block";

            }
            var interface_html = "";
            for (var kk = 0; kk < interface.length; kk++) {
                interface_html += 'input ' + kk + ' : <input class="interfaceCheatInput" id="input' + kk + '" type="text" value="' + interface[kk].value + '"></input><br>';
            }
            document.getElementById('interfaceCanvas').innerHTML = interface_html + "<br>";
            $("#nameSave").keypress(function (event) {
                if (event.keyCode === 13) {
                    $("#saveScript").click();
                }
            });
            $("#websiteSave").keypress(function (event) {
                if (event.keyCode === 13) {
                    $("#saveScript").click();
                }
            });

            document.getElementById('addInterfaceInput').onclick = function () {
                //  document.getElementById('saveMenu').style.display = "none";
                var inputName = prompt('Enter Input Name');
                var name = inputName;
                interface.push({ type: "text", value: "default", name: name });
                var interface_html = "";
                for (var kk = 0; kk < interface.length; kk++) {
                    interface_html += interface[kk].name + ' : <input id="' + interface[kk].name + '" type="text" value="' + interface[kk].value + '"></input><br>';
                }

                input_vars.push(`inputs['` + inputName + `']`);

                document.getElementById('interfaceCanvas').innerHTML = interface_html + "<br>";

            };
            $('.interfaceCheatInput').keyup(function (event) {
                // play with event
                // use $(this) to determine which element triggers this event
            });

            document.getElementById('cancelsaveScript').onclick = function () {
                document.getElementById('saveMenu').style.display = "none";
                $('#loadingCheat').hide();
            };

            document.getElementById('saveScript').onclick = function () {
                var folder = document.getElementById('folderSelection').value;

                if (!document.getElementById('loadingCheat')) {
                    $('HTML').append(`<div id='loadingCheat' style='width: calc(100% - 270px);height:90%;left:0%;top:64.5px;position:fixed;background-color:white;z-index:1000000;'><img style='position:fixed;left:25%; top:30%;' src='` + chrome.runtime.getURL("logo.gif") + `'></img></div>`);
                } else {
                    $('#loadingCheat').show();
                }


                document.getElementById('saveMenu').style.display = "none";

                if (last_saved == 'new') {

                    name = document.getElementById('nameSave').value;
                    var start = document.getElementById('websiteSave').value;
                    if (!start) {
                        start = 'www.cheatlayer.com';
                    }
                    last_saved = name;
                }
                if (!name) {
                    name = 'null';
                }

                var found = false;
                old = window.editor.getValue();
                for (var kk = 0; kk < interface.length; kk++) {

                    interface[kk].value = document.getElementById('input' + kk).value;
                    //  interface[kk].name = document.getElementById('input' + kk).name;

                }


                var saved_script = window.editor.getValue()

                if (saved_script.includes("[stop interface code]")) {

                    saved_script = saved_script.split('[stop interface code]')[1].split('//[start interface code]')[0];
                }

                if (interface.length > 0) {


                    var options_html = "var inputs = {";
                    for (var kk = 0; kk < interface.length; kk++) {
                        options_html += '"' + interface[kk].name + '":"' + interface[kk].value + '",';
                    }
                    options_html += `};
    function start(){
    `;
                    saved_script = options_html + `
    //[stop interface code]
    ` + saved_script + `
    //[start interface code]
    }
    $("body").append(\`<div id='cheatInterface' style='overflow:auto;position:fixed;top:0;left:25%;width:50%;height:50%;background-color:white;opacity:1.0;z-index:10000000000;'>
    <center><h1>` + name + `</h1>
    <br>
    `
                    for (var kk = 0; kk < interface.length; kk++) {
                        saved_script += 'input ' + kk + ' : <input class="interfaceCheatInput" style="padding:10px;margin:10px;" id="input' + kk + '" type="text" value="' + interface[kk].value + '"></input><br>';
                    }

                    saved_script += `<button style="padding:10px;margin:10px;" id='startCheat'>Start</button><br><button style="padding:10px;margin:10px;" id='cancelCheat'>Cancel</button></center></div>
    \`);
`;
                    for (var kk = 0; kk < interface.length; kk++) {

                        saved_script += `
$('#input` + kk + `').on('keyup', function(e) {

    inputs['input` + kk + `'] = e.target.value;
});
`;

                    }

                    saved_script += `
    document.getElementById('startCheat').onclick = function(){
        start();
        document.getElementById('cheatInterface').style.display = "none";

    };
    document.getElementById('cancelCheat').onclick = function(){
        document.getElementById('cheatInterface').style.display = "none";
    };
    
    `;
                }
                old_code = saved_script;
                old = saved_script;
                var time = document.getElementById('timeSave').value;

                window.editor.setValue(saved_script);
                window.editor.renderer.updateFull(); window.editor.resize();
                //setTimeout(function(){window.editor.renderer.updateFull(); window.editor.resize();},2000);

                for (var kk = 0; kk < scripts.length; kk++) {
                    if (scripts[kk].name == name) {
                        found = true;
                        scripts[kk].script = saved_script;
                        scripts[kk].deleted = false;
                        scripts[kk].time = time;
                        scripts[kk].folder = folder;

                    }
                }
                last_saved = name;

                if (found == false) {
                    scripts.push({
                        name: name,
                        start: start,
                        time: time,
                        folder: folder,
                        interface: interface,
                        script: saved_script,
                        no_code_container: no_code_container
                    });
                }
                interface = [];

                SendMessage("Scripts", "target", { scripts: scripts });

            };


        } else {

            var name = last_saved;
            var found = false;
            for (var kk = 0; kk < scripts.length; kk++) {
                if (scripts[kk].name == name) {
                    found = true;
                    scripts[kk].script = window.editor.getValue();
                    scripts[kk].no_code_container = no_code_container;

                }
            }
            last_saved = name;
            SendMessage("Scripts", "target", { scripts: scripts });
            //   SendMessage("GetScripts", "target", window.location.href);


        }
    }

}
function objToString(obj) {
    return Object.entries(obj).reduce((str, [p, val]) => {
        return `${str}${p}::${val}\n`;
    }, '');
}

var childs = [];
var total_childs = [];
var selected_child = 0;

function BFS(elem) {
    elem.childNodes.forEach(function (a) {
        if (a.nodeName != "#text") {
            childs.push(a);
        }
    });
    b = childs;
    total_childs = total_childs.concat(childs);
    childs = [];
    b.forEach(function (a) {
        BFS(a);
    });
}


console.stdlog = console.log.bind(console);
s = [];
console.log = function () {
    s.push(Array.from(arguments));
    var logs = Array.from(arguments);
    for (var kk = 0; kk < logs.length; kk++) {
        error_log += logs[kk].toString() + '\n';

    }
    if (document.getElementById('console')) {
        document.getElementById('console').value = error_log;
        document.getElementById('console').scrollTop = document.getElementById('console').scrollHeight;

    }
    console.stdlog.apply(console, arguments);
}





function simulateClick(x, y) {

    SendMessage("simulateClick", "data", { X: x, Y: y });


}



function getTabs() {

    SendMessage("getTabs", "data", "");


}


function getXML(url, callback) {

    SendMessage("getXML", "data", {
        url: url,
        callback: callback
    });


}

function sendAjax(url, data = {}, mode = "GET", callback = '', headers = {}, dataType , contentType) {
    var currentTab_id = 0;

    SendMessage("sendAjax", "data", {
        url: url,
        data: data,
        mode: mode,
        callback: callback,
        headers: headers,
        dataType: dataType,
        currentTab_id: currentTab_id,
        contentType: contentType
    });


}
function createXPathFromElement(elm) {
    var allNodes = document.getElementsByTagName('*');
    for (var segs = []; elm && elm.nodeType == 1; elm = elm.parentNode) {
        if (elm.hasAttribute('id')) {
            var uniqueIdCount = 0;
            for (var n = 0; n < allNodes.length; n++) {
                if (allNodes[n].hasAttribute('id') && allNodes[n].id == elm.id) uniqueIdCount++;
                if (uniqueIdCount > 1) break;
            };
            if (uniqueIdCount == 1) {
                segs.unshift('id("' + elm.getAttribute('id') + '")');
                return segs.join('/');
            } else {
                segs.unshift(elm.localName.toLowerCase() + '[@id="' + elm.getAttribute('id') + '"]');
            }
        } else if (elm.hasAttribute('class')) {
            segs.unshift(elm.localName.toLowerCase() + '[@class="' + elm.getAttribute('class') + '"]');
        } else {
            for (i = 1, sib = elm.previousSibling; sib; sib = sib.previousSibling) {
                if (sib.localName == elm.localName) i++;
            };
            segs.unshift(elm.localName.toLowerCase() + '[' + i + ']');
        };
    };
    return segs.length ? '/' + segs.join('/') : null;
};

function lookupElementByXPath(path) {
    var evaluator = new XPathEvaluator();
    var result = evaluator.evaluate(path, document.documentElement, null, XPathResult.FIRST_ORDERED_NODE_TYPE, null);
    return result.singleNodeValue;
}
function downloadData(text, filename) {

    var dataBlob = new Blob([text], { type: "text/plain" });
    var objUrl = URL.createObjectURL(dataBlob);

    var link2 = document.createElement("a");
    var dname = 'data.txt';
    if (filename) {
        dname = filename;
    }
    link2.href = objUrl;
    link2.innerHTML = "With createObjectURL";
    link2.download = dname;
    document.body.appendChild(link2);
    link2.click();


}

function downloadFile(url, filename = 'data.txt') {
    //console.log(url.substring(0, 8))
    if (url.substring(0, 8) == "https://") {
        if (filename) {
            SendMessage("downloadFile", "URL", { url: url, filename: filename, type: "file" });
        } else {
            SendMessage("downloadFile", "URL", { url: url, filename: filename, type: "file" });

        }
    } else {

        downloadData(url, filename);
    }



}

function getPDF(url) {
    ``````
    SendMessage("getPDF", "url", url);

}

function google_sheets_add_row(SheetID, tab, values) {
    //console.log("Adding Row to google sheets");

    var inputID = SheetID;

    if (inputID.includes('https://')) {
        inputID = SheetID.split('/')[5];
    }


    SendMessage("google_sheets_add_row", "data", {
        SheetID: inputID, tab: tab, values: values
    });


}


function google_sheets_update_cell(SheetID, tab, values, x, y) {
    //console.log("Adding Row to google sheets");

    var inputID = SheetID;

    if (inputID.includes('https://')) {
        inputID = SheetID.split('/')[5];
    }


    SendMessage("google_sheets_update_cell", "data", {
        SheetID: inputID, tab: tab, values: values, x: x, y: y
    });


}

//google_sheets_add_row
function google_docs_append(docID, input) {

    SendMessage("google_docs_append", "data", {
        docID: docID, input: input
    });


}



function google_docs_append_row(docID, input, index) {

    SendMessage("google_docs_append_row", "data", {
        docID: docID, input: input, index: index
    });


}



function google_calendar_append(event, url) {

    SendMessage("google_calendar_append", "data", {
        event: event, url: url
    });


}


function runOnTab(url, script, timeout = 120, options = { id: -1, newWindow: false, runDelay: 5000 }) {

    SendMessage("runOnTab", "data", {
        url: url,
        script: script,
        timeout: timeout,
        options: options
    });


}

function keepAlive() {

    SendMessage("keepAlive", "index", last_run);


}

function redrawList(folder = "") {
    var script_html = "";


    if (folder == "") {
        for (var kk = 0; kk < folders.length; kk++) {
            if (folders[kk].split(" ").join("").length == 0) {
                continue;
            }
            script_html += `  <li class="cheatlayer folder-line-cheatlayer dropzone-cheat" aria-label="` + folders[kk] + `">
            <div class="cheatlayer list-inner code-list-wrap">
           
                <div class='cheatlayer' style='white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 100%;' class='cheatlayer' >
                    <img src="` + chrome.runtime.getURL("folder.png") + `" width="32px" height="32px" style="margin:10px" class="cheatlayer img-fluid">
                    <span class='cheatlayer'style="position:relative;top:0px;white-space: pre-wrap; word-wrap:break-word;" >` + folders[kk] + `</span>
                </div>
               
            </div>
        
        </li>`;
        }
    } else {
        script_html += `  <li class="cheatlayer root-line-cheatlayer dropzone-cheat" aria-label="rootCheat">
    <div class="cheatlayer list-inner code-list-wrap">
   
        <div class='cheatlayer' style='white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 100%;' class='cheatlayer' >
            <img src="` + chrome.runtime.getURL("backroot.png") + `" width="32px" height="32px" style="margin:10px" class="cheatlayer img-fluid">
            <span class='cheatlayer'style="position:relative;top:0px;white-space: pre-wrap; word-wrap:break-word;" >Back To Root</span>
        </div>
       
    </div>

</li>`;
    }
    for (var kk = 0; kk < scripts.length; kk++) {
        if (scripts[kk].deleted != "true") {

            if (scripts[kk].start.includes("*")) {
                scripts[kk].start = "cheatlayer.com";
            }
            var temstart = scripts[kk].start;
            if (scripts[kk].start.includes("http")) {
                temstart = scripts[kk].start.split("//")[1];
            }
            temstart = temstart.split("/")[0];
            if (scripts[kk].folder == folder || (folder == "" && (!scripts[kk].folder || typeof scripts[kk].folder == 'undefined' || scripts[kk].folder == ""))) {
                script_html += `<div class="cheatlayer code-line-cheatlayer drag-drop-folder-cheat">
        <div class="cheatlayer list-inner code-list-wrap">
       
            <div class='cheatlayer cheatline' style='white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 80%;' class='cheatlayer' >
                <img src="https://` + temstart + `/favicon.ico" width="32px" height="32px" style="margin:10px" class="cheatlayer img-fluid">
                <span class='cheatlayer'style="position:relative;top:0px;white-space: pre-wrap; word-wrap:break-word;">` + scripts[kk].name + `</span>
            </div>
           
                        </div>
                    
                    </div>
                    <div id="content` + kk + `"  class='cheatlayer'style="display: none;z-index:100000">
    <ul class="cheatlayer code-gen-list" style="z-index:1000000000">
        <li><a  style="display: block;" class='cheatlayer cheatlayer runscript runcheat' type='button' aria-label='` + kk + `' id='run` + kk + `' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M11 21C16.5228 21 21 16.5228 21 11C21 5.47715 16.5228 1 11 1C5.47715 1 1 5.47715 1 11C1 16.5228 5.47715 21 11 21Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M3.66699 10.9998C3.66699 9.05492 4.43961 7.18965 5.81488 5.81439C7.19014 4.43912 9.0554 3.6665 11.0003 3.6665C12.9452 3.6665 14.8105 4.43912 16.1858 5.81439C17.561 7.18965 18.3337 9.05492 18.3337 10.9998" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M8.33301 7L9.72901 12.714C9.78431 12.9026 9.88075 13.0766 10.0114 13.2234C10.142 13.3703 10.3036 13.4863 10.4845 13.5632C10.6654 13.6401 10.8611 13.6759 11.0574 13.668C11.2538 13.6601 11.446 13.6088 11.6202 13.5177C11.7943 13.4267 11.9461 13.2981 12.0646 13.1413C12.1831 12.9845 12.2654 12.8033 12.3054 12.6109C12.3455 12.4185 12.3424 12.2196 12.2963 12.0286C12.2502 11.8375 12.1624 11.659 12.039 11.506C12.041 11.4653 8.33301 7 8.33301 7Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            Run</a></li>
            <li><a  style="display: block;" class='cheatlayer cheatlayer runscript loopcheat'   aria-label='` + kk + `' type='button' id='loop` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M11 21C16.5228 21 21 16.5228 21 11C21 5.47715 16.5228 1 11 1C5.47715 1 1 5.47715 1 11C1 16.5228 5.47715 21 11 21Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M3.66699 10.9998C3.66699 9.05492 4.43961 7.18965 5.81488 5.81439C7.19014 4.43912 9.0554 3.6665 11.0003 3.6665C12.9452 3.6665 14.8105 4.43912 16.1858 5.81439C17.561 7.18965 18.3337 9.05492 18.3337 10.9998" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M8.33301 7L9.72901 12.714C9.78431 12.9026 9.88075 13.0766 10.0114 13.2234C10.142 13.3703 10.3036 13.4863 10.4845 13.5632C10.6654 13.6401 10.8611 13.6759 11.0574 13.668C11.2538 13.6601 11.446 13.6088 11.6202 13.5177C11.7943 13.4267 11.9461 13.2981 12.0646 13.1413C12.1831 12.9845 12.2654 12.8033 12.3054 12.6109C12.3455 12.4185 12.3424 12.2196 12.2963 12.0286C12.2502 11.8375 12.1624 11.659 12.039 11.506C12.041 11.4653 8.33301 7 8.33301 7Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>
            Loop
            </a></li>
        <li><a  style="display: block;" class='cheatlayer cheatlayer runscript editcheat' aria-label='` + kk + `' type='button' id='edit` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M1 21H11H21" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M11.2464 4.1427L16.7462 9.64238M11.2464 4.1427L14.3892 1L19.8888 6.49972L16.7462 9.64238L11.2464 4.1427ZM11.2464 4.1427L5.01684 10.3723C4.80847 10.5806 4.69141 10.8633 4.69141 11.1579V16.1974H9.73093C10.0256 16.1974 10.3082 16.0804 10.5166 15.8719L16.7462 9.64238L11.2464 4.1427Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>Edit
            </a></li>
        <li><a  style="display: block;" class='cheatlayer cheatlayer runscript removecheat'   aria-label='` + kk + `' type='button' id='remove` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M18.7782 9.88867V20.3331C18.7782 20.7013 18.4798 20.9998 18.1115 20.9998H3.88932C3.52113 20.9998 3.22266 20.7013 3.22266 20.3331V9.88867"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M8.77734 16.5553V9.88867" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M13.2227 16.5553V9.88867" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M6.55556 5.44444H15.4444M21 5.44444H15.4444H21ZM1 5.44444H6.55556H1ZM6.55556 5.44444V1.66667C6.55556 1.29848 6.85403 1 7.22222 1H14.7778C15.146 1 15.4444 1.29848 15.4444 1.66667V5.44444H6.55556Z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>Remove
            </a></li>
        <li><a style="display: block;" class='cheatlayer cheatlayer runscript whitecheat'   aria-label='` + kk + `' type='button' id='whitelabel` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
            <path d="M11.5769 1L1 11.5769C1.50617 12.0766 1.79742 12.754 1.81178 13.4651C1.82615 14.1763 1.5625 14.8649 1.07692 15.3846L6.61538 20.9231C7.13509 20.4375 7.82375 20.1739 8.53485 20.1882C9.24596 20.2026 9.9234 20.4938 10.4231 21L21 10.4231C20.743 10.1691 20.539 9.86664 20.3997 9.53323C20.2605 9.19982 20.1887 8.84209 20.1887 8.48077C20.1887 8.11945 20.2605 7.76172 20.3997 7.42831C20.539 7.0949 20.743 6.79244 21 6.53846L15.4615 1C15.2076 1.257 14.9051 1.46103 14.5717 1.60029C14.2383 1.73955 13.8806 1.81125 13.5192 1.81125C13.1579 1.81125 12.8002 1.73955 12.4668 1.60029C12.1334 1.46103 11.8309 1.257 11.5769 1Z"  stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
            <path d="M9.92283 17.0385C9.70067 17.2523 9.40428 17.3718 9.0959 17.3718C8.78752 17.3718 8.49114 17.2523 8.26898 17.0385L4.96129 13.7308C4.74741 13.5086 4.62793 13.2122 4.62793 12.9039C4.62793 12.5955 4.74741 12.2991 4.96129 12.0769L12.1536 4.88463C12.3758 4.67075 12.6721 4.55127 12.9805 4.55127C13.2889 4.55127 13.5853 4.67075 13.8074 4.88463L17.1151 8.19232C17.329 8.41448 17.4485 8.71086 17.4485 9.01924C17.4485 9.32762 17.329 9.62401 17.1151 9.84616L9.92283 17.0385Z"  stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
            </svg>White Label
            </a></li>
      
    </ul>
    </div>`;
            }
        }
    }

    if (folder == "") {

    } else {
        script_html += `  <li class="cheatlayer remove-line-cheatlayer dropzone-cheat" aria-label="` + folder + `">
<div class="cheatlayer list-inner code-list-wrap">

    <div class='cheatlayer' style='white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 100%;' class='cheatlayer' >
        <img src="` + chrome.runtime.getURL("redx.png") + `" width="32px" height="32px" style="margin:10px" class="cheatlayer img-fluid">
        <span class='cheatlayer'style="position:relative;top:0px;white-space: pre-wrap; word-wrap:break-word;" >Remove Folder</span>
    </div>
   
</div>

</li>`;
    }


    $(".cheat-code-company-list").html(script_html);






}
$(document).ready(function () {
    CreateComPort();
    
    //console.log("GET Prompts?")

    if(window.location.href.includes("cheatlayer.com")){
        SendMessage("getPrompts", "target", {  });
        //console.log("GET Prompts")
    }
    console.log("GET Tasks?")
    SendMessage("getTasks", "target", {  });

    getTabs();
    $(document).keyup(function(e) {
        if (e.key === "Escape") { // escape key maps to keycode `27`
           // <DO YOUR WORK HERE>
              if (document.getElementById('chatWrapper')) {
                $('#chatWrapper').hide();

                }
       }
   });
    $(document).on('click', '#export', function () {
        exportObj = scripts;
        exportName = 'cheatlayer';

        var dataStr = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(exportObj));
        var downloadAnchorNode = document.createElement('a');
        downloadAnchorNode.setAttribute("href", dataStr);
        downloadAnchorNode.setAttribute("download", exportName + ".json");
        document.body.appendChild(downloadAnchorNode); // required for firefox
        downloadAnchorNode.click();
        downloadAnchorNode.remove();

    });


    $(document).on('click', '#import', function () {
        if (!(document.getElementById('importMenu'))) {

            $('HTML').append(`
            
            <div id="importMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
            <div  class='modalcheat-content' style='border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:33%;z-index:100000000000;position:fixed;top:5px;left:33%;background-color:white;color:black !important;'>
<center>
            <input type="file" id="selectFiles" value="Import" /><br />
            <button id="importJSON">Import</button>
            <button id="cancelJSON">Cancel</button><br>

            <textarea id="result"></textarea></center>
                    </div>
            </div>
            `);
        } else {
            document.getElementById('importMenu').style.display = "block";

        }

        document.getElementById('cancelJSON').onclick = function () {
            document.getElementById('importMenu').style.display = "none"

        }

        document.getElementById('importJSON').onclick = function () {
            document.getElementById('importMenu').style.display = "none"
            var files = document.getElementById('selectFiles').files;
            //console.log(files);
            if (files.length <= 0) {
                return false;
            }

            var fr = new FileReader();

            fr.onload = function (e) {
                //console.log(e);
                var result = JSON.parse(e.target.result);
                var formatted = JSON.stringify(result, null, 2);
                document.getElementById('result').value = formatted;

                scripts = result;
                //console.log("Imported Scripts!")
                SendMessage("Scripts", "target", { scripts: scripts });
                if (!document.getElementById('loadingCheat')) {
                    $('HTML').append(`<div id='loadingCheat' style='width: calc(100% - 270px);height:90%;left:0%;top:64.5px;position:fixed;background-color:white;z-index:1000000;'><img style='position:fixed;left:25%; top:30%;' src='` + chrome.runtime.getURL("logo.gif") + `'></img></div>`);
                } else {
                    $('#loadingCheat').show();
                }

            }
            fr.readAsText(files.item(0));
        };


        window.onkeyup = function (e) {
            pressedKeys[e.keyCode] = false;
        }
        window.onkeydown = function (e) {
            pressedKeys[e.keyCode] = true;
    //27
            if (pressedKeys[17] == true && pressedKeys[71] == true || pressedKeys[17] == true && pressedKeys[27] == true) {

                e.preventDefault();
                e.stopPropagation();
                pressedKeys[17] = false;
                pressedKeys[13] = false;
            
            
                e.preventDefault();
                e.stopPropagation();
                launchAtlas();
            }
            

        }




    });
    $(document).on('click', '#newFolder', function () {

        var newFolder = prompt('Enter new folder name:')

        folders.push(newFolder);
        SendMessage("folders", "folders", folders);
        redrawList("");
        //  redrawList();

    });


    $(document).on('click', '.runcheat', function () {
        ////console.log(this);
        var num = $(this).attr('aria-label');
        window.postMessage({ setEditor: scripts[num].script, last_saved: scripts[num].name, no_code: scripts[num].no_code_container }, '*');
        last_saved = scripts[num].name; (num); window.postMessage({ removeLine: 'test' }, '*');
        window.postMessage({ setEditor: scripts[num].script, last_saved: scripts[num].name, no_code: scripts[num].no_code_container }, '*');
        last_saved = scripts[num].name; (num); window.postMessage({ removeLine: 'test' }, '*');

        if (!document.getElementById('loadingCheat')) {
            $('HTML').append(`<div id='loadingCheat' style='width: calc(100% - 270px);height:90%;left:0%;top:64.5px;position:fixed;background-color:white;z-index:1000000;'><img style='position:fixed;left:25%; top:30%;' src='` + chrome.runtime.getURL("logo.gif") + `'></img></div>`);
        } else {
            $('#loadingCheat').show();
        }
        setTimeout(function () { $('#loadingCheat').hide(); }, 3 * 1000);

        var script_code = scripts[$(this).attr('aria-label')].script;

        if (typeof scripts[$(this).attr('aria-label')]["log"] == "undefined") {
            scripts[$(this).attr('aria-label')]["log"] = {};
            scripts[$(this).attr('aria-label')]["runs"] = 0;

        }
        scripts[$(this).attr('aria-label')]["runs"] = parseInt(scripts[$(this).attr('aria-label')]["runs"]) + 1; var today = new Date();
        var today = new Date();
        var currentDay = msToTime(today.getTime());

        scripts[$(this).attr('aria-label')]["log"][currentDay] = scripts[$(this).attr('aria-label')]["runs"];
        currentRun = scripts[$(this).attr('aria-label')]["runs"];
        SendMessage("Scripts", "target", { scripts: scripts });

        block_update = true;
        setTimeout(function () { block_update = false }, 10000);
        // SendMessage("Scripts", "target", {scripts:scripts});

        if (!script_code.includes("[Tab Recording]")) {
            //console.log("Running Script!");
            eval(script_code);
        } else {
            //console.log("Running Recording!");

            SendMessage("playRecording", "recording", script_code);

        } var datascript = script_code;
        if (datascript.includes('groupPoster')) {
            //    //console.log('Found#');

            last_complete = 28;

            //startOnboard(0);


            //    window.location.href = 'https://cheatlayer.com/bot#line8';

        }



        //your code 

    });



    $(document).on('click', '.remove-line-cheatlayer', function () {

        if (!(document.getElementById('removeFolderMenu'))) {

            $('HTML').append(`
    
    <div id="removeFolderMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
    <div  class='modalcheat-content' style='border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:33%;z-index:100000000000;position:fixed;top:5px;left:33%;background-color:white;color:black !important;'>
<center>
Remove Folder ` + $(this).attr('aria-label') + ` permanently? All contained cheats will also be deleted. <br>
    <button aria-label="` + $(this).attr('aria-label') + `" id="removeFolder">Remove</button>
    <button id="cancelFolder">Cancel</button><br>
</center>
            </div>
    </div>
    `);
        } else {
            document.getElementById('removeFolderMenu').style.display = "block";

        }


        document.getElementById('removeFolder').onclick = function () {




            const index = folders.indexOf($(this).attr('aria-label'));
            if (index > -1) { // only splice array when item is found
                folders.splice(index, 1); // 2nd parameter means remove one item only
            }


            SendMessage("folders", "folders", folders);

            document.getElementById('removeFolderMenu').style.display = "none"
            redrawList("");

        }

        document.getElementById('cancelFolder').onclick = function () {
            document.getElementById('removeFolderMenu').style.display = "none"

        }
        // redrawList("");
        //$(this).next().toggle();         

        // window.postMessage({evalScript: 'test' } , '*');
    });

    $(document).on('click', '.root-line-cheatlayer', function () {


        redrawList("");
        //$(this).next().toggle();         

        // window.postMessage({evalScript: 'test' } , '*');
    });
    $(document).on('click', '.folder-line-cheatlayer', function () {


        redrawList($(this).attr("aria-label"));
        //$(this).next().toggle();         

        // window.postMessage({evalScript: 'test' } , '*');
    });
    $(document).on('click', '.code-line-cheatlayer', function () {

        $(this).next().toggle();

        // window.postMessage({evalScript: 'test' } , '*');
    });
    window.onkeyup = function (e) {
        pressedKeys[e.keyCode] = false;
    }
    window.onkeydown = function (e) {
        pressedKeys[e.keyCode] = true;

   if (pressedKeys[17] == true && pressedKeys[71] == true || pressedKeys[17] == true && pressedKeys[71] == true) {
    
    e.preventDefault();
    e.stopPropagation();
    pressedKeys[17] = false;
    pressedKeys[13] = false;


    e.preventDefault();
    e.stopPropagation();
    launchAtlas();

   }
        if (pressedKeys[17] == true && pressedKeys[8] == true) {
            document.getElementById('console').style.display = 'none'; document.getElementById('schedulerblock').style.display = 'none';
            document.getElementById('script').style.display = 'none';
            document.getElementById('newnocode').style.display = 'none';
            document.getElementById('cheatmenu').style.display = 'none';

            for (var kk = 0; kk < leader_lines.length; kk++) {
                if (leader_lines[kk] && typeof leader_lines[kk] !== 'undefined') {
                    leader_lines[kk].remove();
                    leader_lines[kk] = null;
                }
            }
            pressedKeys[8] = false;
            pressedKeys[17] = false;

        }

        if (pressedKeys[17] == true && pressedKeys[18] == true) {
            if (document.getElementById('scriptlist').style.display == 'block') {
                document.getElementById('scriptlist').style.display = 'none';
            } else {
                document.getElementById('scriptlist').style.display = 'block';
            }
            pressedKeys[17] = false;
            pressedKeys[18] = false;

        }
        // //console.log(mode_num );

        if (pressedKeys[17] == true && pressedKeys[13] == true && pressedKeys[17] == true && pressedKeys[13] == true && document.getElementById('script').style.display != 'block' && document.getElementById('newnocode').style.display != 'block') {
            var el = target;
            pressedKeys[17] = false;
            pressedKeys[13] = false;

            box.hide();
        
            $("#myModal").hide();
            e.preventDefault();
            e.stopPropagation();
            var arr = [];
            //  //console.log("WHAT");
            //(el);
            //(el.attributes);     <input type='checkbox' id='useattr' name='useattr' checked value='useattr'><br>

            var attr_str = "";

            var attr_str = "";

            if (typeof el != 'undefined' && typeof el.attributes != '') {
                for (var i = 0, atts = el.attributes, n = atts.length, arr = []; i < n; i++) {
                    arr.push(atts[i].nodeName);
                }

                // document.getElementById('highlight').style.pointEvents = 'none';
                // selected_element.getAttribute(arr[kk])
                attr_str += `
              
              <div class="cheatlayer selector-type-form">
                <h3 class="cheatlayer text-area-heading">Choose Selector Type: </h3>
                <div class="cheatlayer row">
                  <div id="selectattr" class="code-line-selector cheatlayer col-lg-3 col-md-12 col-sm-12 " style='width:80% !important;margin:10px;'>
                    <label>Attributes</label><br>
                    <div class="cheatlayer selectWrapper"><select id='attributeSelector' width="200px" class="cheatlayer select selectBox">
                    
              `;
                for (var kk = 0; kk < arr.length; kk++) {
                    if (selected_element.getAttribute(arr[kk])) {
                        attr_str += "<option style='color:black;width:100%;' value='" + arr[kk] + "," + selected_element.getAttribute(arr[kk]) + "'>" + arr[kk] + " (" + selected_element.getAttribute(arr[kk]) + ")</option>";
                    }
                }
                if (selected_element.innerText) {
                    attr_str += "<option style='color:black;width:100%;' value='innerText," + selected_element.innerText.split('"').join('').split('\'').join('') + "'>innerText (" + selected_element.innerText + ")</option>";
                }
                attr_str += ` 
             </select>
            
            </div>
            </div>
            <div id="selectxpath" class="code-line-selector cheatlayer col-lg-3 col-md-12 col-sm-12" style='width:80% !important;margin:10px;'>
              <label>xPath</label><br>
              <input id='xpath' style='color:black;width:200px;' class='cheatlayer cheatlayer' style='color:black;' placeholder='XPath'>
            </div>
            
            <div id="selectelement" class="code-line-selector cheatlayer col-lg-3 col-md-12 col-sm-12" style='width:80% !important;margin:10px;'>
            <label>All Elements</label><br>
          </div>
          
          <div id="selectgroupcss" class="code-line-selector cheatlayer col-lg-3 col-md-12 col-sm-12" style='width:80% !important;margin:10px;'>
          <label>Group CSS Selector</label><br>
          <input id='cssselectorgroup' style='color:black;width:200px;' class='cheatlayer cheatlayer' style='color:black;' placeholder='XPath'>
        </div>
            <div  id="selectcss"  class="code-line-selector cheatlayer col-lg-3 col-md-12 col-sm-12 selected-attr" style='width:80% !important;margin:10px;'>
              <label>css selector</label><br>
              <input id='cssselector' style='color:black;width:200px;' class='cheatlayer cheatlayer' style='color:black;' placeholder='CssSelector'>
            </div>
            <div  id="selectrecoder"  class="code-line-selector cheatlayer col-lg-2 col-md-12 col-sm-12 " style='width:80% !important;margin:10px;'>
            <label>Action Recorder<br><br>New!</b></label>
          </div>
          </div>
        </div>
        `;
            }

            selected_attribute = arr[0];
            (selected_attribute);




            //collect all the A on the page with a id that includes onboarding_step23 and run a script on them.
            //collect all the DIV on the page with a id that includes productTitle and save them to a local variable.




            var element = "";
            //selected_element.attributes[0];
            if (typeof selected_element.attributes != 'undefined') {
                element = selected_element.attributes[0];
            }
            opened_selector = true;
            window.postMessage({ removeLine: 'test' }, '*');
            selector_type = 'usecss';

            if (!document.getElementById('gptselector')) {


                $('HTML').append(`<div id='gptselector' class='cheatlayer cheatlayer bootstrap-wrapper' style='overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; opacity:1.0;width:600px;z-index:10000000000;position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black !important;'>
            <div class="container">
            <a href="#" id="closeGPT" style='font-size:32px;position:absolute;top:0px;right:0px;'>&times;</a>
            <div class="cheatlayer text-area-start">
            <center>
            <div class="cheatlayer text-area-start-right">
              <article class='cheatlayer' >Element Type:</article>
              <span> ` + selected_element.nodeName + `</span>
            </div>
            </center>
        </div>
     ` + attr_str + `
 
     <h3 class="cheatlayer text-area-heading">Choose The Type of Action: </h3>

     <div class="cheatlayer row">
                      <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='gsheetsgpt'>
                          <div class="cheatlayer text-area-list" >
                              <div class="cheatlayer logo-box">
                                <img src="https://cheatlayer.com/images/textarea/text1.png" class="cheatlayer img-fluid">
                              </div>
                              <div class="cheatlayer logo-text">
                                <span>Scrape to GSheets</span>
                              </div>
                          </div>
                      </div>
                      <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='gdocsgpt' >
                        <div class="cheatlayer text-area-list">
                            <div class="cheatlayer logo-box">
                              <img src="https://cheatlayer.com/images/textarea/text2.png" class="cheatlayer img-fluid">
                            </div>
                            <div class="cheatlayer logo-text">
                              <span>Scrape to GDocs</span>
                            </div>
                        </div>
                    </div>
                   
                <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='excelgpt'>
                <div class="cheatlayer text-area-list" >
                    <div class="cheatlayer logo-box">
                      <img src="` + chrome.runtime.getURL("excel.png") + `" class="cheatlayer img-fluid">
                    </div>
                    <div class="cheatlayer logo-text">
                      <span>To Excel File</span>
                    </div>
                </div>
               </div>

                    <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='consolegpt' >
                        <div class="cheatlayer text-area-list">
                            <div class="cheatlayer logo-box">
                              <img src="https://cheatlayer.com/images/textarea/text4.png" class="cheatlayer img-fluid">
                            </div>
                            <div class="cheatlayer logo-text">
                              <span>Print To Console</span>
                            </div>
                        </div>
                    </div>
                  </div>
                  <div class="cheatlayer row mr-30">
                  <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='ocrgpt'>
                      <div class="cheatlayer text-area-list">
                          <div class="cheatlayer logo-box">
                            <img src="https://cheatlayer.com/images/textarea/text5.png" class="cheatlayer img-fluid">
                          </div>
                          <div class="cheatlayer logo-text">
                            <span>OCR Image To Text</span>
                          </div>
                      </div>
                  </div>
                  <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='objectgpt'>
                      <div class="cheatlayer text-area-list">
                          <div class="cheatlayer logo-box">
                            <img src="https://cheatlayer.com/images/textarea/text5.png" class="cheatlayer img-fluid">
                          </div>
                          <div class="cheatlayer logo-text">
                            <span>object Detection</span>
                          </div>
                      </div>
                  </div>
                  <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='sentimentgpt'>
                    <div class="cheatlayer text-area-list">
                        <div class="cheatlayer logo-box">
                          <img src="https://cheatlayer.com/images/textarea/text6.png" class="cheatlayer img-fluid">
                        </div>
                        <div class="cheatlayer logo-text">
                          <span>Sentiment Analysis</span>
                        </div>
                    </div>
                </div>
                <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='codegpt' >
                    <div class="cheatlayer text-area-list">
                        <div class="cheatlayer logo-box">
                          <img src="https://cheatlayer.com/images/textarea/text7.png" class="cheatlayer img-fluid">
                        </div>
                        <div class="cheatlayer logo-text">
                          <span>Run Code on tab</span>
                        </div>
                    </div>
                </div>
                
              </div>
              <div class="cheatlayer row mr-30">
              <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='pushgpt' >
              <div class="cheatlayer text-area-list">
                  <div class="cheatlayer logo-box">
                    <img src="https://cheatlayer.com/images/textarea/text8.png" class="cheatlayer img-fluid">
                  </div>
                  <div class="cheatlayer logo-text">
                    <span>Click Link/ Button</span>
                  </div>
              </div>
          </div>
              <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='webhookgpt' >
              <div class="cheatlayer text-area-list">
                  <div class="cheatlayer logo-box">
                    <img width='40px' height='40px' src="https://cheatlayer.com/webhook.png" class="cheatlayer img-fluid">
                  </div>
                  <div class="cheatlayer logo-text">
                    <span>Send To Webhook</span>
                  </div>
              </div>
          </div>
          <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='getdatagpt' >
              <div class="cheatlayer text-area-list">
                  <div class="cheatlayer logo-box">
                    <img src="https://cheatlayer.com/images/textarea/text1.png" class="cheatlayer img-fluid">
                  </div>
                  <div class="cheatlayer logo-text">
                    <span>Get Data GSheets</span>
                  </div>
              </div>
          </div>

              <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='localgpt' >
                <div class="cheatlayer text-area-list">
                    <div class="cheatlayer logo-box">
                      <img src="https://cheatlayer.com/images/textarea/text10.png" class="cheatlayer img-fluid">
                    </div>
                    <div class="cheatlayer logo-text">
                      <span>Save Data</span>
                    </div>
                </div>
            </div>
        </div>

            <div class="cheatlayer row mr-30">

        <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='setgpt' >
            <div class="cheatlayer text-area-list">
                <div class="cheatlayer logo-box">
                  <img src="https://cheatlayer.com/images/textarea/text11.png" class="cheatlayer img-fluid">
                </div>
                <div class="cheatlayer logo-text">
                  <span>Set Dropdown</span>
                </div>
            </div>
        </div>
        <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;"  id='downloadgpt'>
            <div class="cheatlayer text-area-list">
                <div class="cheatlayer logo-box">
                  <img src="https://cheatlayer.com/images/textarea/text12.png" class="cheatlayer img-fluid">
                </div>
                <div class="cheatlayer logo-text">
                  <span>Download File</span>
                </div>
            </div>
        </div>


            <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='innertextgpt' >
                <div class="cheatlayer text-area-list">
                    <div class="cheatlayer logo-box">
                      <img src="https://cheatlayer.com/images/textarea/text13.png" class="cheatlayer img-fluid">
                    </div>
                    <div class="cheatlayer logo-text">
                      <span>Set Inner Text</span>
                    </div>
                </div>
            </div>
            <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='keypressgpt'>
              <div class="cheatlayer text-area-list">
                  <div class="cheatlayer logo-box">
                    <img src="https://cheatlayer.com/images/textarea/text14.png" class="cheatlayer img-fluid">
                  </div>
                  <div class="cheatlayer logo-text">
                    <span>Key Press</span>
                  </div>
              </div>
          </div>
          
        </div>

<div class="cheatlayer row mr-30">
<div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='hovergpt'>
     <div class="cheatlayer text-area-list">
         <div class="cheatlayer logo-box">
           <img src="https://cheatlayer.com/images/textarea/text15.png" class="cheatlayer img-fluid">
         </div>
         <div class="cheatlayer logo-text">
           <span>Hover</span>
         </div>
     </div>
 </div>
 <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='scrollgpt'>
     <div class="cheatlayer text-area-list">
         <div class="cheatlayer logo-box">
           <img src="https://cheatlayer.com/images/textarea/text15.png" class="cheatlayer img-fluid">
         </div>
         <div class="cheatlayer logo-text">
           <span>Scroll</span>
         </div>
     </div>
 </div>
 
 <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='gmailgpt'>
 <div class="cheatlayer text-area-list" >
     <div class="cheatlayer logo-box">
       <img src="` + chrome.runtime.getURL("gmail.png") + `" class="cheatlayer img-fluid">
     </div>
     <div class="cheatlayer logo-text">
       <span>Gmail</span>
     </div>
 </div>
</div>
            
 <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='screenshotgpt' >
     <div class="cheatlayer text-area-list">
         <div class="cheatlayer logo-box">
           <img src="https://cheatlayer.com/images/textarea/text16.png" class="cheatlayer img-fluid">
         </div>
         <div class="cheatlayer logo-text">
           <span>Screenshot</span>
         </div>
     </div>
 </div>
 </div>
 <div class="cheatlayer row mr-30">

              <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='rikugpt'>
                 <div class="cheatlayer text-area-list" >
                     <div class="cheatlayer logo-box">
                       <img src="https://cheatlayer.com/Riku-logo.png" class="cheatlayer img-fluid">
                     </div>
                     <div class="cheatlayer logo-text">
                       <span>Riku.ai Generator</span>
                     </div>
                 </div>
             </div>
             
             <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='promptgpt'>
             <div class="cheatlayer text-area-list" >
                 <div class="cheatlayer logo-box">
                   <img src="` + chrome.runtime.getURL("openai.png") + `" class="cheatlayer img-fluid">
                 </div>
                 <div class="cheatlayer logo-text">
                   <span>GPT-3 Prompt</span>
                 </div>
             </div>
         </div>

            <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='pdfgpt'>
             <div class="cheatlayer text-area-list" >
                 <div class="cheatlayer logo-box">
                   <img src="` + chrome.runtime.getURL("pdf.png") + `" class="cheatlayer img-fluid">
                 </div>
                 <div class="cheatlayer logo-text">
                   <span>PDF Parser</span>
                 </div>
             </div>
            </div>
            <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='filtergpt'>
            <div class="cheatlayer text-area-list" >
                <div class="cheatlayer logo-box">
                  <img src="` + chrome.runtime.getURL("filter.png") + `" class="cheatlayer img-fluid">
                </div>
                <div class="cheatlayer logo-text">
                  <span>Filter</span>
                </div>
            </div>
           </div>
       
                </div>


                <div class="cheatlayer row mr-30">
              
                <div class="cheatlayer offset-md-1  col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='rssgpt'>
                <div class="cheatlayer text-area-list" >
                    <div class="cheatlayer logo-box">
                      <img src="` + chrome.runtime.getURL("rss.png") + `" class="cheatlayer img-fluid">
                    </div>
                    <div class="cheatlayer logo-text">
                      <span>RSS Input</span>
                    </div>
                </div>
               </div>
               

                </div>


    <div class="cheatlayer text-area-btn-group">
    <a  id='cancelGPTSelect' class="cheatlayer text-area-btn" href="#">Cancel</a>
</div>
</center><br><br><br><br>
</div>
     </div>`);

                var newXpath = createXPathFromElement(selected_element);
                // //console.log(newXpath);
                document.getElementById('xpath').value = newXpath;

                var newcss = cssPath(selected_element);
                // //console.log(newXpath);
                document.getElementById('cssselector').value = newcss;
                document.getElementById('cssselectorgroup').value = newcss;

                $('HTML').append(`<script>
var selected_attribute = '` + arr[0] + `';var selected_attribute_val = \`` + selected_element.getAttribute(arr[0]) + `\`;
document.getElementById('attributeSelector').addEventListener('change', function() {
selected_attribute = this.value.split(',')[0];
selected_attribute_val = this.value.split(',')[1];
});
</script>`);

                $('HTML').append(`<script>var type_of_selector = 'attr';
document.getElementById('selectrecoder').onclick = function(){
        
window.postMessage({recordActions: "type_of_selector"}, '*');
}
document.getElementById('selectcss').onclick = function(){
document.getElementById('selectattr').classList.remove("selected-attr");

document.getElementById('selectxpath').classList.remove("selected-attr");
document.getElementById('selectcss').classList.add("selected-attr");
var type_of_selector = 'usecss';
window.postMessage({selectorType: type_of_selector}, '*');
}
document.getElementById('selectxpath').onclick = function(){
document.getElementById('selectxpath').classList.add("selected-attr");

document.getElementById('selectattr').classList.remove("selected-attr");
document.getElementById('selectcss').classList.remove("selected-attr");
var  type_of_selector = 'usexpath';
window.postMessage({selectorType: type_of_selector}, '*');

}

document.getElementById('selectelement').onclick = function(){
    document.getElementById('selectelement').classList.add("selected-attr");
    
    document.getElementById('selectattr').classList.remove("selected-attr");
    document.getElementById('selectcss').classList.remove("selected-attr");
  var  type_of_selector = 'useelement';
    window.postMessage({selectorType: type_of_selector}, '*');

}

document.getElementById('selectgroupcss').onclick = function(){
    document.getElementById('selectgroupcss').classList.add("selected-attr");
    
    document.getElementById('selectattr').classList.remove("selected-attr");
    document.getElementById('selectcss').classList.remove("selected-attr");
  var  type_of_selector = 'usegroupcss';
    window.postMessage({selectorType: type_of_selector}, '*');

}
document.getElementById('selectattr').onclick = function(){
document.getElementById('selectattr').classList.add("selected-attr");
document.getElementById('selectxpath').classList.remove("selected-attr");
document.getElementById('selectcss').classList.remove("selected-attr");

var type_of_selector = 'useattr';
window.postMessage({selectorType: type_of_selector}, '*');

}
</script>`);

                $('HTML').append(`<script>var opened_editor = false; var layer = 0;  document.getElementById('cancelGPTSelect').onclick = function(){ window.postMessage({opened_selector: "false"} , '*'); if(document.getElementById('gptselector')){document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';} }
    </script>`);

                $('HTML').append(`<script>var opened_editor = false; var layer = 0;  document.getElementById('closeGPT').onclick = function(){ window.postMessage({opened_selector: "false"} , '*'); if(document.getElementById('gptselector')){document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';} }
    </script>`);

                $('HTML').append(`<script>var type_of_selector = 'attr';
    
    
    document.getElementById('selectrecoder').onclick = function(){
        
        window.postMessage({recordActions: "type_of_selector"}, '*');
    }
    document.getElementById('selectcss').onclick = function(){
        document.getElementById('selectattr').classList.remove("selected-attr");
        
        document.getElementById('selectxpath').classList.remove("selected-attr");
        document.getElementById('selectcss').classList.add("selected-attr");
        var type_of_selector = 'usecss';
        window.postMessage({selectorType: type_of_selector}, '*');
    }
    document.getElementById('selectxpath').onclick = function(){
        document.getElementById('selectxpath').classList.add("selected-attr");
        
        document.getElementById('selectattr').classList.remove("selected-attr");
        document.getElementById('selectcss').classList.remove("selected-attr");
        var type_of_selector = 'usexpath';
        window.postMessage({selectorType: type_of_selector}, '*');

    }
    
    document.getElementById('selectelement').onclick = function(){
        document.getElementById('selectelement').classList.add("selected-attr");
        
        document.getElementById('selectattr').classList.remove("selected-attr");
        document.getElementById('selectcss').classList.remove("selected-attr");
      var  type_of_selector = 'useelement';
        window.postMessage({selectorType: type_of_selector}, '*');

    }

    document.getElementById('selectgroupcss').onclick = function(){
        document.getElementById('selectgroupcss').classList.add("selected-attr");
        
        document.getElementById('selectattr').classList.remove("selected-attr");
        document.getElementById('selectcss').classList.remove("selected-attr");
      var  type_of_selector = 'usegroupcss';
        window.postMessage({selectorType: type_of_selector}, '*');

    }
    document.getElementById('selectattr').onclick = function(){
        document.getElementById('selectattr').classList.add("selected-attr");
        document.getElementById('selectxpath').classList.remove("selected-attr");
        document.getElementById('selectcss').classList.remove("selected-attr");

        var type_of_selector = 'useattr';
        window.postMessage({selectorType: type_of_selector}, '*');

    }
        </script>`);

                $('HTML').append(`<script>

    document.getElementById('scrollgpt').onclick = function(){
        opened_editor = !opened_editor; 
        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        
        
        
        
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        

window.postMessage({style:'scroll', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value, setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:100000o000 !important;overflow-y: scroll; padding-right: 17px;  box-sizing: content-box; position:fixed;top:0px;left:0%;width:80%:height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);
                /*    $('HTML').append(`<script>document.getElementById('forwardgpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        
                        
                        
                        
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                
                window.postMessage({style:'forward', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px;  box-sizing: content-box; position:fixed;top:0px;left:0%;width:80%:height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);
                    $('HTML').append(`<script>document.getElementById('backgpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        
                        
                        
                        
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                
                window.postMessage({style:'back', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; box-sizing: content-box; position:fixed;top:0px;left:0%;width:80%:height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);
                */

                $('HTML').append(`<script>document.getElementById('gmailgpt').onclick = function(){
    opened_editor = !opened_editor; 

    //document.getElementById('script').style.display = 'block';
    document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
    var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
    
window.postMessage({style:'gmail', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
   
 //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

   document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

if(document.all)
for(var i in document.links)
document.links[i].onfocus = document.links[i].blur;
   }</script>`);

                $('HTML').append(`<script>document.getElementById('excelgpt').onclick = function(){
    opened_editor = !opened_editor; 

    //document.getElementById('script').style.display = 'block';
    document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
    var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
    
window.postMessage({style:'excel', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
   
 //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

   document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

if(document.all)
for(var i in document.links)
document.links[i].onfocus = document.links[i].blur;
   }</script>`);


                $('HTML').append(`<script>document.getElementById('rssgpt').onclick = function(){
    opened_editor = !opened_editor; 

    //document.getElementById('script').style.display = 'block';
    document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
    var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
    
window.postMessage({style:'rss', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
   
 //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

   document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

if(document.all)
for(var i in document.links)
document.links[i].onfocus = document.links[i].blur;
   }</script>`);


                $('HTML').append(`<script>document.getElementById('filtergpt').onclick = function(){
    opened_editor = !opened_editor; 

    //document.getElementById('script').style.display = 'block';
    document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
    var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
    
window.postMessage({style:'filter', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
   
 //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

   document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

if(document.all)
for(var i in document.links)
document.links[i].onfocus = document.links[i].blur;
   }</script>`);


                $('HTML').append(`<script>document.getElementById('pdfgpt').onclick = function(){
        opened_editor = !opened_editor; 

        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        
window.postMessage({style:'pdf', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);

                $('HTML').append(`<script>document.getElementById('rikugpt').onclick = function(){
        opened_editor = !opened_editor; 

        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        
window.postMessage({style:'riku', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);


       $('HTML').append(`<script>document.getElementById('promptgpt').onclick = function(){
        opened_editor = !opened_editor; 

        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        
window.postMessage({style:'prompt', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);


                $('HTML').append(`<script>document.getElementById('screenshotgpt').onclick = function(){
        opened_editor = !opened_editor; 
        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        
        
        
        
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        

window.postMessage({style:'screenshot', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);
                $('HTML').append(`<script>document.getElementById('hovergpt').onclick = function(){
        opened_editor = !opened_editor; 
        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        
        
        
        
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        

window.postMessage({style:'hover', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);

                $('HTML').append(`<script>document.getElementById('keypressgpt').onclick = function(){
        opened_editor = !opened_editor; 
        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        
        
        
        
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        

window.postMessage({style:'keypress', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);

                $('HTML').append(`<script>document.getElementById('gcalgpt').onclick = function(){
        opened_editor = !opened_editor; 
        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        

window.postMessage({style:'gcal', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);

                $('HTML').append(`<script>document.getElementById('gsheetsgpt').onclick = function(){
         opened_editor = !opened_editor; 
         //document.getElementById('script').style.display = 'block';
         document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
         var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
         
window.postMessage({style:'gsheets', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
        
      //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

        document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

    if(document.all)
    for(var i in document.links)
    document.links[i].onfocus = document.links[i].blur;
        }</script>`);


                $('HTML').append(`<script>document.getElementById('webhookgpt').onclick = function(){
            opened_editor = !opened_editor; 
            //document.getElementById('script').style.display = 'block';
            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
            
   
   window.postMessage({style:'webhook', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
           
         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
   
           document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
   
       if(document.all)
       for(var i in document.links)
       document.links[i].onfocus = document.links[i].blur;
           }</script>`);



                $('HTML').append(`<script>document.getElementById('getdatagpt').onclick = function(){
            opened_editor = !opened_editor; 
            //document.getElementById('script').style.display = 'block';
            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
            
   
   window.postMessage({style:'getdata', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
           
         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
   
           document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
   
       if(document.all)
       for(var i in document.links)
       document.links[i].onfocus = document.links[i].blur;
           }</script>`);

                $('HTML').append(`<script>document.getElementById('sentimentgpt').onclick = function(){
            opened_editor = !opened_editor; 
            //document.getElementById('script').style.display = 'block';
            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
            
   
   window.postMessage({style:'sentiment', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
           
         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
   
           document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
   
       if(document.all)
       for(var i in document.links)
       document.links[i].onfocus = document.links[i].blur;
           }</script>`);

                $('HTML').append(`<script>document.getElementById('ocrgpt').onclick = function(){
            opened_editor = !opened_editor; 
            //document.getElementById('script').style.display = 'block';
            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
            
   
   window.postMessage({style:'OCR', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
           
         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
   
           document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
   
       if(document.all)
       for(var i in document.links)
       document.links[i].onfocus = document.links[i].blur;
           }</script>`);
                $('HTML').append(`<script>document.getElementById('objectgpt').onclick = function(){
            opened_editor = !opened_editor; 
            //document.getElementById('script').style.display = 'block';
            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
            
   
   window.postMessage({style:'object', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
           
         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
   
           document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
   
       if(document.all)
       for(var i in document.links)
       document.links[i].onfocus = document.links[i].blur;
           }</script>`);
                $('HTML').append(`<script>document.getElementById('gdocsgpt').onclick = function(){
            opened_editor = !opened_editor; 
            //document.getElementById('script').style.display = 'block';
            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
            
            
            
            
            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
            
   
   window.postMessage({style:'gdocs', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
           
         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
   
           document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
   
       if(document.all)
       for(var i in document.links)
       document.links[i].onfocus = document.links[i].blur;
           }</script>`);

                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
     document.getElementById('consolegpt').onclick = function(){
          opened_editor = !opened_editor; 
          //document.getElementById('script').style.display = 'block';
          document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
          
          
          
          
          var selected_attribute = '` + arr[0] + `';
          var selected_attribute_val = \`` + selected_element.getAttribute(arr[0]) + `\`;
          var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and loop through them and print them to the web console.';
          

          window.postMessage({style:'print', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');

      
      //    window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
          document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

    if(document.all)
    for(var i in document.links)
    document.links[i].onfocus = document.links[i].blur;
      }</script>`);

                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
      document.getElementById('codegpt').onclick = function(){
          opened_editor = !opened_editor; 
          //document.getElementById('script').style.display = 'block';
          document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
          
          
          
          
          var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and run a script on them.';
          

          window.postMessage({style:'script', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');

        
          // window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
          document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

    if(document.all)
    for(var i in document.links)
    document.links[i].onfocus = document.links[i].blur;

      }</script>`);


                $('HTML').append(`<script>var opened_editor = false; var layer = 0;

      document.getElementById('pushgpt').onclick = function(){ window.postMessage({opened_selector: "false"} , '*'); 
      opened_editor = !opened_editor;
      // document.getElementById('script').style.display = 'block';
      document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none'; 
      
      
      
       
       var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and pushes them.';
       

       window.postMessage({style:'click', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');

       //   window.postMessage({generate: input} , '*');
         document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
  }</script>`);


                $('HTML').append(`<script>var opened_editor = false; var layer = 0;

  document.getElementById('localgpt').onclick = function(){ window.postMessage({opened_selector: "false"} , '*');
   opened_editor = !opened_editor; 
   //document.getElementById('script').style.display = 'block';
   document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
    
    
    
     
     var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and save them to a local variable.'; 
     //window.postMessage({generate: input} , '*'); 
     

     window.postMessage({style:'variable', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');

     document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
}</script>`);

                $('HTML').append(`<script>var opened_editor = false; var layer = 0;

document.getElementById('setgpt').onclick = function(){ 
    window.postMessage({opened_selector: "false"} , '*');
     opened_editor = !opened_editor; 
   //  document.getElementById('script').style.display = 'block';
     document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none'; 
     
     
     
     
       var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and set the value to test.'; 
      // window.postMessage({generate: input} , '*');
      

      window.postMessage({style:'input', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');

        document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

if(document.all)
for(var i in document.links)
document.links[i].onfocus = document.links[i].blur;
}</script>`);

                $('HTML').append(`<script>var opened_editor = false; var layer = 0;

document.getElementById('downloadgpt').onclick = function(){ 
    window.postMessage({opened_selector: "false"} , '*'); 
    opened_editor = !opened_editor; 
  //  document.getElementById('script').style.display = 'block';
    document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none'; 
    
    
    
     
     var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and download them.';
   // window.postMessage({generate: input} , '*');
   

   window.postMessage({style:'download', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');

       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';


if(document.all)
for(var i in document.links)
document.links[i].onfocus = document.links[i].blur;
}</script>`);

                $('HTML').append(`<script>var opened_editor = false; var layer = 0;

document.getElementById('innertextgpt').onclick = function(){ 
    window.postMessage({opened_selector: "false"} , '*'); 
    opened_editor = !opened_editor; 
 //   document.getElementById('script').style.display = 'block';
    document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none'; 
    
    
    
    
      var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and set the inner text to test.'; 
   // window.postMessage({generate: input} , '*'); 
   

   window.postMessage({style:'innerText', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');

      document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

if(document.all)
for(var i in document.links)
document.links[i].onfocus = document.links[i].blur;

}</script>`);



                added_selector = true;
            } else {
                document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; opacity:1.0;width:600px;z-index:100000000000;position:fixed;top:0px;left:0%;width: calc(100% - 270px); height:100%;background-color:white;color:black !important;';

                document.getElementById('gptselector').innerHTML = `                <div class="container">
            <a href="#" id="closeGPT" style='position:absolute;top:0px;right:0px;'>&times;</a>

            <div class="cheatlayer text-area-start">
            <center>
            <div class="cheatlayer text-area-start-right">
              <article class='cheatlayer' >Element Type:</article>
              <span> ` + selected_element.nodeName + `</span>
            </div>
            </center>
        </div>
     ` + attr_str + `
 
     <h3 class="cheatlayer text-area-heading">Choose The Type of Action: </h3>

     <div class="cheatlayer row">
                      <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='gsheetsgpt'>
                          <div class="cheatlayer text-area-list" >
                              <div class="cheatlayer logo-box">
                                <img src="https://cheatlayer.com/images/textarea/text1.png" class="cheatlayer img-fluid">
                              </div>
                              <div class="cheatlayer logo-text">
                                <span>Scrape to GSheets</span>
                              </div>
                          </div>
                      </div>
                      <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='gdocsgpt' >
                        <div class="cheatlayer text-area-list">
                            <div class="cheatlayer logo-box">
                              <img src="https://cheatlayer.com/images/textarea/text2.png" class="cheatlayer img-fluid">
                            </div>
                            <div class="cheatlayer logo-text">
                              <span>Scrape to GDocs</span>
                            </div>
                        </div>
                    </div>
                    <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='excelgpt'>
                    <div class="cheatlayer text-area-list" >
                        <div class="cheatlayer logo-box">
                          <img src="` + chrome.runtime.getURL("excel.png") + `" class="cheatlayer img-fluid">
                        </div>
                        <div class="cheatlayer logo-text">
                          <span>To Excel File</span>
                        </div>
                    </div>
                   </div>
                    <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='consolegpt' >
                        <div class="cheatlayer text-area-list">
                            <div class="cheatlayer logo-box">
                              <img src="https://cheatlayer.com/images/textarea/text4.png" class="cheatlayer img-fluid">
                            </div>
                            <div class="cheatlayer logo-text">
                              <span>Print To Console</span>
                            </div>
                        </div>
                    </div>
                  </div>
                  <div class="cheatlayer row mr-30">
                  <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='ocrgpt'>
                      <div class="cheatlayer text-area-list">
                          <div class="cheatlayer logo-box">
                            <img src="https://cheatlayer.com/images/textarea/text5.png" class="cheatlayer img-fluid">
                          </div>
                          <div class="cheatlayer logo-text">
                            <span>OCR Image To Text</span>
                          </div>
                      </div>
                  </div>
                  <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='objectgpt'>
                      <div class="cheatlayer text-area-list">
                          <div class="cheatlayer logo-box">
                            <img src="https://cheatlayer.com/images/textarea/text5.png" class="cheatlayer img-fluid">
                          </div>
                          <div class="cheatlayer logo-text">
                            <span>object Detection</span>
                          </div>
                      </div>
                  </div>
                  <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='sentimentgpt'>
                    <div class="cheatlayer text-area-list">
                        <div class="cheatlayer logo-box">
                          <img src="https://cheatlayer.com/images/textarea/text6.png" class="cheatlayer img-fluid">
                        </div>
                        <div class="cheatlayer logo-text">
                          <span>Sentiment Analysis</span>
                        </div>
                    </div>
                </div>
                <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='codegpt' >
                    <div class="cheatlayer text-area-list">
                        <div class="cheatlayer logo-box">
                          <img src="https://cheatlayer.com/images/textarea/text7.png" class="cheatlayer img-fluid">
                        </div>
                        <div class="cheatlayer logo-text">
                          <span>Run Code on tab</span>
                        </div>
                    </div>
                </div>
                
              </div>
              <div class="cheatlayer row mr-30">
              <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='pushgpt' >
              <div class="cheatlayer text-area-list">
                  <div class="cheatlayer logo-box">
                    <img src="https://cheatlayer.com/images/textarea/text8.png" class="cheatlayer img-fluid">
                  </div>
                  <div class="cheatlayer logo-text">
                    <span>Click Link/ Button</span>
                  </div>
              </div>
          </div>
              <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='webhookgpt' >
              <div class="cheatlayer text-area-list">
                  <div class="cheatlayer logo-box">
                    <img width='40px' height='40px' src="https://cheatlayer.com/webhook.png" class="cheatlayer img-fluid">
                  </div>
                  <div class="cheatlayer logo-text">
                    <span>Send To Webhook</span>
                  </div>
              </div>
          </div>
          <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='getdatagpt' >
              <div class="cheatlayer text-area-list">
                  <div class="cheatlayer logo-box">
                    <img src="https://cheatlayer.com/images/textarea/text1.png" class="cheatlayer img-fluid">
                  </div>
                  <div class="cheatlayer logo-text">
                    <span>Get Data GSheets</span>
                  </div>
              </div>
          </div>

              <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='localgpt' >
                <div class="cheatlayer text-area-list">
                    <div class="cheatlayer logo-box">
                      <img src="https://cheatlayer.com/images/textarea/text10.png" class="cheatlayer img-fluid">
                    </div>
                    <div class="cheatlayer logo-text">
                      <span>Save Data</span>
                    </div>
                </div>
            </div>
        </div>

            <div class="cheatlayer row mr-30">

        <div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;"  id='setgpt' >
            <div class="cheatlayer text-area-list">
                <div class="cheatlayer logo-box">
                  <img src="https://cheatlayer.com/images/textarea/text11.png" class="cheatlayer img-fluid">
                </div>
                <div class="cheatlayer logo-text">
                  <span>Set Dropdown</span>
                </div>
            </div>
        </div>
        <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;"  id='downloadgpt'>
            <div class="cheatlayer text-area-list">
                <div class="cheatlayer logo-box">
                  <img src="https://cheatlayer.com/images/textarea/text12.png" class="cheatlayer img-fluid">
                </div>
                <div class="cheatlayer logo-text">
                  <span>Download File</span>
                </div>
            </div>
        </div>


            <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='innertextgpt' >
                <div class="cheatlayer text-area-list">
                    <div class="cheatlayer logo-box">
                      <img src="https://cheatlayer.com/images/textarea/text13.png" class="cheatlayer img-fluid">
                    </div>
                    <div class="cheatlayer logo-text">
                      <span>Set Inner Text</span>
                    </div>
                </div>
            </div>
            <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='keypressgpt'>
              <div class="cheatlayer text-area-list">
                  <div class="cheatlayer logo-box">
                    <img src="https://cheatlayer.com/images/textarea/text14.png" class="cheatlayer img-fluid">
                  </div>
                  <div class="cheatlayer logo-text">
                    <span>Key Press</span>
                  </div>
              </div>
          </div>
          
        </div>

<div class="cheatlayer row mr-30">
<div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='hovergpt'>
     <div class="cheatlayer text-area-list">
         <div class="cheatlayer logo-box">
           <img src="https://cheatlayer.com/images/textarea/text15.png" class="cheatlayer img-fluid">
         </div>
         <div class="cheatlayer logo-text">
           <span>Hover</span>
         </div>
     </div>
 </div>
 <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='scrollgpt'>
     <div class="cheatlayer text-area-list">
         <div class="cheatlayer logo-box">
           <img src="https://cheatlayer.com/images/textarea/text15.png" class="cheatlayer img-fluid">
         </div>
         <div class="cheatlayer logo-text">
           <span>Scroll</span>
         </div>
     </div>
 </div>
 
 <div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='gmailgpt'>
 <div class="cheatlayer text-area-list" >
     <div class="cheatlayer logo-box">
       <img src="` + chrome.runtime.getURL("gmail.png") + `" class="cheatlayer img-fluid">
     </div>
     <div class="cheatlayer logo-text">
       <span>Gmail</span>
     </div>
 </div>
</div>
            
 <div class="cheatlayer col-lg-3 col-md-12 col-sm-12" style="max-width:20% !important;" id='screenshotgpt' >
     <div class="cheatlayer text-area-list">
         <div class="cheatlayer logo-box">
           <img src="https://cheatlayer.com/images/textarea/text16.png" class="cheatlayer img-fluid">
         </div>
         <div class="cheatlayer logo-text">
           <span>Screenshot</span>
         </div>
     </div>
 </div>
</div>

<div class="cheatlayer row mr-30">

<div class="cheatlayer offset-md-1 col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='rikugpt'>
   <div class="cheatlayer text-area-list" >
       <div class="cheatlayer logo-box">
         <img src="https://cheatlayer.com/Riku-logo.png" class="cheatlayer img-fluid">
       </div>
       <div class="cheatlayer logo-text">
         <span>Riku.ai Generator</span>
       </div>
   </div>
</div>

<div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='promptgpt'>
   <div class="cheatlayer text-area-list" >
       <div class="cheatlayer logo-box">
         <img src="` + chrome.runtime.getURL("openai.png") + `" class="cheatlayer img-fluid">
       </div>
       <div class="cheatlayer logo-text">
         <span>GPT-3 Prompt</span>
       </div>
   </div>
</div>

<div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='pdfgpt'>
<div class="cheatlayer text-area-list" >
   <div class="cheatlayer logo-box">
     <img src="` + chrome.runtime.getURL("pdf.png") + `" class="cheatlayer img-fluid">
   </div>
   <div class="cheatlayer logo-text">
     <span>PDF Parser</span>
   </div>
</div>
</div>
<div class="cheatlayer col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='filtergpt'>
<div class="cheatlayer text-area-list" >
  <div class="cheatlayer logo-box">
    <img src="` + chrome.runtime.getURL("filter.png") + `" class="cheatlayer img-fluid">
  </div>
  <div class="cheatlayer logo-text">
    <span>Filter</span>
  </div>
</div>
</div>

  </div>


  <div class="cheatlayer row mr-30">
  <div class="cheatlayer offset-md-1  col-lg-3 col-md-12 col-sm-12"  style="max-width:20% !important;" id='rssgpt'>
  <div class="cheatlayer text-area-list" >
      <div class="cheatlayer logo-box">
        <img src="` + chrome.runtime.getURL("rss.png") + `" class="cheatlayer img-fluid">
      </div>
      <div class="cheatlayer logo-text">
        <span>RSS Input</span>
      </div>
  </div>
 </div>

           

  </div>



    <div class="cheatlayer text-area-btn-group">
    <a  id='cancelGPTSelect' class="cheatlayer text-area-btn" href="#">Cancel</a>
</div></div>

</center><br><br><br><br>`;
                $('HTML').append(`<script>var opened_editor = false; var layer = 0;  document.getElementById('cancelGPTSelect').onclick = function(){ window.postMessage({opened_selector: "false"} , '*'); if(document.getElementById('gptselector')){document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';} }
   </script>`);
                $('HTML').append(`<script>var opened_editor = false; var layer = 0;  document.getElementById('closeGPT').onclick = function(){ window.postMessage({opened_selector: "false"} , '*'); if(document.getElementById('gptselector')){document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';} }
   </script>`);



                $('HTML').append(`<script>
var selected_attribute = '` + arr[0] + `';var selected_attribute_val = \`` + selected_element.getAttribute(arr[0]) + `\`;
document.getElementById('attributeSelector').addEventListener('change', function() {
selected_attribute = this.value.split(',')[0];
selected_attribute_val = this.value.split(',')[1];
});
</script>`);

                $('HTML').append(`<script>var type_of_selector = 'attr';
document.getElementById('selectrecoder').onclick = function(){
        
window.postMessage({recordActions: "type_of_selector"}, '*');
}
document.getElementById('selectcss').onclick = function(){
document.getElementById('selectattr').classList.remove("selected-attr");

document.getElementById('selectxpath').classList.remove("selected-attr");
document.getElementById('selectcss').classList.add("selected-attr");
var type_of_selector = 'usecss';
window.postMessage({selectorType: type_of_selector}, '*');
}
document.getElementById('selectxpath').onclick = function(){
document.getElementById('selectxpath').classList.add("selected-attr");

document.getElementById('selectattr').classList.remove("selected-attr");
document.getElementById('selectcss').classList.remove("selected-attr");
var  type_of_selector = 'usexpath';
window.postMessage({selectorType: type_of_selector}, '*');

}

document.getElementById('selectelement').onclick = function(){
    document.getElementById('selectelement').classList.add("selected-attr");
    
    document.getElementById('selectattr').classList.remove("selected-attr");
    document.getElementById('selectcss').classList.remove("selected-attr");
  var  type_of_selector = 'useelement';
    window.postMessage({selectorType: type_of_selector}, '*');

}

document.getElementById('selectgroupcss').onclick = function(){
    document.getElementById('selectgroupcss').classList.add("selected-attr");
    
    document.getElementById('selectattr').classList.remove("selected-attr");
    document.getElementById('selectcss').classList.remove("selected-attr");
  var  type_of_selector = 'usegroupcss';
    window.postMessage({selectorType: type_of_selector}, '*');

}
document.getElementById('selectattr').onclick = function(){
document.getElementById('selectattr').classList.add("selected-attr");
document.getElementById('selectxpath').classList.remove("selected-attr");
document.getElementById('selectcss').classList.remove("selected-attr");

var type_of_selector = 'useattr';
window.postMessage({selectorType: type_of_selector}, '*');

}
</script>`);


                $('HTML').append(`<script>document.getElementById('pdfgpt').onclick = function(){
            opened_editor = !opened_editor; 

            //document.getElementById('script').style.display = 'block';
            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
            
   window.postMessage({style:'pdf', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
           
         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
   
           document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
   
       if(document.all)
       for(var i in document.links)
       document.links[i].onfocus = document.links[i].blur;
           }</script>`);

                $('HTML').append(`<script>document.getElementById('rikugpt').onclick = function(){
            opened_editor = !opened_editor; 

            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
            
   window.postMessage({style:'riku', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
           
         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
   
           document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
   
       if(document.all)
       for(var i in document.links)
       document.links[i].onfocus = document.links[i].blur;
           }</script>`);



           
           $('HTML').append(`<script>document.getElementById('promptgpt').onclick = function(){
            opened_editor = !opened_editor; 

            document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
            var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
            
   window.postMessage({style:'prompt', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
           
         //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
   
           document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
   
       if(document.all)
       for(var i in document.links)
       document.links[i].onfocus = document.links[i].blur;
           }</script>`);

                $('HTML').append(`<script>document.getElementById('webhookgpt').onclick = function(){
        opened_editor = !opened_editor; 
        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        

window.postMessage({style:'webhook', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);



                $('HTML').append(`<script>document.getElementById('getdatagpt').onclick = function(){
        opened_editor = !opened_editor; 
        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        

window.postMessage({style:'getdata', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);


                $('HTML').append(`<script>document.getElementById('gdocsgpt').onclick = function(){
        opened_editor = !opened_editor; 
        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        
        
        
        
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        

window.postMessage({style:'gdocs', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);

                $('HTML').append(`<script>document.getElementById('scrollgpt').onclick = function(){
        opened_editor = !opened_editor; 
        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        
        
        
        
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        
 
window.postMessage({style:'scroll', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px;  box-sizing: content-box; position:fixed;top:0px;left:0%;width:80%:height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);
                /*       $('HTML').append(`<script>document.getElementById('forwardgpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        
                        
                        
                        
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                 
                window.postMessage({style:'forward', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; box-sizing: content-box; position:fixed;top:0px;left:0%;width:80%:height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);
                    $('HTML').append(`<script>document.getElementById('backgpt').onclick = function(){
                        opened_editor = !opened_editor; 
                        //document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
                        
                        
                        
                        
                        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
                        
                  
                window.postMessage({style:'back', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
                       
                     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');
                
                       document.getElementById('gptselector').style = 'z-index:100000000 !important;overflow-y: scroll; padding-right: 17px; box-sizing: content-box; position:fixed;top:0px;left:0%;width:80%:height:100%;background-color:white;color:black;display:none;';
                
                   if(document.all)
                   for(var i in document.links)
                   document.links[i].onfocus = document.links[i].blur;
                       }</script>`);
                
                       */
                $('HTML').append(`<script>document.getElementById('screenshotgpt').onclick = function(){
        opened_editor = !opened_editor; 
        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        
        
        
        
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        

window.postMessage({style:'screenshot', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);
                $('HTML').append(`<script>document.getElementById('hovergpt').onclick = function(){
        opened_editor = !opened_editor; 
        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        
        
        
        
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        

window.postMessage({style:'hover', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);

                $('HTML').append(`<script>document.getElementById('keypressgpt').onclick = function(){
        opened_editor = !opened_editor; 
        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        
        
        
        
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        
 
window.postMessage({style:'keypress', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);


                $('HTML').append(`<script>document.getElementById('gcalgpt').onclick = function(){
        opened_editor = !opened_editor; 
        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        

window.postMessage({style:'gcal', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);


                $('HTML').append(`<script>document.getElementById('sentimentgpt').onclick = function(){
        opened_editor = !opened_editor; 
        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        

window.postMessage({style:'sentiment', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);


                $('HTML').append(`<script>document.getElementById('ocrgpt').onclick = function(){
        opened_editor = !opened_editor; 
        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        

window.postMessage({style:'OCR', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);


                $('HTML').append(`<script>document.getElementById('objectgpt').onclick = function(){
        opened_editor = !opened_editor; 
        //document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        

window.postMessage({style:'object', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
       
     //   window.postMessage({generate: input} , '*'); window.postMessage({opened_selector: "false"} , '*');

       document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';

   if(document.all)
   for(var i in document.links)
   document.links[i].onfocus = document.links[i].blur;
       }</script>`);

                $('HTML').append(`<script>document.getElementById('gsheetsgpt').onclick = function(){
        opened_editor = !opened_editor;
      //  document.getElementById('script').style.display = 'block';
        document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
        
        
        
        
        var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and send them to google sheets.';
        //window.postMessage({generate: input} , '*'); 
        

       
        window.postMessage({style:'gsheets', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');

        window.postMessage({opened_selector: "false"} , '*');
        document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';}
        </script>`);


                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
    document.getElementById('consolegpt').onclick = function(){
         opened_editor = !opened_editor; 
         //document.getElementById('script').style.display = 'block';
         document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
         
         
         
         
         var selected_attribute = '` + arr[0] + `';
         var selected_attribute_val = \`` + selected_element.getAttribute(arr[0]) + `\`;

         var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and loop through them and print them to the web console.';
      //   window.postMessage({generate: input} , '*'); 
      

    
      window.postMessage({style:'print', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');

         window.postMessage({opened_selector: "false"} , '*');
         document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
     }</script>`);

                $('HTML').append(`<script>var opened_editor = false; var layer = 0;
     document.getElementById('codegpt').onclick = function(){
         opened_editor = !opened_editor; 
         //document.getElementById('script').style.display = 'block';
         document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';
         
         
         
         
         var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and run a script on them.';
        // window.postMessage({generate: input} , '*'); 
        

        window.postMessage({style:'script', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');

         window.postMessage({opened_selector: "false"} , '*');
         document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
     }</script>`);



                var newXpath = createXPathFromElement(selected_element);
                // //console.log(newXpath);
                document.getElementById('xpath').value = newXpath;
                var newcss = cssPath(selected_element);
                // //console.log(newXpath);
                document.getElementById('cssselector').value = newcss;
                document.getElementById('cssselectorgroup').value = newcss;

                $('HTML').append(`<script>var opened_editor = false; var layer = 0;

     document.getElementById('pushgpt').onclick = function(){ 
         window.postMessage({opened_selector: "false"} , '*');
opened_editor = !opened_editor;
//document.getElementById('script').style.display = 'block';
document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';

 var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and pushes them.';
//window.postMessage({generate: input} , '*');



window.postMessage({style:'click', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');

document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
 }</script>`);


                $('HTML').append(`<script>var opened_editor = false; var layer = 0;

 document.getElementById('localgpt').onclick = function(){ window.postMessage({opened_selector: "false"} , '*');
opened_editor = !opened_editor;
//document.getElementById('script').style.display = 'block';
document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';

 var input =  'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and save them to a local variable.';
//window.postMessage({generate: input} , '*');


window.postMessage({style:'variable', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');

document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
}</script>`); $('HTML').append(`<script>var opened_editor = false; var layer = 0;

document.getElementById('setgpt').onclick = function(){ window.postMessage({opened_selector: "false"} , '*');
opened_editor = !opened_editor;
//document.getElementById('script').style.display = 'block';
document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';

 var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and set the value to test.';
//window.postMessage({generate: input} , '*');


window.postMessage({style:'input', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');

document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
}</script>`);
                $('HTML').append(`<script>var opened_editor = false; var layer = 0;

document.getElementById('downloadgpt').onclick = function(){ window.postMessage({opened_selector: "false"} , '*');
opened_editor = !opened_editor;
//document.getElementById('script').style.display = 'block';
document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';

 var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and download them.';
//window.postMessage({generate: input} , '*');


window.postMessage({style:'download', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');

document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
}</script>`);

                $('HTML').append(`<script>var opened_editor = false; var layer = 0;

document.getElementById('innertextgpt').onclick = function(){ window.postMessage({opened_selector: "false"} , '*');
opened_editor = !opened_editor;

//document.getElementById('script').style.display = 'block';
document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';

 var input = 'collect all the ` + selected_element.nodeName + ` on the page with a ' + selected_attribute + ' that includes ' + selected_attribute_val + ' and set the inner text to test.';
//window.postMessage({generate: input} , '*');


window.postMessage({style:'innerText', selector: type_of_selector, cssselector: document.getElementById('cssselector').value, xpath: document.getElementById('xpath').value,setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');

document.getElementById('gptselector').style = 'z-index:1000000000 !important;overflow-y: scroll; padding-right: 17px; /* Increase/decrease this value for cross-browser compatibility */ box-sizing: content-box; position:fixed;top:0px;left:0%;width: calc(100% - 310px);height:100%;background-color:white;color:black;display:none;';
}</script>`);




            }
            //var input = prompt(' Enter the code you want to generate using natural written language. Finish this sentence: Generate a javascript code that ');
            //      SendMessage("Generate", "data", event.data.generate);
            //    (event.data.generate);


        }
        if (false) {

            for (var kk = 48; kk < 57; kk++) {
                if (pressedKeys[kk] == true) {
                    if (kk - 48 < scripts.length) {
                        ("Run Script " + scripts[kk - 48].name);
                        //.dropdown:hover .dropdown-content {display: block;}
                        pressedKeys[kk] = false;
                        eval(scripts[kk - 48].script);
                    }
                }
            }

        }
        if (pressedKeys[9] == true) {

            //("Editor");
            pressedKeys[16] = false;
            //  stop();


            pressedKeys[69] = false;
        }
        if (pressedKeys[17] == true && pressedKeys[69] == true) {
            mode_num++;
            //("Editor");scriptlist
            // (document.getElementById('scriptlist').style.display);
            //    if(document.getElementById('scriptlist').style.display != "none"){

            //  }
            pressedKeys[17] = false;
            pressedKeys[69] = false;

            e.preventDefault();
            e.stopPropagation();
            if (mode_num % 3 == 0) {



                document.getElementById('newnocode').style.display = 'none';
                document.getElementById('script').style.display = 'none';
                document.getElementById('console').style.display = 'none'; document.getElementById('schedulerblock').style.display = 'none';
                document.getElementById('cheatmenu').style.display = 'none';
                if (no_code_container.length > 0) {
                    for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                        if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                            leader_lines[kk].remove();
                            leader_lines[kk] = null;
                        }

                    }
                }
                for (var kk = 0; kk < leader_lines.length - 1; kk++) {
                    if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                        leader_lines[kk].remove();
                        leader_lines[kk] = null;
                    }

                }
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
            } else if (mode_num % 3 == 1) {


                document.getElementById('newnocode').style.display = 'none';
                document.getElementById('script').style.display = 'block';
                document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
                document.getElementById('cheatmenu').style.display = 'block';
                if (no_code_container.length > 0) {
                    for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                        if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                            leader_lines[kk].remove();
                            leader_lines[kk] = null;
                        }

                    }
                }
                for (var kk = 0; kk < leader_lines.length - 1; kk++) {
                    if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                        leader_lines[kk].remove();
                        leader_lines[kk] = null;
                    }

                }
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
            } else if (mode_num % 3 == 2) {
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);



                document.getElementById('newnocode').style.display = 'block';
                document.getElementById('script').style.display = 'none';
                document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
                document.getElementById('cheatmenu').style.display = 'block';
            }


            $('#no_code_parameters').html("");

            pressedKeys[17] = false;

        }

     

        if (pressedKeys[17] == true && pressedKeys[82] == true) {
            if (document.getElementById('scriptlist').style.display != "none") {


                e.preventDefault();
                e.stopPropagation();
                runScriptEval();
            }

            pressedKeys[17] = false;

            pressedKeys[82] = false;
            pressedKeys[17] = false;

        }

        if (pressedKeys[17] == true && pressedKeys[83] == true) {
            if (document.getElementById('scriptlist').style.display != "none") {

                e.preventDefault();
                e.stopPropagation();
                //console.log("Saved Cheat!\n");
                if (!document.getElementById('loadingCheat')) {
                    $('HTML').append(`<div id='loadingCheat' style='width: calc(100% - 270px);height:90%;left:0%;top:64.5px;position:fixed;background-color:white;z-index:1000000;'><img style='position:fixed;left:25%; top:30%;' src='` + chrome.runtime.getURL("logo.gif") + `'></img></div>`);
                } else {
                    $('#loadingCheat').show();
                }


                saveScript();
                setTimeout(function () { $('#loadingCheat').hide(); }, 200 * 1000);

            }

            pressedKeys[17] = false;

            pressedKeys[83] = false;

        }
        if (pressedKeys[17] == true && pressedKeys[81] == true) {

            // ("Showhide");
            SendMessage("ShowHideHotkey", "target", "");
            pressedKeys[17] = false;

            pressedKeys[81] = false;
        }

        if (pressedKeys[37] == true && total_childs.length > 0) {
            selected_child++;
            selected_child = mod(selected_child, total_childs.length);
            selected_element = total_childs[selected_child];

            if (typeof total_childs[selected_child] != 'undefined') {


                target = total_childs[selected_child];

                box.show();
                $("#targetcheat").html(target.nodeName);

                lastTarget = target;
                var $target = $(target);
                var offset = $target.offset();
                box.css({
                    width: $target.outerWidth() - 1,
                    height: $target.outerHeight() - 1,
                    left: offset.left,
                    top: offset.top,
                    display: 'block',
                    zIndex: 1000000000000,
                    backgroundColor: "rgba(108,77,255,0.5 )", //"#6C4DFF",
                    pointerEvents: 'none',
                    
                    border: '1px black',
                    transition: "all .2s ease-in-out",

                });

                selected_element = target;
                last_selected_element = selected_element;

                if (target.nodeName != "#text") {


                    (selected_element);
                    var el = target;
                    var arr = [];
                    //(el);
                    //(el.attributes);

                    if (typeof el.attributes != '') {
                        for (var i = 0, atts = el.attributes, n = atts.length, arr = []; i < n; i++) {
                            arr.push(atts[i].nodeName);
                        }

                        document.getElementById('highlight').style.pointEvents = 'none';

                        attr_str = "Element Type: " + selected_element.nodeName + " Attributes:";
                        for (var kk = 0; kk < arr.length; kk++) {
                            attr_str += arr[kk]
                            attr_str += " (" + selected_element.getAttribute(arr[kk]) + ") ";
                        }
                        // document.getElementById('elementselector').innerHTML = attr_str;
                        //  document.getElementById('elementselector').style.cssText = "position:fixed; left:" + (mouseX + 50) + "px; top:" + (mouseY + 50) + "px;z-index:100000000; opacity:1.0; border 5px dotted black; color:black; background-color:#ADD8E6;";
                        box.css({
                            width: $target.outerWidth() - 1,
                                                height: $target.outerHeight() - 1,
                                                left: offset.left,
                                                top: offset.top,
                                                display: 'block',
                                                zIndex: 1000000000000,
                                                backgroundColor: "rgba(108,77,255,0.5 )", //"#6C4DFF",
                                                pointerEvents: 'none',
                                                
                                                border: '1px black',
                                                transition: "all .2s ease-in-out",

                        });


                    }
                }
            }

        }


        if (pressedKeys[39] == true && total_childs.length > 0) {
            selected_child--;
            selected_child = mod(selected_child, total_childs.length);
            selected_element = total_childs[selected_child];

            if (typeof total_childs[selected_child] != 'undefined') {
                target = total_childs[selected_child];

                box.show();
                $("#targetcheat").html(target.nodeName);

                lastTarget = target;
                var $target = $(target);
                var offset = $target.offset();
                box.css({
                    width: $target.outerWidth() - 1,
                    height: $target.outerHeight() - 1,
                    left: offset.left,
                    top: offset.top,
                    display: 'block',
                    zIndex: 1000000000000,
                    backgroundColor: "rgba(108,77,255,0.5 )", //"#6C4DFF",
                    pointerEvents: 'none',
                    
                    border: '1px black',
                    transition: "all .2s ease-in-out",

                });

                if (target.nodeName != "#text") {
                    selected_element = target;

                    last_selected_element = selected_element;


                    (selected_element);
                    var el = target;
                    var arr = [];
                    //(el);
                    //(el.attributes);

                    if (typeof el.attributes != '') {
                        for (var i = 0, atts = el.attributes, n = atts.length, arr = []; i < n; i++) {
                            arr.push(atts[i].nodeName);
                        }

                        document.getElementById('highlight').style.pointEvents = 'none';

                        attr_str = "Element Type: " + selected_element.nodeName + " Attributes:";
                        for (var kk = 0; kk < arr.length; kk++) {
                            attr_str += arr[kk]
                            attr_str += " (" + selected_element.getAttribute(arr[kk]) + ") ";
                        }
                        // document.getElementById('elementselector').innerHTML = attr_str;
                        //  document.getElementById('elementselector').style.cssText = "position:fixed; left:" + (mouseX + 50) + "px; top:" + (mouseY + 50) + "px;z-index:100000000; opacity:1.0; border 5px dotted black; color:black; background-color:#ADD8E6;";
                        box.css({
                            width: $target.outerWidth() - 1,
                            height: $target.outerHeight() - 1,
                            left: offset.left,
                            top: offset.top,
                            display: 'block',
                            zIndex: 1000000000000,
                            backgroundColor: "rgba(108,77,255,0.5 )", //"#6C4DFF",
                            pointerEvents: 'none',
                            
                            border: '1px black',
                            transition: "all .2s ease-in-out",

                        });


                    }
                }
            }
        }




    }

    $("#nameSave").keyup(function (event) {
        if (event.keyCode === 13) {
            $("#saveScript").click();
        }
    });
    $("#websiteSave").keyup(function (event) {
        if (event.keyCode === 13) {
            $("#saveScript").click();
        }
    });
    $('#installextension').remove();
    //console.log(window.location.href)
    if (document.getElementById('cheatremove')){
    document.getElementById('cheatremove').remove();

    }

    if (document.getElementById('installextension') && window.location.href.includes("/dashboard")) {
        document.getElementById('installextension').innerHTML = `<center>
        <iframe width="560" height="315" src="https://www.youtube.com/embed/N8_XJrQQ8Yo" title="YouTube video player" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" allowfullscreen></iframe>
        <br>Hold CTRL+G to open Cheat Layer on any website. 
        </center>`;
    }else if(document.getElementById('installextension')){
        document.getElementById('installextension').innerHTML = ``;
    }
    const shadowWrapper = document.createElement('div');
    shadowWrapper.setAttribute('style', `
      position: fixed;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
    `);
    const shadowRoot = shadowWrapper.attachShadow({ mode: 'open' });
    const bootstrapStyle = document.createElement('link');
    bootstrapStyle.setAttribute('rel', 'stylesheet');
    bootstrapStyle.setAttribute('src', 'bootstrap.min.css');
    shadowRoot.appendChild(bootstrapStyle);

    if (window.location.href.includes('market.cheatlayer.com')) {
        var url_string = window.location.href;
        var url = new URL(url_string);
        var c = url.searchParams.get("session_id");



        if (c && c.length > 2) {

            $.ajax({
                type: "POST",
                url: "https://market.cheatlayer.com/api/getpurchase",
                // The key needs to match your method's input parameter (case-sensitive).
                data: JSON.stringify({ id: c }),
                contentType: "application/json; charset=utf-8",
                success: function (data) {
                    var purchased_scripts = [];
                    if (data["s1"].length > 1) {
                        purchased_scripts.push({ name: data["s1"], start: "https://cheatlayer.com", script: data["script1"] });
                    }
                    if (data["s2"].length > 1) {
                        purchased_scripts.push({ name: data["s2"], start: "https://cheatlayer.com", script: data["script2"] });
                    }
                    if (data["s3"].length > 1) {
                        purchased_scripts.push({ name: data["s3"], start: "https://cheatlayer.com", script: data["script3"] });
                    }
                    SendMessage("addToCheatLayer", "scripts", { scripts: JSON.stringify(purchased_scripts), url: window.location.url });



                }
            });

        }

    }


    //document.getElementById('addToCheatLayer').onclick = function(){alert('working!');};
    record();
    if (window.location.href.includes('cheatlayer')) {
        var script2 = document.createElement("script");
        script2.innerHTML = `
        
if(document.getElementById('downloadbutton')){
    document.getElementById('downloadbutton').innerHTML = "<button id='addToCheatLayer'>Run On Cheat Layer</button>";
};
window.addEventListener("message", function (event) {
if(event.data.selected_attribute_val){
(selected_attribute_val);
('test');
    selected_attribute_val = event.data.selected_attribute_val;

}
});
function copyToClipboard(element) {
    var $temp = $("<input>");
    $("body").append($temp);
    $temp.val($(element).text()).select();
    document.execCommand("copy");
    $temp.remove();
    $("#copyText").text("Copied");
//console.log("CHEAT")
window.postMessage({runOnCheat: $(element).text() } , '*');
}

`;


        document.body.appendChild(script2);
        var script = document.createElement("script");
        script.innerHTML = `
if(document.getElementById('addToCheatLayer')){
    document.getElementById('addToCheatLayer').setAttribute('data', JSON.stringify(page_scripts)); // works

    document.getElementById('addToCheatLayer').onclick = function(){window.postMessage({addToCheatLayer: this.getAttribute('data') } , '*');};
};`;
        document.body.appendChild(script);

        var script3 = document.createElement("script");
        script3.innerHTML = `
if(document.getElementById('openonboarding')){

    document.getElementById('openonboarding').onclick = function(){window.postMessage({openonboarding:'test' } , '*');};
};`;
        document.body.appendChild(script3);
        var script4 = document.createElement("script");
        script4.innerHTML = `
if(document.getElementById('//startOnboarding')){

    document.getElementById('//startOnboarding').onclick = function(){window.postMessage({openonboarding: 'test' } , '*');};
};`;
        document.body.appendChild(script4);

        var script5 = document.createElement("script");
        script5.innerHTML = `
if(document.getElementById('liveonboarding')){

    document.getElementById('liveonboarding').onclick = function(){window.postMessage({liveonboarding: 'test' } , '*');};
};`;
        document.body.appendChild(script5);

    }


});

function SendMessage(tag, msgTag, msg) {
    var sendObj = {
        "Tag": tag
    };
    sendObj[msgTag] = msg;
    (sendObj);
    (ComPort);
    try {
    ComPort.postMessage(sendObj);
    } catch (e) {
        //console.log("error");
    }

}


function CreateComPort() {

    ComPort = chrome.runtime.connect({
        name: "tiktok"
    });
    ComPort.onMessage.addListener(OnMessageReceive);

    window.addEventListener("message", function (event) {
        // We only accept messagesCheat from ourselves
        if (event.source != window)
            return;

        if (event.data.Tag && (event.data.Tag == "SharedData")) {
            SharedData = event.data.SharedData;
        }
    }, false);
}
window.addEventListener("message", function (event) {
    // We only accept messagesCheat from ourselves
    if (event.source != window)
        return;

    ("Content script received: " + event.data.edit);
    //  ComPort.postMessage();


    if (event.data.refresh == "refresh") {
        ("refresh");
        SendMessage("refresh_scripts", "refresh_scripts", "");

    } else if (event.data.addToCheatLayer) {



        SendMessage("addToCheatLayer", "scripts", { scripts: event.data.addToCheatLayer, url: window.location.url });
        //   

    } else if (event.data.openonboarding) {
        completed_steps = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];
        last_complete = 0;
        //startOnboard(0);

    } else if(event.data.removeAgent){
        
        SendMessage("removeAgent", "data", event.data.removeAgent );

        
        
    }else if (event.data.runOnCheat) {
        SendMessage("show_cheatlayer", "data", "");

        setTimeout(function () {


            launchAtlas();
            var message = event.data.runOnCheat;




            var message = message;
            if (message == '') return;
            var  messages = document.getElementById('messagesCheat');
        
            var  messageText = message;
            if (messageText) {
                
        
                $(".chat__main").append(`
                <div class="chat__bubble bubble__user"  id="messageUser">
                <div class="text__wrap">
                    <p>` + messageText + `</p>
                </div>
                <span></span>
            </div>
        `);
        
            }
        
                if (!messages.classList.contains('active')) {
                    messages.classList.add('active');
                    chatWrapper.classList.add('expanded');
                    setTimeout(() => {
                        chatWrapper.style.transition = 'none';
                        }, 2000);
                }

                                  if (message == '') return;
        
        
                                        $('.input').val('');
                                        //console.log(message)
                                        if(message == 'stop' ){
                                            SendMessage("stopAtlas", "data", {});
                                            window.location.reload();
                                            
                                          //  return;
                                        }
                                        lastInput = message;
                             

                                        //message
                                        //console.log(atlas_inputs)
                                        if(atlas_inputs.length > 0){
                                            var value = message;
                                            text_output = text_output.split(atlas_inputs[0]).join("\'" + value + "\'" );
                                            //console.log(text_output)
                                            atlas_inputs.shift();
                                            //console.log("result")
                                            //console.log(atlas_inputs)
                                            if(atlas_inputs.length == 0){
                                                //console.log('EVAL');
                                                var atlas_obj = JSON.parse(text_output);
                                                //console.log(atlas_obj);
                                                //console.log(atlas_obj['nodes'])
        
                                                for(var kk = 0; kk < atlas_obj['nodes'].length; kk++){
                                                    var node = atlas_obj['nodes'][kk];
                                                    //console.log(node);
                                                    if(node['type'] == 'runOnCheatLayer'){
                                                            SendMessage("processAtlas", "data", { script:node['script'] });
                                                    }
                                                }
        
                                            }else{
                                                
                                       
                                             if(atlas_inputs[0].includes("SHEET_URL") && window.location.href.includes("spreadsheets")){
                
                                                text_output = text_output.split(atlas_inputs[0]).join("\'" + window.location.href + "\'" );
                                                //console.log(text_output)
                                                atlas_inputs.shift();
                                                //console.log("result")
                                                //console.log(atlas_inputs)
                                                var language = window.navigator.userLanguage || window.navigator.language;

         if(language.includes("en")){
                        
                        
                                                            text_output = text_output.split(atlas_inputs[0]).join("\'Sheet1\'" );
                                                            //console.log(text_output)
                                                            atlas_inputs.shift();
                                                            //console.log("result")
                                                            //console.log(atlas_inputs)
                                                            if(atlas_inputs.length == 0){
                                                                //console.log('EVAL');
                                                                var atlas_obj = JSON.parse(text_output);
                                                                //console.log(atlas_obj);
                                                                //console.log(atlas_obj['nodes'])
                                                
                                                                for(var kk = 0; kk < atlas_obj['nodes'].length; kk++){
                                                                    var node = atlas_obj['nodes'][kk];
                                                                    //console.log(node);
                                                                    if(node['type'] == 'runOnCheatLayer'){
                                                                            SendMessage("processAtlas", "data", { script:node['script'] });
                                                                    }
                                                                }

                                                            }
                                                        }else{
                                
                                                    var  messages = document.getElementById('messagesCheat');
                                
                                                     var ms = "Please enter the following input:" + atlas_inputs[0]  ;
                                                


    $(".chat__main").append(`
    <div class="chat__bubble bubble__answer"  id="messageAnswer">
                <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                <div class="text__wrap">
                    <p>` + ms + `</p>
                </div>
            </div>`);

                                                        }
                                            
                            
                            
                                        }else if(atlas_inputs[0].includes("SHEET_URL")){
                                            runOnTab('https://sheets.new','',20000)
                                            getTabs();
                                            setTimeout(function(){
                                                var final_sheet = "";
                                            for(var kk = 0; kk < tabs.length; kk++){
                            
                                                //console.log(tabs[kk].url)
                                                if(tabs[kk].url.includes("docs.google.com/spreadsheets/")){
                                                    final_sheet = tabs[kk].url;
                            
                                                }
                                            }


                                            text_output = text_output.split(atlas_inputs[0]).join("\'" + final_sheet + "\'" );
                                            //console.log(text_output)
                                            atlas_inputs.shift();
                                            //console.log("result")
                                            //console.log(atlas_inputs)
                                            var language = window.navigator.userLanguage || window.navigator.language;
                
                
                                                if(language.includes("en")){
                
                
                                                    text_output = text_output.split(atlas_inputs[0]).join("\'Sheet1\'" );
                                                    //console.log(text_output)
                                                    atlas_inputs.shift();
                                                    //console.log("result")
                                                    //console.log(atlas_inputs)
                                                    if(atlas_inputs.length == 0){
                                                        //console.log('EVAL');
                                                        var atlas_obj = JSON.parse(text_output);
                                                        //console.log(atlas_obj);
                                                        //console.log(atlas_obj['nodes'])
                                        
                                                        for(var kk = 0; kk < atlas_obj['nodes'].length; kk++){
                                                            var node = atlas_obj['nodes'][kk];
                                                            //console.log(node);
                                                            if(node['type'] == 'runOnCheatLayer'){
                                                                    SendMessage("processAtlas", "data", { script:node['script'] });
                                                            }
                                                        }

                                                    }
                                                }else{
                        
                                            var  messages = document.getElementById('messagesCheat');
                        
                                             var ms = "Please enter the following input:" + atlas_inputs[0]  ;
                                       


    $(".chat__main").append(`
    <div class="chat__bubble bubble__answer"  id="messageAnswer">
                <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                <div class="text__wrap">
                    <p>` + ms + `</p>
                </div>
            </div>`);

                                                }

                                            }, 10000);
                                            
                                        }else{

                                            
            var ms = "Please enter the following input:" + atlas_inputs[0];



            $(".chat__main").append(`
            <div class="chat__bubble bubble__answer"  id="messageAnswer">
                        <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                        <div class="text__wrap">
                            <p>` + ms + `</p>
                        </div>
                    </div>`);
        

                                        }
                                            }
        
        
                                        }else{
                                         
                                            SendMessage("genAtlas", "data", { prompt:message, url: window.location.href, createdAt: new Date().getTime() });
                                        }


                                    },1000);

    } else  if (event.data.liveonboarding) {
        completed_steps = [1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1];
        last_complete = 29;
        //startOnboard(0);//recordActions

    } else if (event.data.addLine) {
        drawNoCodeContainer();
        document.getElementById('console').style.display = "block";
        if (no_code_container.length > 1) {
            for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                if (kk < no_code_container.length - 1) {
                    if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                        // //console.log(leader_lines[kk]);
                        leader_lines[kk].remove();
                        leader_lines[kk] = null;

                    }
                    leader_lines[kk] = new LeaderLine(document.getElementById('drag-' + no_code_container[kk].code_ids), document.getElementById('drag-' + no_code_container[kk + 1].code_ids), { color: 'white', size: 8 });
                    leader_lines[kk].setOptions({ // element-1, element-2
                        color: 'rgb(108, 77, 255)',
                        outlinecolor: 'rgb(108, 77, 255)',
                        startPlugColor: 'rgb(108, 77, 255)',
                        endPlugColor: 'rgb(0, 0, 0)',
                        startPlug: 'disc',
                        endPlug: 'disc'
                    });
                }
            }
        }

    } else if (event.data.removeLine) {
        if (no_code_container.length > 0) {
            for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                    leader_lines[kk].remove();
                    leader_lines[kk] = null;
                }

            }
        }
        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

    } else if (event.data.recordActions) {
        SendMessage("RecordActiveTab", "RecordActiveTab", "RecordActiveTab");
        live_recording = true;
        //  record();
        //    //console.log("RECORD");
        document.querySelector('#scriptlist').style.display = 'none';

        document.querySelector('#gptselector').style.display = 'none';
        if (!document.getElementById('stopRecording')) {

            $('HTML').append("<div class='cheatlayer'><button id='stopRecording'  class='cheatlayer text-area-btn' style=' z-index:1000000000000000000; position: fixed; top:0px; left: 45%;'>Stop Recording</button></div>");
        } else {
            document.getElementById('stopRecording').style.display = 'block';
        }
        $(document).on('click', '#stopRecording', function () {

            stop();
            document.querySelector('#stopRecording').style.display = 'none';
            //  document.querySelector('#scriptlist').style.display = 'block';

        });


    } else if (event.data.selectorType) {


        selector_type = event.data.selectorType;

        //   //console.log(selector_type)

    } else if (event.data.setEditor) {
        last_saved = event.data.last_saved;
        var variable_counter = 0;
        total_variables = no_code_container.length;

        if (event.data.no_code && typeof event.data.no_code !== 'undefined') {

            no_code_container = event.data.no_code;
        }
        if (event.data.input_vars && typeof event.data.input_vars != 'undefined') {
            input_vars = event.data.input_vars;
        }
        //   //console.log(event.s);
        // no_code_variables_names = event.data.node_code_container.no_code_variables;
        //  //console.log(no_code_container)
    //    //console.log(no_code_container)
        if (no_code_container.length > 0) {
            for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                if (typeof no_code_container[kk].varables !== 'undefined' && no_code_container[kk].varables.length > 0) {
                    variable_counter += no_code_container[kk].varables.split(",").length;
                }
                if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                    leader_lines[kk].remove();
                    leader_lines[kk] = null;
                }

            }
        }
        total_variables = no_code_container.length;
        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

        last_saved = event.data.last_saved;
        window.editor.setValue(event.data.setEditor);
        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

        if (event.data.no_code && typeof event.data.no_code !== 'undefined') {
            no_code_container = event.data.no_code;
            document.getElementById('script').style.display = 'none';

            drawNoCodeContainer();
            code_ids = no_code_container.length;
            if (no_code_container.length > 1) {
                for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                    if (kk < no_code_container.length - 1) {
                        if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                            leader_lines[kk].remove();
                            leader_lines[kk] = null;

                        }
                        leader_lines[kk] = new LeaderLine(document.getElementById('drag-' + no_code_container[kk].code_ids), document.getElementById('drag-' + no_code_container[kk + 1].code_ids), { color: 'white', size: 8 });

                        leader_lines[kk].setOptions({ // element-1, element-2
                            color: 'rgb(108, 77, 255)',
                            outlinecolor: 'rgb(108, 77, 255)',
                            startPlugColor: 'rgb(108, 77, 255)',
                            endPlugColor: 'rgb(0, 0, 0)',
                            startPlug: 'disc',
                            endPlug: 'disc'
                        });
                    }
                }
            }



        } else {
            if (document.getElementById('newnocode')) {
                document.getElementById('newnocode').style.display = 'none';
            }
        }

        window.editor.getSession().selection.clearSelection();
        if (document.querySelector('.leader-line')) {
            document.querySelector('.leader-line').style.zIndex = 123;
        }


        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
        if (no_code_container.length > 1) {
            for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                if (kk < no_code_container.length - 1) {
                    if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                        leader_lines[kk].remove();
                        leader_lines[kk] = null;

                    }
                    leader_lines[kk] = new LeaderLine(document.getElementById('drag-' + no_code_container[kk].code_ids), document.getElementById('drag-' + no_code_container[kk + 1].code_ids), { color: 'white', size: 8 });

                    leader_lines[kk].setOptions({ // element-1, element-2
                        color: 'rgb(108, 77, 255)',
                        outlinecolor: 'rgb(108, 77, 255)',
                        startPlugColor: 'rgb(108, 77, 255)',
                        endPlugColor: 'rgb(0, 0, 0)',
                        startPlug: 'disc',
                        endPlug: 'disc'
                    });

                }
            }
        }
    } else if (event.data.setNoCode) {
        //   //console.log(event.data.style)

        if (true) {
            //    last_saved = event.data.last_saved;
            //window.postMessage({setNoCode: '` + selected_element.nodeName + `', selected_attribute:selected_attribute , selected_attribute_val: selected_attribute_val } , '*');
            var new_code = '';
            var text = '';
            var no_code = '';
            var no_code_variables = [];
            var no_code_variable_names = [];
            var no_code_variables_string = '';

            var options_array = [];


            selected_attribute_val = 'null';

            selected_attribute = document.getElementById('attributeSelector').value.split(',')[0];

            if (selected_attribute != 'innerText' && typeof last_selected_element.getAttribute(selected_attribute) != 'undefined' && last_selected_element.getAttribute(selected_attribute)) {
                selected_attribute_val = last_selected_element.getAttribute(selected_attribute);
            } else if (last_selected_element.innerText) {
                selected_attribute_val = last_selected_element.innerText;
            }



            if (event.data.style == "prompt") {

                no_code_variables.push(`gpt[gpt.length -1]`);
                no_code_variable_names.push("gpt Last Output ")

                riku_variables++;

                var options_string1 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT1KEY'>
            `;
                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj]["variables"].length > 0) {
                        options_string1 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                    }
                }


                if (typeof window.data != 'undefined' && window.data.length > 0) {
                    var newData = CSVToArray(window.data);

                    //console.log(window.data);
                    if (true) {
                        for (var jj = 0; jj < newData.length; jj++) {
                            for (var kk = 0; kk < newData[jj].length; kk++) {
                                if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                    options_string1 += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                }
                            }
                        }
                        if (true) {
                            var script_num = 0;
                            //   //console.log('extra')
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string1 += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                        }
                    } else {
                        for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                            for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                    options_string1 += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                }
                            }
                        }
                        if (true) {
                            //          //console.log('extra')

                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string1 += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                        }
                    }
                }

                options_string1 += `<option selected="selected" value="">None</option>`;

                options_string1 += `<option value="Custom">Custom Input</option>`;
                options_string1 += `</select>`;

                var options_string2 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT2KEY'>
              `;
                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj]["variables"].length > 0) {
                        options_string2 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                    }
                }
                options_string2 += `<option selected="selected" value="">None</option>`;

                options_string2 += `<option value="Custom">Custom Input</option>`;
                options_string2 += `</select>`;


                var options_string3 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT3KEY'>
                `;
                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj]["variables"].length > 0) {
                        options_string3 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                    }
                }
                options_string3 += `<option selected="selected" value="">None</option>`;

                options_string3 += `<option value="Custom">Custom Input</option>`;
                options_string3 += `</select>`;


                var options_string4 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT4KEY'>
                  `;
                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj]["variables"].length > 0) {
                        options_string4 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                    }
                }
                options_string4 += `<option selected="selected" value="">None</option>`;

                options_string4 += `<option value="Custom">Custom Input</option>`;
                options_string4 += `</select>`;


                var options_string5 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT5KEY'>
                    `;
                for (var jj = 0; jj < no_code_container.length; jj++) {
                    if (no_code_container[jj]["variables"].length > 0) {
                        options_string5 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                    }
                }
                options_string5 += `<option selected="selected" value="">None</option>`;

                options_string5 += `<option value="Custom">Custom Input</option>`;
                options_string5 += `</select>`;



                var options_stringP = `<select class='selectCheat selectBox  select' name="vars" id='GPT3KEY'>
                `;
                              for (var jj = 0; jj < scripts.length; jj++) {
                                  if (scripts[jj]["name"] && scripts[jj]["name"].length > 0 && scripts[jj]["deleted"] != "true") {
                                    options_stringP += `<option value="` + scripts[jj]["name"] + `">` + scripts[jj]["name"] + `</option>`;
                                  }
                              }
                              options_stringP += `</select>`;
          

                new_code = `
            
            var delayKey = 1000;
            setTimeout(function(){
            


                function slow(jj){
                    
                    
                    elements[jj].focus();

                    gpt3Prompt(/*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"", function(response){
                            
                        //console.log("GPT Output");
                
                        //console.log(response);
                        total_variables++;
                        gpt.push(response);
                
                                        });                 
                
                
            if(jj < elements.length){
                setTimeout(function(){slow(jj+1)},5000)
            }
        }
    
        slow(0);


            },/*delay*/` + currentDelay + `*delayKey);


            `;
                text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : GPT-3<br> 
            Prompt:<br> ` + options_stringP + `<br>
            Input 1:<br>
            ` + options_string1 + `<br>
            Input 2:<br>
            ` + options_string2 + `<br>
            Input 3:<br>
            ` + options_string3 + `<br>
            Input 4:<br>
            ` + options_string4 + `<br>
            Input 5:<br>
            ` + options_string5 + `<br>
  
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
            
                gpt3Prompt(/*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"", function(response){
                            
                    //console.log("GPT Output");
            
                    //console.log(response);
                    total_variables++;
                    gpt.push(response);
            
                                    });                 
            

            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                currentDelay = 5;

            } 



            if (selector_type == "usegroupcss") {


                if (event.data.style == "excel") {

                    new_code = `
      
    //endcode
    const workbook = new ExcelJS.Workbook();
    
    
    const worksheet = workbook.addWorksheet('New Sheet');
    //console.log(cheat_data)
    //console.log()
    var columns = [
    ];
    var keys = Object.keys(cheat_data);
    for(var kk = 0; kk < keys.length; kk++){
        columns.push({header:keys[kk], key:keys[kk]})
        
    }
    worksheet.columns = columns;
    //console.log("Rows")
    //console.log(cheat_data[keys[0]])
    for(var kk = 0; kk < cheat_data[keys[0]].length; kk++){
    var data = {}
    
    for(var jj = 0; jj < keys.length; jj++){
        data[keys[jj]] = cheat_data[keys[jj]][kk]
    }
        const row = worksheet.addRow(data);
    
    }
    
    workbook.xlsx.writeBuffer().then((data) => {
      const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8' });
      saveAs(blob, 'test.xlsx');
    });//Generated Script id=1//Generated Script id=
    
        `;
                    text = `
        Start Code
        Endpoint : Excel File<br> 
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
       
        End Code
        var delayKey = 1000;
            setTimeout(function(){
     
    //endcode
    const workbook = new ExcelJS.Workbook();
    
    
    const worksheet = workbook.addWorksheet('New Sheet');
    //console.log(cheat_data)
    //console.log()
    var columns = [
    ];
    var keys = Object.keys(cheat_data);
    for(var kk = 0; kk < keys.length; kk++){
        columns.push({header:keys[kk], key:keys[kk]})
        
    }
    worksheet.columns = columns;
    //console.log("Rows")
    //console.log(cheat_data[keys[0]])
    for(var kk = 0; kk < cheat_data[keys[0]].length; kk++){
    var data = {}
    
    for(var jj = 0; jj < keys.length; jj++){
        data[keys[jj]] = cheat_data[keys[jj]][kk]
    }
        const row = worksheet.addRow(data);
    
    }
    
    workbook.xlsx.writeBuffer().then((data) => {
      const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8' });
      saveAs(blob, 'test.xlsx');
    });//Generated Script id=1//Generated Script id=
    
            },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "rss") {

                    $('HTML').append(`
    
            <div id="getDataMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
            
            <div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:40%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
            <center><h1 style="color:black !important;">RSS Feed Input</h1><br>
            Please enter the RSS URL:<br>
            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='sheet_input_url'  value=''></input><br>
            
            <button style='background-color:white;color:black;' id='saveSheetURL'>Save</button>
            <button style='background-color:white;color:black;' id='cancelSheetURL'>Cancel</button><br>
            
            </center>
            </div>
            
            
            </div>
            `);
                    document.getElementById('cancelSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";
                    };


                    document.getElementById('saveSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";


                        var sheet_url = document.getElementById('sheet_input_url').value;
                        getXML(sheet_url, `
                window.data = data;
                //console.log(data);
                `);

                        new_code = `
                var delayKey = 1000;
    setTimeout(function(){
        getXML('` + sheet_url + `', \`
        window.data = data;
        \`);         
        //console.log(window.data);       
    },/*delay*/` + currentDelay + `*delayKey);
    
                `;
                        text = `
                Start Code
                Endpoint : RSS Input<br> 
                RSS URL:<br>
                <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='RSSURLKEY'  value='` + sheet_url + `'></input><br>
    
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
    setTimeout(function(){
        getXML('` + sheet_url + `', \`
        window.data = data;
        /*startCheat*/
        /*stopCheat*/
        \`);       
        //console.log(window.data);       
    },/*delay*/` + currentDelay + `*delayKey);
                `;

                        var icon_code = '';
                        old_code = window.editor.getValue();

                        if (text.includes("End Code")) {
                            code = text.split("End Code")[1];
                            no_code = text.split("End Code")[0];
                        } else {
                            code = text;
                        }





                        var img_src = "https://cheatlayer.com/icon2.png";
                        var Title = "";
                        //Tesseract

                        img_src = chrome.runtime.getURL("rss.png");
                        Title += "RSS</h2>";


                        no_code = no_code.split("textarea").join("textarea style='width:100%'");
                        no_code = no_code.split(".getAttribute('innerText')").join(".innerText");

                        icon_code += '<h2 class="cheatlayer"style="color:black;"><img style="margin:20px;pointer-events: none;background-color:#FFFFFF;width:50px;height:50px;border-radius:10px;border:1px solid black;padding:5px;margin:5px;" src=\"';
                        icon_code += img_src;
                        icon_code += '\"></img> ' + Title;

                        no_code = icon_code + "" + no_code + "";
                        (no_code.split('SELECTORKEY'));
                        no_code = no_code.split('SELECTORKEY').join('SELECTORKEY' + code_ids);
                        no_code = no_code.split('XPATHKEY').join('XPATHKEY' + code_ids);
                        no_code = no_code.split('CSSKEY').join('CSSKEY' + code_ids);
                        no_code = no_code.split('ELEMENTSELECTKEY').join('ELEMENTSELECTKEY' + code_ids);

                        no_code = no_code.split('DELAYKEY').join('DELAYKEY' + code_ids);
                        no_code = no_code.split('KEYPRESSKEY').join('KEYPRESSKEY' + code_ids);
                        no_code = no_code.split('PRINTKEY').join('PRINTKEY' + code_ids);

                        no_code = no_code.split('REMOVEKEY').join('REMOVEKEY' + code_ids);
                        no_code = no_code.split('VARIABLEKEY').join('VARIABLEKEY' + code_ids);

                        no_code = no_code.split('VALUEKEY').join('VALUEKEY' + code_ids);
                        no_code = no_code.split('INPUTKEY').join('INPUTKEY' + code_ids);
                        no_code = no_code.split('INNERTEXTKEY').join('INNERTEXTKEY' + code_ids);

                        no_code = no_code.split('TIMERKEY').join('TIMERKEY' + code_ids);
                        no_code = no_code.split('LOCATIONKEY').join('LOCATIONKEY' + code_ids);
                        no_code = no_code.split('ELEMENTKEY').join('ELEMENTKEY' + code_ids);
                        no_code = no_code.split('CODEKEY').join('CODEKEY' + code_ids);
                        no_code = no_code.split('CODEGETDATA').join('CODEGETDATA' + code_ids);

                        no_code = no_code.split('Start Code').join('');
                        //  no_code = no_code.split('//').join('');
                        no_code = no_code.split('SHEETURLKEY').join('SHEETKEY' + code_ids);
                        no_code = no_code.split('SHEETIDKEY').join('SHEETIDKEY' + code_ids);
                        no_code = no_code.split('DOCIDKEY').join('DOCIDKEY' + code_ids);
                        no_code = no_code.split('DOCVALUESKEY').join('DOCVALUESKEY' + code_ids);
                        no_code = no_code.split('GMAILVALUEKEY').join('GMAILVALUEKEY' + code_ids);

                        no_code = no_code.split('SHEETVALUESKEY').join('SHEETVALUESKEY' + code_ids);
                        no_code = no_code.split('SHEETNAMEKEY').join('SHEETNAMEKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKURLKEY').join('WEBHOOKURLKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKDATAKEY').join('WEBHOOKDATAKEY' + code_ids);
                        no_code = no_code.split('CSVURLKEY').join('CSVURLKEY' + code_ids);
                        no_code = no_code.split('RIKUNAME').join('RIKUNAME' + code_ids);
                        no_code = no_code.split('RIKUAPIKEY').join('RIKUAPIKEY' + code_ids);
                        no_code = no_code.split('PROMPTKEY').join('PROMPTKEY' + code_ids);





                        no_code = no_code.split('GPT3KEY').join('GPT3KEY' + code_ids);
                        
                        no_code = no_code.split('RIKUINPUT5KEY').join('RIKUINPUT5KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT4KEY').join('RIKUINPUT4KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT1KEY').join('RIKUINPUT1KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT2KEY').join('RIKUINPUT2KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT3KEY').join('RIKUINPUT3KEY' + code_ids);
                        no_code = no_code.split('TIMEOUTKEY').join('TIMEOUTKEY' + code_ids);
                        no_code = no_code.split('TABIDKEY').join('TABIDKEY' + code_ids);
                        no_code = no_code.split('NEWWINDOWKEY').join('NEWWINDOWKEY' + code_ids);
                        no_code = no_code.split('RUNONVARSKEY').join('RUNONVARSKEY' + code_ids);
                        no_code = no_code.split('PAGINATIONKEY').join('PAGINATIONKEY' + code_ids);

                        no_code_container.push({ selector: selector_type, options: options_array, code_ids: code_ids, variablenames: no_code_variable_names, variables: no_code_variables.join(','), style: event.data.style, id: code_ids, no_code: no_code });


                        //document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
                        //document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
                        //document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;
                        drawNoCodeContainer();

                        //googleSignIn


                        window.editor.setValue(old_code + "\n//Generated Script id=" + code_ids + "\n" + new_code + "\n//endcode\n");
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        $(document).on('click', '#googleSignIn', function () {
                            SendMessage("GoogleSignIn", "GoogleSignIn", "event.data");


                        });
                        if (typeof window.editor != 'undefined') {
                            var added_code = "//Generated Script id=" + code_ids;
                            added_code += code;
                            window.editor.setValue(old_code + added_code + "\n//endcode");
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                            document.getElementById('cheatmenu').style.display = 'block';

                        }
                        window.editor.resize();
                        code_ids += 1;
                        currentDelay = 3;

                    };




                } else if (event.data.style == "gmail") {
                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='GMAILVALUEKEY'>
            `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ` + ' ' + ` + no_code_container[jj]["variables"];
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ` + ' ' + ` + storage_vars[jj];
                        }
                    }
                    options_string += `<option value="element.src">Image Source</option>`;
                    options_string += `<option value="element.href">Link Destination</option>`;
                    if (no_code_variables_string.length > 0) {
                        options_string += `<option  value="element.innerText + ' ' + ` + no_code_variables_string + `">element.innerText + ' ' + ` + no_code_variables_string + `</option>`;

                        options_string += `<option  selected='selected' value="element.innerText">Inner Text</option>`;
                    } else {
                        options_string += `<option  selected='selected' value="element.innerText">Inner Text element.innerText</option>`;
                    }
                    options_string += `</select>`;


                    new_code = `
     
        var delayKey = 1000;
            setTimeout(function(){
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){

                
                 var to = '` + user_email + `';
                 var subject = 'Cheat Layer Automation Alert';
                 var body = elements[jj].innerText;
                 var gmailURL = 'https://mail.google.com/mail/u/0/?fs=1&to=' +to + '&su=' + subject + '&body=' +body + '&tf=cm';
          
                    var timeout = 30;
                    var script = \`
                    var delayKey = 1000;
                    setTimeout(function(){
                    var elements = document.getElementsByTagName('DIV');
                    function slow(kk){
                     if(typeof elements[kk] != 'undefined' && elements[kk].getAttribute('id') && elements[kk].getAttribute('id').indexOf(":oz") >= 0){
                            elements[kk].click();
                            if(kk < elements.length){
                                setTimeout(function(){slow(kk+1)},10000);
                            }
                        }else{
                            if(kk < elements.length){
                                setTimeout(function(){slow(kk+1)},1);
                            }
                        }
                    }
                    slow(0);
                    },/*delay*/1*delayKey);\`;
    
                runOnTab(gmailURL, script, 30, {newWindow:true, id:-1})
    
                    if(jj < elements.length){
                        setTimeout(function(){slow(jj+1)},1000)
                    }
                }

                slow(0);
    
            },/*delay*/` + currentDelay + `*delayKey);
        `;
                    text = `
        Start Code
        Endpoint : Gmail<br> 
        
        Body: <br>
    ` + options_string + `
    
        <br>
    
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
       
        End Code
        var delayKey = 1000;
            setTimeout(function(){
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
    
                 var to = '` + user_email + `';
                 var subject = 'Cheat Layer Automation Alert';
                 var body = elements[jj].innerText;
                 var gmailURL = 'https://mail.google.com/mail/u/0/?fs=1&to=' +to + '&su=' + subject + '&body=' +body + '&tf=cm';
          
                    var timeout = 30;
                    var script = \`
                    var delayKey = 1000;
                    setTimeout(function(){
                    var elements = document.getElementsByTagName('DIV');
                    function slow(kk){
                     if(typeof elements[kk] != 'undefined' && elements[kk].getAttribute('id') && elements[kk].getAttribute('id').indexOf(":oz") >= 0){
                            elements[kk].click();
                            if(kk < elements.length){
                                setTimeout(function(){slow(kk+1)},10000);
                            }
                        }else{
                            if(kk < elements.length){
                                setTimeout(function(){slow(kk+1)},1);
                            }
                        }
                    }
                    slow(0);
                    },/*delay*/1*delayKey);\`;
    
                runOnTab(gmailURL, script, 30, {newWindow:true, id:-1})
    
    
                if(jj < elements.length){
                    setTimeout(function(){slow(jj+1)},1000)
                }
            }

            slow(0);


            },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "filter") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='FILTERINPKEY'>
            `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ',' + storage_vars[jj];
                        }
                    }
                    options_string += `<option value="element.src">Image Source</option>`;
                    options_string += `<option value="element.href">Link Destination</option>`;

                    options_string += `<option  selected='selected' value="element.innerText">Inner Text element.innerText</option>`;

                    options_string += `</select>`;


                    new_code = `
        var delayKey = 1000;
        setTimeout(function(){
        /*start filter code*/
        /*end filter code*/
    
        },/*delay*/` + currentDelay + `*delayKey);
        `;
                    text = `
        Start Code
        Endpoint : Filter<br> 
        
        Filter Operations:<br> <select class='selectCheat selectBox  select' name="vars" id='FILTEROPKEY'>
        <option value='regex'>Regex Filter</option>
        <option selected="selected" value='contains'>Contains</option>
        <option value='notcontains'>Does Not Contain</option>
        <option value='less'>Less Than</option>
        <option value='greater'>Greater Than</option>
        <option value='dateless'>Date Less Than</option>
        <option value='dategreater'>Date Greater Than</option>
        <option value='matches'>Matches</option>
    
        </select>
        Value: <br><input class='cheatlayer cheat-input'style='background-color:white; color:black' type="text" id='FILTERVALKEY'  style='background-color:white; color:black'type="text" value=""></input><br>
        
        <br>
        Variable: <br>
    ` + options_string + `
    
        <br>
    
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
       
        End Code
        var delayKey = 1000;
            setTimeout(function(){
            /*start filter code*/
            /*end filter code*/
    
            },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "pdf") {

                    total_variables++;
                    no_code_variables.push(`window.pdf`);
                    no_code_variable_names.push("PDF Output " + total_variables)
                    new_code = `
        
        var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


        function slow(jj){

        function gettext(pdfUrl){
            var pdf = pdfjsLib.getDocument(pdfUrl);
            //console.log(pdf);
            return pdf.promise.then(function(pdf) { // get all pages text
              //console.log(pdf)
              var maxPages = pdf._pdfInfo.numPages;
              var countPromises = []; // collecting all page promises
              for (var j = 1; j <= maxPages; j++) {
                var page = pdf.getPage(j);
          
                var txt = "";
                countPromises.push(page.then(function(page) { // add page promise
                  var textContent = page.getTextContent();
                  return textContent.then(function(text){ // return content promise
                    return text.items.map(function (s) { return s.str; }).join(''); // value page text 
                  });
                }));
              }
              // Wait for all pages and join text
              return Promise.all(countPromises).then(function (texts) {
                return texts.join('');
              });
            });
          }
              pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.15.349/build/pdf.worker.js';
           
          // waiting on gettext to finish completion, or error
          gettext(elements[jj].href).then(function (text) {
            //console.log('parse ' + text); 
            window.pdf = text; 
          }, 
          function (reason) {
            console.error(reason);
          });
           
          if(jj < elements.length){
            setTimeout(function(){slow(jj+1)},1000)
        }
    }

    slow(0);

        
        `;
                    text = `
        Start Code
        CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
        Endpoint: PDF to text<br>
        <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PDFKEY' value='element.href'></input><br>
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
        End Code
        var delayKey = 1000;
        setTimeout(function(){
            var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


            function slow(jj){
    
            function gettext(pdfUrl){
                var pdf = pdfjsLib.getDocument(pdfUrl);
                //console.log(pdf);
                return pdf.promise.then(function(pdf) { // get all pages text
                  //console.log(pdf)
                  var maxPages = pdf._pdfInfo.numPages;
                  var countPromises = []; // collecting all page promises
                  for (var j = 1; j <= maxPages; j++) {
                    var page = pdf.getPage(j);
              
                    var txt = "";
                    countPromises.push(page.then(function(page) { // add page promise
                      var textContent = page.getTextContent();
                      return textContent.then(function(text){ // return content promise
                        return text.items.map(function (s) { return s.str; }).join(''); // value page text 
                      });
                    }));
                  }
                  // Wait for all pages and join text
                  return Promise.all(countPromises).then(function (texts) {
                    return texts.join('');
                  });
                });
              }
                  pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.15.349/build/pdf.worker.js';
               
              // waiting on gettext to finish completion, or error
              gettext(elements[jj].href).then(function (text) {
                //console.log('parse ' + text); 
                window.pdf = text; 
              }, 
              function (reason) {
                console.error(reason);
              });
          
              if(jj < elements.length){
                setTimeout(function(){slow(jj+1)},1000)
            }
        }
    
        slow(0);
                },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "OCR") {

                    new_code = `
        
        var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


        function slow(jj){
            
            
            OCR(elements[jj]);
     
            if(jj < elements.length){
                setTimeout(function(){slow(jj+1)},5000)
            }
        }
    
        slow(0);
        `;
                    text = `
        Start Code
        CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
        Endpoint: OCR<br>
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
        End Code
        var delayKey = 1000;
        setTimeout(function(){
            var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


            function slow(jj){
                
                OCR(elements[jj]);

                if(jj < elements.length){
                    setTimeout(function(){slow(jj+1)},5000)
                }
            }
        
            slow(0);

                },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else   if (event.data.style == "prompt") {

                    no_code_variables.push(`gpt[gpt.length -1]`);
                    no_code_variable_names.push("Riku.ai Last Output ")

                    riku_variables++;

                    var options_string1 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT1KEY'>
                `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string1 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }


                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string1 += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string1 += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string1 += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string1 += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }

                    options_string1 += `<option selected="selected" value="">None</option>`;

                    options_string1 += `<option value="Custom">Custom Input</option>`;
                    options_string1 += `</select>`;

                    var options_string2 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT2KEY'>
                  `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string2 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string2 += `<option selected="selected" value="">None</option>`;

                    options_string2 += `<option value="Custom">Custom Input</option>`;
                    options_string2 += `</select>`;


                    var options_string3 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT3KEY'>
                    `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string3 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string3 += `<option selected="selected" value="">None</option>`;

                    options_string3 += `<option value="Custom">Custom Input</option>`;
                    options_string3 += `</select>`;


                    var options_string4 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT4KEY'>
                      `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string4 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string4 += `<option selected="selected" value="">None</option>`;

                    options_string4 += `<option value="Custom">Custom Input</option>`;
                    options_string4 += `</select>`;


                    var options_string5 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT5KEY'>
                        `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string5 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string5 += `<option selected="selected" value="">None</option>`;

                    options_string5 += `<option value="Custom">Custom Input</option>`;
                    options_string5 += `</select>`;




                    new_code = `
                
                var delayKey = 1000;
                setTimeout(function(){
                


                    function slow(jj){
                        
                        
                        elements[jj].focus();

                        gpt3Prompt(/*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"", function(response){
                            
                            //console.log("GPT Output");
                    
                            //console.log(response);
                            total_variables++;
                            gpt.push(response);
                    
                                            });                     
                    
                    
                if(jj < elements.length){
                    setTimeout(function(){slow(jj+1)},5000)
                }
            }
        
            slow(0);


                },/*delay*/` + currentDelay + `*delayKey);
    
    
                `;
                    text = `
                Start Code
                CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
                Endpoint : GPT-3<br> 
       
                Input 1:<br>
                ` + options_string1 + `<br>
                Input 2:<br>
                ` + options_string2 + `<br>
                Input 3:<br>
                ` + options_string3 + `<br>
                Input 4:<br>
                ` + options_string4 + `<br>
                Input 5:<br>
                ` + options_string5 + `<br>
      
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                


                    function slow(jj){
                        
                        elements[jj].click();
                        elements[jj].focus();

                        gpt3Prompt(/*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"", function(response){
                            
        //console.log("GPT Output");

        //console.log(response);
        total_variables++;
        gpt.push(response);

                        });      
                    
                    if(jj < elements.length){
                        setTimeout(function(){slow(jj+1)},5000)
                    }
                }
            
                slow(0);

                

                },/*delay*/` + currentDelay + `*delayKey);
                
                `;
                    currentDelay = 5;

                } else  if (event.data.style == "gsheets") {
                    if (true) {
                        var options_string = `<select class='selectCheat selectBox  select' name="vars" id='SHEETVALUESKEY'>
                `;
                        for (var jj = 0; jj < no_code_container.length; jj++) {
                            if (no_code_container[jj]["variables"].length > 0) {
                                options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                                no_code_variables_string += ',' + no_code_container[jj]["variables"];
                            }
                        }
                        options_string += `<option value="element.src">Image Source</option>`;
                        options_string += `<option value="element.href">Link Destination</option>`;
                        if (no_code_variables_string.length > 0) {
                            options_string += `<option  selected='selected' value="element.innerText` + no_code_variables_string + `">Inner Text element.innerText` + no_code_variables_string + `</option>`;
                            options_string += `<option  value="element.innerText">Inner Text</option>`;
                        } else {
                            options_string += `<option  selected='selected' value="element.innerText">Innert Text</option>`;
                        }
                        options_string += `</select>`;
                        //  alert('Please note that google is still reviewing our direct API request, so you may be blocked until they complete review. Early users are grandfathered in.')

                        new_code = `
        
        var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


        function slow(jj){
            
            google_sheets_add_row('GOOGLE_SHEETS_ID',/*name*/'Sheet1',[elements[jj].innerText` + no_code_variables_string + `]);       
            if(jj < elements.length){
                setTimeout(function(){slow(jj+1)},500)
            }
        }
    
        slow(0);
        
        `;
                        text = `
        Start Code
        CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
        Endpoint: Google Sheets<br>
        URL:<br>
<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='SHEETIDKEY' value='GOOGLE_SHEETS_ID'></input><br>
Sheet Name:<br>
<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='SHEETNAMEKEY'  value='Sheet1'></input><br>
Sheet Values:<br>
` + options_string + `<br>
Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
        <br>
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
        End Code
        var delayKey = 1000;
        setTimeout(function(){
            var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


            function slow(jj){
            
            
            
                google_sheets_add_row('GOOGLE_SHEETS_ID',/*name*/'Sheet1',[elements[jj].innerText` + no_code_variables_string + `]);       

                if(jj < elements.length){
                    setTimeout(function(){slow(jj+1)},500)
                }
            }
        
            slow(0);

        },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                    }
                } else if (event.data.style == "getdata") {

                    $('HTML').append(`

            <div id="getDataMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
            
            <div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:40%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
            <center><h1 style="color:black !important;">Google Sheets Data Input</h1><br>
            Please enter the google sheets published CSV URL:<br>
            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='sheet_input_url'  value=''></input><br>
            
            <button style='background-color:white;color:black;' id='saveSheetURL'>Save</button>
            <button style='background-color:white;color:black;' id='cancelSheetURL'>Cancel</button><br>
            
            </center>
            </div>
            
            
            </div>
            `);
                    document.getElementById('cancelSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";
                    };


                    document.getElementById('saveSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";

                        var options_string = `<select class='selectCheat selectBox  select' name="vars" id='CODEGETDATA'>
                `;
                        for (var jj = 0; jj < scripts.length; jj++) {
                            if (scripts[jj]["name"] && scripts[jj]["name"].length > 0 && scripts[jj]["deleted"] != "true") {
                                options_string += `<option value="` + scripts[jj]["name"] + `">` + scripts[jj]["name"] + `</option>`;
                            }
                        }
                        options_string += `<option selected="selected" value="none">None</option>`;

                        options_string += `</select>`;


                        var sheet_url = document.getElementById('sheet_input_url').value;
                        sendAjax(sheet_url, {}, "GET", `
                window.data = data;
                //console.log(data);
                `);

                        new_code = `
                var delayKey = 1000;
    setTimeout(function(){
        sendAjax('` + sheet_url + `',{},"GET", \`
        window.data = data;
        \`);         
        //console.log(window.data);       
    },/*delay*/` + currentDelay + `*delayKey);
    
                `;
                        text = `
                Start Code
                Endpoint : Google Sheets<br> 
                Google Sheets CSV URL:<br>
                Run Cheat:<br>
                ` + options_string + `<br>
                <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='CSVURLKEY'  value='` + sheet_url + `'></input><br>
    
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
    setTimeout(function(){
        sendAjax('` + sheet_url + `',{},"GET", \`
        window.data = data;
        /*startCheat*/
        /*stopCheat*/
        \`);         
        //console.log(window.data); 
    },/*delay*/` + currentDelay + `*delayKey);
                `;

                        var icon_code = '';
                        old_code = window.editor.getValue();

                        if (text.includes("End Code")) {
                            code = text.split("End Code")[1];
                            no_code = text.split("End Code")[0];
                        } else {
                            code = text;
                        }





                        var img_src = "https://cheatlayer.com/icon2.png";
                        var Title = "";
                        //Tesseract

                        img_src = "https://cheatlayer.com/images/textarea/text1.png";
                        Title += "Get Data GSheets</h2>";

                        no_code = no_code.split("textarea").join("textarea style='width:100%'");
                        no_code = no_code.split(".getAttribute('innerText')").join(".innerText");

                        icon_code += '<h2 class="cheatlayer"style="color:black;"><img style="margin:20px;pointer-events: none;background-color:#FFFFFF;width:50px;height:50px;border-radius:10px;border:1px solid black;padding:5px;margin:5px;" src=\"';
                        icon_code += img_src;
                        icon_code += '\"></img> ' + Title;

                        no_code = icon_code + "" + no_code + "";
                        (no_code.split('SELECTORKEY'));
                        no_code = no_code.split('SELECTORKEY').join('SELECTORKEY' + code_ids);
                        no_code = no_code.split('XPATHKEY').join('XPATHKEY' + code_ids);
                        no_code = no_code.split('CSSKEY').join('CSSKEY' + code_ids);
                        no_code = no_code.split('ELEMENTSELECTKEY').join('ELEMENTSELECTKEY' + code_ids);

                        no_code = no_code.split('DELAYKEY').join('DELAYKEY' + code_ids);
                        no_code = no_code.split('KEYPRESSKEY').join('KEYPRESSKEY' + code_ids);
                        no_code = no_code.split('PRINTKEY').join('PRINTKEY' + code_ids);
                        no_code = no_code.split('VARIABLEATTRKEY').join('VARIABLEATTRKEY' + code_ids);

                        no_code = no_code.split('REMOVEKEY').join('REMOVEKEY' + code_ids);
                        no_code = no_code.split('VARIABLEKEY').join('VARIABLEKEY' + code_ids);

                        no_code = no_code.split('VALUEKEY').join('VALUEKEY' + code_ids);
                        no_code = no_code.split('INPUTKEY').join('INPUTKEY' + code_ids);
                        no_code = no_code.split('INNERTEXTKEY').join('INNERTEXTKEY' + code_ids);

                        no_code = no_code.split('TIMERKEY').join('TIMERKEY' + code_ids);
                        no_code = no_code.split('LOCATIONKEY').join('LOCATIONKEY' + code_ids);
                        no_code = no_code.split('ELEMENTKEY').join('ELEMENTKEY' + code_ids);
                        no_code = no_code.split('CODEKEY').join('CODEKEY' + code_ids);
                        no_code = no_code.split('CODEGETDATA').join('CODEGETDATA' + code_ids);

                        no_code = no_code.split('Start Code').join('');
                        //  no_code = no_code.split('//').join('');
                        no_code = no_code.split('SHEETURLKEY').join('SHEETKEY' + code_ids);
                        no_code = no_code.split('SHEETIDKEY').join('SHEETIDKEY' + code_ids);
                        no_code = no_code.split('DOCIDKEY').join('DOCIDKEY' + code_ids);
                        no_code = no_code.split('DOCVALUESKEY').join('DOCVALUESKEY' + code_ids);
                        no_code = no_code.split('GMAILVALUEKEY').join('GMAILVALUEKEY' + code_ids);

                        no_code = no_code.split('FILTERINPKEY').join('FILTERINPKEY' + code_ids);
                        no_code = no_code.split('FILTEROPKEY').join('FILTEROPKEY' + code_ids);
                        no_code = no_code.split('FILTERVALKEY').join('FILTERVALKEY' + code_ids);


                        no_code = no_code.split('SHEETVALUESKEY').join('SHEETVALUESKEY' + code_ids);
                        no_code = no_code.split('SHEETNAMEKEY').join('SHEETNAMEKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKURLKEY').join('WEBHOOKURLKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKDATAKEY').join('WEBHOOKDATAKEY' + code_ids);
                        no_code = no_code.split('CSVURLKEY').join('CSVURLKEY' + code_ids);
                        no_code = no_code.split('RIKUNAME').join('RIKUNAME' + code_ids);
                        no_code = no_code.split('RIKUAPIKEY').join('RIKUAPIKEY' + code_ids);
                        no_code = no_code.split('PROMPTKEY').join('PROMPTKEY' + code_ids);
                        no_code = no_code.split('GPT3KEY').join('GPT3KEY' + code_ids);

                        no_code = no_code.split('RIKUINPUT5KEY').join('RIKUINPUT5KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT4KEY').join('RIKUINPUT4KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT1KEY').join('RIKUINPUT1KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT2KEY').join('RIKUINPUT2KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT3KEY').join('RIKUINPUT3KEY' + code_ids);
                        no_code = no_code.split('TIMEOUTKEY').join('TIMEOUTKEY' + code_ids);
                        no_code = no_code.split('TABIDKEY').join('TABIDKEY' + code_ids);
                        no_code = no_code.split('NEWWINDOWKEY').join('NEWWINDOWKEY' + code_ids);
                        no_code = no_code.split('RUNONVARSKEY').join('RUNONVARSKEY' + code_ids);
                        no_code = no_code.split('PAGINATIONKEY').join('PAGINATIONKEY' + code_ids);

                        no_code_container.push({ selector: selector_type, options: options_array, code_ids: code_ids, variablenames: no_code_variable_names, variables: no_code_variables.join(','), style: event.data.style, id: code_ids, no_code: no_code });


                        //document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
                        //document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
                        //document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;
                        drawNoCodeContainer();

                        //googleSignIn


                        window.editor.setValue(old_code + "\n//Generated Script id=" + code_ids + "\n" + new_code + "\n//endcode\n");
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        $(document).on('click', '#googleSignIn', function () {
                            SendMessage("GoogleSignIn", "GoogleSignIn", "event.data");


                        });
                        if (typeof window.editor != 'undefined') {
                            var added_code = "//Generated Script id=" + code_ids;
                            added_code += code;
                            window.editor.setValue(old_code + added_code + "\n//endcode");
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                            document.getElementById('cheatmenu').style.display = 'block';

                        }
                        window.editor.resize();
                        code_ids += 1;
                        currentDelay = 3;

                    };


                } else if (event.data.style == "webhook") {
                    var options_arr = [];
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_arr.push(no_code_container[jj]["variables"])
                        }
                    }
                    options_arr.push("element.src")
                    options_arr.push("element.href")

                    options_arr.push("custom")

                    $('HTML').append(`

              <div id="wizardMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
              
              <div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:40%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
              <center><h1 style="color:black !important;">API Wizard</h1><br>
              WebhookURL:<br>
              <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='api_wizard_url'  value=''></input><br>
              Request Type:<br>
              <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='api_wizard_type'  value='POST'></input><br>
              Headers {<div id='header_wiz'></div>}<br>
              Body {<div id='body_wiz'></div>}<br>

              <button style='background-color:white;color:black;' id='addWizardBody'>Add Body Data</button><br>
              <button style='background-color:white;color:black;' id='addWizardHeader'>Add Header</button><br>

              <button style='background-color:white;color:black;' id='saveWizard'>Save</button><br>
              <button style='background-color:white;color:black;' id='cancelWizard'>Cancel</button><br><br>
              
              </center>
              </div>
              
              
              </div>
              `);
                    var header_count = 0;
                    var body_count = 0;
                    var headers = {};
                    var bodies = {};

                    document.getElementById('addWizardHeader').onclick = function () {
                        $('#header_wiz').append(`<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='header_wiz_keys` + header_count + `'  value='key'></input> : 
                          <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='header_wiz_values` + header_count + `'  value='value'></input><br>`)

                        //  options_array.push({"title":'Header Key 1', "id":'WEBHOOKHEADERKEY' + header_count + '_' + code_ids, "value":header_key, "type":'text'})
                        // options_array.push({"title":'Header Data 1', "id":'WEBHOOKHEADERDATAKEY' +header_count + '_' + code_ids, "value":header_val, "type":'text'})
                        //    headers[header_key] = header_val;

                        header_count++;

                    };


                    document.getElementById('addWizardBody').onclick = function () {
                        //  options_array.push({"title":'Body Key 1', "id":'WEBHOOKKEY1' + code_ids, "value":body_key, "type":'text'})
                        //   options_array.push({"title":'Body Value 1', "id":'WEBHOOKDATAKEY' + code_ids, "value":'data', "type":'dropdown', 'options':options_arr})

                        //  bodies[body_key] = body_val;

                        $('#body_wiz').append(`<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='body_wiz_keys` + body_count + `'  value='key'></input> : 
                  <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='body_wiz_values` + body_count + `'  value='value'></input><br>`)



                        body_count++;

                    };

                    document.getElementById('cancelWizard').onclick = function () {
                        document.getElementById('wizardMenu').style.display = "none";
                    };


                    document.getElementById('saveWizard').onclick = function () {

                        for (var kk = 0; kk < body_count; kk++) {
                            //   options_array.push({"title":'Body Key ' + kk, "id":'WEBHOOKKEY1_' + kk  + '_' + code_ids, "value":$('#body_wiz_keys' + kk).val(), "type":'text'})
                            //    options_array.push({"title":'Body Value ' + kk, "id":'WEBHOOKDATAKEY_' + kk  + '_' + code_ids, "value":$('#body_wiz_values' + kk).val(), "type":'dropdown', 'options':options_arr})

                            bodies[$('#body_wiz_keys' + kk).val()] = $('#body_wiz_values' + kk).val();

                        }
                        for (var kk = 0; kk < header_count; kk++) {
                            //      options_array.push({"title":'Header Key ' + kk, "id":'WEBHOOKKEY1_' + kk  + '_' + code_ids, "value":$('#body_wiz_keys' + kk).val(), "type":'text'})
                            //      options_array.push({"title":'Header Value ' + kk, "id":'WEBHOOKDATAKEY_' + kk  + '_' + code_ids, "value":$('#body_wiz_values' + kk).val(), "type":'dropdown', 'options':options_arr})

                            headers[$('#body_wiz_keys' + kk).val()] = $('#body_wiz_values' + kk).val();

                        }

                        document.getElementById('wizardMenu').style.display = "none";
                        var wiz_url = document.getElementById('api_wizard_url').value;
                        var wiz_type = document.getElementById('api_wizard_type').value;
                  
                        SendMessage("sendAjax", "data", {
                            url: wiz_url,
                            data: bodies,
                            mode: wiz_type,
                            callback: 'window.API = JSON.parse(data);//console.log(JSON.stringify(data));',
                            headers: headers,
                            dataType: null,
                            currentTab_id: 0
                        });


                        new_code = `
                  var delayKey = 1000;
                  setTimeout(function(){
                      var elements = document.querySelectorAll('` + event.data.cssselector + `');
                      
      
      
                      function slow(jj){
                                      sendAjax('WEBHOOK_URL',{data:[elements[jj].innerText]},'POST');       
      
                                      if(jj < elements.length){
                                          setTimeout(function(){slow(jj+1)},500)
                                      }
                                  }
                              
                                  slow(0);
                              
                              
                      },/*delay*/` + currentDelay + `*delayKey);
                  
                  `;
                        text = `
                  Start Code
                  CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
                  URL:<br>
                  <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='WEBHOOKURLKEY'  value='` + wiz_url + `'></input><br>
                  Data:<br>
                  ` + options_string + `<br>
                  
                  Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                  <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                  End Code
                  var delayKey = 1000;
                  setTimeout(function(){
                      var elements = document.querySelectorAll('` + event.data.cssselector + `');
                      
      
      
                      function slow(jj){
                          
                          
                        sendAjax('` + wiz_url + `',` + JSON.stringify(bodies) + `,/*type*/'` + wiz_type + `',/*callback*/'//console.log(data);',/*header*/` + JSON.stringify(headers) + `);       
                          
                          if(jj < elements.length){
                              setTimeout(function(){slow(jj+1)},500)
                          }
                      }
                  
                      slow(0);
      
      
                  },/*delay*/` + currentDelay + `*delayKey);
                  
                  `;


                        var icon_code = '';
                        old_code = window.editor.getValue();

                        if (text.includes("End Code")) {
                            code = text.split("End Code")[1];
                            no_code = text.split("End Code")[0];
                        } else {
                            code = text;
                        }





                        var img_src = "https://cheatlayer.com/icon2.png";
                        var Title = "";
                        //Tesseract

                        img_src = "https://cheatlayer.com/images/textarea/text1.png";
                        Title += "Get Data GSheets</h2>";

                        no_code = no_code.split("textarea").join("textarea style='width:100%'");
                        no_code = no_code.split(".getAttribute('innerText')").join(".innerText");

                        icon_code += '<h2 class="cheatlayer"style="color:black;"><img style="margin:20px;pointer-events: none;background-color:#FFFFFF;width:50px;height:50px;border-radius:10px;border:1px solid black;padding:5px;margin:5px;" src=\"';
                        icon_code += img_src;
                        icon_code += '\"></img> ' + Title;

                        no_code = icon_code + "" + no_code + "";
                        (no_code.split('SELECTORKEY'));
                        no_code = no_code.split('SELECTORKEY').join('SELECTORKEY' + code_ids);
                        no_code = no_code.split('XPATHKEY').join('XPATHKEY' + code_ids);
                        no_code = no_code.split('CSSKEY').join('CSSKEY' + code_ids);
                        no_code = no_code.split('ELEMENTSELECTKEY').join('ELEMENTSELECTKEY' + code_ids);

                        no_code = no_code.split('DELAYKEY').join('DELAYKEY' + code_ids);
                        no_code = no_code.split('KEYPRESSKEY').join('KEYPRESSKEY' + code_ids);
                        no_code = no_code.split('PRINTKEY').join('PRINTKEY' + code_ids);
                        no_code = no_code.split('VARIABLEATTRKEY').join('VARIABLEATTRKEY' + code_ids);

                        no_code = no_code.split('REMOVEKEY').join('REMOVEKEY' + code_ids);
                        no_code = no_code.split('VARIABLEKEY').join('VARIABLEKEY' + code_ids);

                        no_code = no_code.split('VALUEKEY').join('VALUEKEY' + code_ids);
                        no_code = no_code.split('INPUTKEY').join('INPUTKEY' + code_ids);
                        no_code = no_code.split('INNERTEXTKEY').join('INNERTEXTKEY' + code_ids);

                        no_code = no_code.split('TIMERKEY').join('TIMERKEY' + code_ids);
                        no_code = no_code.split('LOCATIONKEY').join('LOCATIONKEY' + code_ids);
                        no_code = no_code.split('ELEMENTKEY').join('ELEMENTKEY' + code_ids);
                        no_code = no_code.split('CODEKEY').join('CODEKEY' + code_ids);
                        no_code = no_code.split('CODEGETDATA').join('CODEGETDATA' + code_ids);

                        no_code = no_code.split('Start Code').join('');
                        //  no_code = no_code.split('//').join('');
                        no_code = no_code.split('SHEETURLKEY').join('SHEETKEY' + code_ids);
                        no_code = no_code.split('SHEETIDKEY').join('SHEETIDKEY' + code_ids);
                        no_code = no_code.split('DOCIDKEY').join('DOCIDKEY' + code_ids);
                        no_code = no_code.split('DOCVALUESKEY').join('DOCVALUESKEY' + code_ids);
                        no_code = no_code.split('GMAILVALUEKEY').join('GMAILVALUEKEY' + code_ids);

                        no_code = no_code.split('FILTERINPKEY').join('FILTERINPKEY' + code_ids);
                        no_code = no_code.split('FILTEROPKEY').join('FILTEROPKEY' + code_ids);
                        no_code = no_code.split('FILTERVALKEY').join('FILTERVALKEY' + code_ids);


                        no_code = no_code.split('SHEETVALUESKEY').join('SHEETVALUESKEY' + code_ids);
                        no_code = no_code.split('SHEETNAMEKEY').join('SHEETNAMEKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKURLKEY').join('WEBHOOKURLKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKDATAKEY').join('WEBHOOKDATAKEY' + code_ids);
                        no_code = no_code.split('CSVURLKEY').join('CSVURLKEY' + code_ids);
                        no_code = no_code.split('RIKUNAME').join('RIKUNAME' + code_ids);
                        no_code = no_code.split('RIKUAPIKEY').join('RIKUAPIKEY' + code_ids);
                        no_code = no_code.split('PROMPTKEY').join('PROMPTKEY' + code_ids);
                        no_code = no_code.split('GPT3KEY').join('GPT3KEY' + code_ids);

                        no_code = no_code.split('RIKUINPUT5KEY').join('RIKUINPUT5KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT4KEY').join('RIKUINPUT4KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT1KEY').join('RIKUINPUT1KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT2KEY').join('RIKUINPUT2KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT3KEY').join('RIKUINPUT3KEY' + code_ids);
                        no_code = no_code.split('TIMEOUTKEY').join('TIMEOUTKEY' + code_ids);
                        no_code = no_code.split('TABIDKEY').join('TABIDKEY' + code_ids);
                        no_code = no_code.split('NEWWINDOWKEY').join('NEWWINDOWKEY' + code_ids);
                        no_code = no_code.split('RUNONVARSKEY').join('RUNONVARSKEY' + code_ids);
                        no_code = no_code.split('PAGINATIONKEY').join('PAGINATIONKEY' + code_ids);

                        no_code_container.push({ headers: header_count, body_size: header_count, selector: selector_type, options: options_array, code_ids: code_ids, variablenames: no_code_variable_names, variables: no_code_variables.join(','), style: event.data.style, id: code_ids, no_code: no_code });


                        //document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
                        //document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
                        //document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;
                        drawNoCodeContainer();

                        //googleSignIn


                        window.editor.setValue(old_code + "\n//Generated Script id=" + code_ids + "\n" + new_code + "\n//endcode\n");
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        $(document).on('click', '#googleSignIn', function () {
                            SendMessage("GoogleSignIn", "GoogleSignIn", "event.data");


                        });
                        if (typeof window.editor != 'undefined') {
                            var added_code = "//Generated Script id=" + code_ids;
                            added_code += code;
                            window.editor.setValue(old_code + added_code + "\n//endcode");
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                            document.getElementById('cheatmenu').style.display = 'block';

                        }
                        window.editor.resize();
                        code_ids += 1;
                        currentDelay = 3;

                    };


                } else if (event.data.style == "sentiment") {

                    currentDelay = 10;

                    new_code = `
            
            var delayKey = 1000;
            var sentimentkey = 'none';
            var  sentiment = ml5.sentiment('movieReviews', modelReady);
            function modelReady() {

            setTimeout(function(){
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    
                    // model is ready
                var prediction = sentiment.predict(elements[jj].innerText);
              
                var output = parseFloat(prediction.score) > 0.5 ? 'positive' : 'negative';
                //console.log(prediction.score + ' ' + output);
                sentimentkey = prediction.score + ' ' + output;
                

                if(jj < elements.length){
                    setTimeout(function(){slow(jj+1)},5000)
                }
            }
        
            slow(0);
                
                
            },/*delay*/` + currentDelay + `*delayKey);
            }
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint: Sentiment Analysis<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            var sentimentkey = 'none';
            var  sentiment = ml5.sentiment('movieReviews', modelReady);
            function modelReady() {

            setTimeout(function(){
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    // model is ready
                var prediction = sentiment.predict(elements[jj].innerText);
              
                var output = parseFloat(prediction.score) > 0.5 ? 'positive' : 'negative';
                //console.log(prediction.score + ' ' + output);
                sentimentkey = prediction.score + ' ' + output;
                
                
                if(jj < elements.length){
                    setTimeout(function(){slow(jj+1)},5000)
                }
            }
        
            slow(0);
                
                
                
                
                
            },/*delay*/` + currentDelay + `*delayKey);
            }
            `;
                } else if (event.data.style == "riku") {

                    no_code_variables.push(`riku[riku.length -1]`);
                    no_code_variable_names.push("Riku.ai Last Output ")

                    riku_variables++;

                    var options_string1 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT1KEY'>
                `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string1 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }


                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string1 += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string1 += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string1 += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string1 += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }

                    options_string1 += `<option selected="selected" value="">None</option>`;

                    options_string1 += `<option value="Custom">Custom Input</option>`;
                    options_string1 += `</select>`;

                    var options_string2 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT2KEY'>
                  `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string2 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string2 += `<option selected="selected" value="">None</option>`;

                    options_string2 += `<option value="Custom">Custom Input</option>`;
                    options_string2 += `</select>`;


                    var options_string3 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT3KEY'>
                    `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string3 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string3 += `<option selected="selected" value="">None</option>`;

                    options_string3 += `<option value="Custom">Custom Input</option>`;
                    options_string3 += `</select>`;


                    var options_string4 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT4KEY'>
                      `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string4 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string4 += `<option selected="selected" value="">None</option>`;

                    options_string4 += `<option value="Custom">Custom Input</option>`;
                    options_string4 += `</select>`;


                    var options_string5 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT5KEY'>
                        `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string5 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string5 += `<option selected="selected" value="">None</option>`;

                    options_string5 += `<option value="Custom">Custom Input</option>`;
                    options_string5 += `</select>`;




                    new_code = `
                
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                    function slow(jj){
                        
                        
                        elements[jj].focus();

                    rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");      
                    
                    
                    
                if(jj < elements.length){
                    setTimeout(function(){slow(jj+1)},5000)
                }
            }
        
            slow(0);


                },/*delay*/` + currentDelay + `*delayKey);
    
    
                `;
                    text = `
                Start Code
                CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
                Endpoint : Riku.ai<br> 
                Account Holder name:<br>
                <input class='cheatlayer cheat-input' id='RIKUNAME' width='174px' style='background-color:white; color:black;width:174px !important;' value='Account'></input><br>
                
                API KEY:<br>
                <input class='cheatlayer cheat-input' id='RIKUAPIKEY' width='174px' style='background-color:white; color:black;width:174px !important;' value='API_KEY'></input><br>
                Prompt ID:<br>
                <input class='cheatlayer cheat-input' id='PROMPTKEY' width='174px' style='background-color:white; color:black;width:174px !important;' value='PROMPT_ID'></input><br>
               
                Input 1:<br>
                ` + options_string1 + `<br>
                Input 2:<br>
                ` + options_string2 + `<br>
                Input 3:<br>
                ` + options_string3 + `<br>
                Input 4:<br>
                ` + options_string4 + `<br>
                Input 5:<br>
                ` + options_string5 + `<br>
      
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                    function slow(jj){
                        
                        elements[jj].click();
                        elements[jj].focus();

                    rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");   
                    
                    if(jj < elements.length){
                        setTimeout(function(){slow(jj+1)},5000)
                    }
                }
            
                slow(0);

                

                },/*delay*/` + currentDelay + `*delayKey);
                
                `;
                    currentDelay = 5;

                } else if (event.data.style == "object") {


                    total_variables++;
                    no_code_variables.push(`_object` + total_variables);
                    no_code_variable_names.push("Object Detection Output " + total_variables)
                    new_code = `

                var delayKey = 1000;
                var objectkey = 'none';
                var _object` + total_variables + ` = 'none';

                setTimeout(function(){
                    var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                    function slow(jj){
                        
                        const result = document.getElementById('result'); // The result tag in the HTML
                    const probability = document.getElementById('probability'); // The probability tag in the HTML
            
                    html2canvas(elements[jj].parentNode, { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
                        document.body.appendChild(canvas);
                              canvas.setAttribute("id", "canvas");
                         var link = document.createElement('img');
                      link.src = document.getElementById('canvas').toDataURL()
// Create a YOLO method
  link.onload = () => {
const yolo = ml5.YOLO(options= modelLoaded);
// When the model is loaded
function modelLoaded() {
  //console.log('Model Loaded!');
// Detect objects in the video element
yolo.detect(link, (err, results) => {
  //console.log(results[0]['label']); // Will output bounding boxes of detected objects
  _object` + total_variables + ` =results[0]['label'];

});
}
}
       });

       if(jj < elements.length){
        setTimeout(function(){slow(jj+1)},5000)
    }
}

slow(0);




                },/*delay*/` + currentDelay + `*delayKey);
                
                
                `;
                    text = `
                Start Code
                CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
                Endpoint: Object Detection<br>
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
               
                var delayKey = 1000;
                var objectkey = 'none';
                var _object` + total_variables + ` = 'none';

                setTimeout(function(){
                    var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                    function slow(jj){
                        
                        
                        const result = document.getElementById('result'); // The result tag in the HTML
                    const probability = document.getElementById('probability'); // The probability tag in the HTML

       html2canvas(elements[jj].parentNode, { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
        document.body.appendChild(canvas);
              canvas.setAttribute("id", "canvas");
         var link = document.createElement('img');
      link.src = document.getElementById('canvas').toDataURL()
// Create a YOLO method
link.onload = () => {
const yolo = ml5.YOLO(options= modelLoaded);
// When the model is loaded
function modelLoaded() {
//console.log('Model Loaded!');
// Detect objects in the video element
yolo.detect(link, (err, results) => {
//console.log(results[0]['label']); // Will output bounding boxes of detected objects
_object` + total_variables + ` =results[0]['label'];

});
}
}
});


if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},5000)
}
}

slow(0);




                },/*delay*/` + currentDelay + `*delayKey);
                
                
                `;
                    currentDelay = 20;

                } else if (event.data.style == "gcal") {

                    // alert('Please note that google is still reviewing our direct API request, so you may be blocked until they complete review. Early users are grandfathered in.')

                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
             
                var element = document.querySelectorAll('` + event.data.cssselector + `');
                google_calendar_append(element.innerText, window.location.href);       
           
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Google Calendar<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
             
                var element = document.querySelectorAll('` + event.data.cssselector + `');
                google_calendar_append(element.innerText, window.location.href);       
           
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "gdocs") {
                    //  alert('Please note that google is still reviewing our direct API request, so you may be blocked until they complete review. Early users are grandfathered in.')


                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='DOCVALUESKEY'>
              `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }
                    options_string += `<option selected="selected" value="elements[jj].innerText">Inner Text</option>`;

                    options_string += `<option value="` + no_code_variables_string + `">` + no_code_variables_string + `</option>`;
                    options_string += `</select>`;
                    new_code = `
            
            var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


            function slow(jj){
                        
                
                google_docs_append('GOOGLE_DOCS_ID',elements[jj].innerText);       
           
            
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},5000)
}
}

slow(0);
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            ID:<br>
            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='DOCIDKEY' value='GOOGLE_DOCS_ID'></input><br>
            Doc Input:<br>
            ` + options_string + `<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    
                    google_docs_append('GOOGLE_DOCS_ID',elements[jj].innerText);
                    
                              
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},5000)
}
}

slow(0);
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "print") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='PRINTKEY'>
                `;
                    options_string += `<option value="href">Link Destination .href</option>`;
                    options_string += `<option value="src">Image source .src</option>`;
                    options_string += `<option value="innerText">Inner Text .innerText</option>`;
                    options_string += `<option selected="selected" value="Custom Attribute">Custom Attribute</option>`;
                    options_string += `</select>`;

                    new_code = `
        
            var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


            function slow(jj){
                            //console.log(elements[jj].innerText);

                                                          
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},500)
}
}

slow(0);
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Web Console<br>
            
    Attribute: <br>
    ` + options_string + `<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
        
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    
                    //console.log(elements[jj].innerText);

                                                                           
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},500)
}
}

slow(0);


            },/*delay*/` + currentDelay + `*delayKey);
            `;
                } else if (event.data.style == "script") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='CODEKEY'>
      `;
                    for (var jj = 0; jj < scripts.length; jj++) {
                        if (scripts[jj]["name"] && scripts[jj]["name"].length > 0 && scripts[jj]["deleted"] != "true") {
                            options_string += `<option value="` + scripts[jj]["name"] + `">` + scripts[jj]["name"] + `</option>`;
                        }
                    }
                    options_string += `</select>`;

                    var options_string2 = `<select class='selectCheat selectBox  select' name="vars" id='RUNONVARSKEY'>
        `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string2 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string2 += `<option selected='selected' value="none">None</option>`;

                    options_string2 += `</select>`;


                    var options_string3 = `<select class='selectCheat selectBox  select' name="vars" id='TABIDKEY'>
        `;
                    if (typeof window.tabs != "undefined") {
                        for (var jj = 0; jj < window.tabs.length; jj++) {

                            options_string3 += `<option value="` + window.tabs[jj]["id"] + `">` + window.tabs[jj]["id"] + ` ( ` + window.tabs[jj]["url"] + `)</option>`;

                        }
                    }
                    options_string3 += `<option selected='selected' value="-1">None</option>`;

                    options_string3 += `</select>`;


                    var options_string4 = `<select class='selectCheat selectBox  select' name="vars" id='TIMEOUTKEY'>
          `;

                    options_string4 += `<option selected='selected' value="30">30 seconds</option>`;
                    options_string4 += `<option value="60">60 seconds</option>`;
                    options_string4 += `<option value="120">120 seconds</option>`;
                    options_string4 += `<option value="300">300 seconds</option>`;
                    options_string4 += `<option value="1500">1500 seconds</option>`;
                    options_string4 += `<option value="300000">300000 seconds</option>`;


                    options_string4 += `</select>`;

                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
                var element = document.querySelectorAll('` + event.data.cssselector + `');
                runOnTab(element.innerText,'SCRIPT_NAME');
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Code:<br>
            ` + options_string + `
            <br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            Timeout: <br>
            ` + options_string4 + `
            <br>
            Tab ID: <br>
            ` + options_string3 + `
            <br>

            New Window: <br><select class='selectCheat selectBox  select'  id='NEWWINDOWKEY' ><option selected='selected' value="false">False</option><option value="true">True</option></select><br>
            
            Pagination URL:<br> <input class='cheatlayer cheat-input' id='PAGINATIONKEY' type="text" value=""></input><br>

            Custom Data: <br>` + options_string2 + `<br>

            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){

                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    
                    runOnTab(elements[jj].href,/*script*/'SCRIPT_NAME',/*timeout*/30,/*options*/{/*id*/id:-1, /*newWindow*/newWindow:false,/*custom1*/data1:"none",/*custom2*/data2:"none",/*custom3*/data3:"none"});

                                                                                 
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},500)
}
}

slow(0);

            },/*delay*/` + currentDelay + `*delayKey);
            `;
                } else if (event.data.style == "click") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
            
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    elements[jj].click();
            
                                                                                 
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},500)
}
}

slow(0);
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Click Element<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
            
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    elements[jj].click();
                                                                                           
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},1000)
}
}

slow(0);
            },/*delay*/` + currentDelay + `*delayKey);
            `;
                } else if (event.data.style == "variable") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='VARIABLEATTRKEY'>
            `;
                    options_string += `<option value="innerText">Inner Text .innerText</option>`;
                    options_string += `<option value="URL">Page URL</option>`;

                    options_string += `<option value="href">Link Destination .href</option>`;
                    options_string += `<option value="src">Image source .src</option>`;
                    options_string += `<option selected="selected" value="Custom Attribute">Custom Attribute</option>`;

                    options_string += `</select>`;


                    total_variables++;

                    no_code_variables.push(`_variable` + total_variables);
                    no_code_variable_names.push("Saved Variable " + total_variables)

                    new_code = `
            var _variable` + total_variables + ` = 'none';
            var delayKey = 1000;
            setTimeout(function(){
            
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    
                    _var` + total_variables + ` = elements[jj].innerText;
                                                                                          
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},1000)
}
}

slow(0);


            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Variable Name: <br>_variable` + total_variables + `<br>
            Endpoint : Variable<br>
            Attribute:<br>
            ` + options_string + `<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var _variable` + total_variables + ` = 'none';
            var delayKey = 1000;
            setTimeout(function(){
            
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){

            _variable` + total_variables + ` = /*attribute*/elements[jj].innerText;
            if(typeof cheat_data == 'undefined'){
                cheat_data = {}
            }
        
  
            if("_variable` + total_variables + `"  + "_" + window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"") in cheat_data){
                cheat_data["_variable` + total_variables + `"  + "_" + window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"")].push(elements[jj].innerText);

            }else{
            cheat_data["_variable` + total_variables + `"   + "_" + window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"")] = /*attribute*/[elements[jj].innerText];
            }
       function storeUserPrefs() {
                var key = "cheatlayer"
                 //console.log(cheat_data)

                 var out_obj = JSON.parse(\`` + JSON.stringify(storage_json) + `\`);
                 out_obj[window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"")] = cheat_data;
                 var testPrefs = JSON.stringify(out_obj);                var jsonfile = {};
                jsonfile[key] = testPrefs;
                chrome.storage.sync.set(jsonfile, function () {
                    //console.log('Saved', key, testPrefs);
                });
            
            }
            storeUserPrefs();
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},1000)
}
}

slow(0);

            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "input") {
                    var input_val = 'TEST_VALUE';


                    if (typeof window.data != 'undefined' && window.data && window.data.length > 0) {
                        input_val = window.data[inputCounter++];
                    }
                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='INPUTKEY'>
            `;

                    if (selected_element.nodeName == 'SELECT') {
                        for (var kk = 0; kk < selected_element.options.length; kk++) {

                            options_string += `<option value="` + selected_element.options[kk].value + `">` + selected_element.options[kk].text + `</option>`;

                        }
                    }
                    if (typeof window.API != 'undefined') {
                        //console.log('window.API')

                        //console.log(window.API)
                        //console.log(JSON.flatten(window.API))
                        var flat = JSON.flatten(window.API);

                        for (var key in flat) {
                            if (flat.hasOwnProperty(key)) {
                                //console.log(key + " -> " + flat[key]);
                                options_string += `<option value="'` + flat[key] + `'">` + key + ` : ` + flat[key] + `</option>`;

                            }
                        }

                    }
                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }


                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    options_string += `<option selected="selected" value="">None</option>`;

                    options_string += `<option value="Custom">Custom</option>`;

                    options_string += `</select>`;
                    new_code = `
        
            var delayKey = 1000;
            setTimeout(function(){
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    
                    elements[jj].value = '` + input_val + `';
                    
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},1000)
}
}

slow(0);


            }, /*delay*/` + currentDelay + `*delayKey);
            
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Input<br>
            ` + options_string + `
            <br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    
                    elements[jj].value = '` + input_val + `';
                    
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},1000)
}
}

slow(0);


            }, /*delay*/` + currentDelay + `*delayKey);

            `;
                } else if (event.data.style == "download") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
            
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    
                    if(elements[jj].src){
                    downloadFile(elements[jj].src);
                   }else if(elements[jj].href){
                    downloadFile(elements[jj].href);
                }else{
                    downloadFile(elements[jj].innerText);

                }
                       
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},1000)
}
}

slow(0);
     
            }, /*delay*/` + currentDelay + `*delayKey);
            
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Download File<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
            
 
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    
                    if(elements[jj].src){
                    downloadFile(elements[jj].src);
                   }else if(elements[jj].href){
                    downloadFile(elements[jj].href);
                }else{
                    downloadFile(elements[jj].innerText);

                }
          
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},1000)
}
}

slow(0);
     
     
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "innerText") {
                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='INNERTEXTKEY'>
            `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }
                    options_string += `<option value="` + no_code_variables_string + `">` + no_code_variables_string + `</option>`;
                    options_string += `</select>`;



                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){

                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    elements[jj].innerText = 'TEST_VALUE';

                                 
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},1000)
}
}

slow(0);


        
            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Inner Text<br> 
            ` + options_string + `
            <br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    elements[jj].innerText = 'TEST_VALUE';
                                    
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},1000)
}
}

slow(0);
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "keypress") {
                    //console.log("try storage");

                    //console.log(storage_vars);


                    var options_string = `<select  class='selectCheat selectBox  select' name="vars" id='KEYPRESSKEY'>
            `;
                    if (typeof window.API != 'undefined') {
                        //console.log('window.API')

                        //console.log(window.API)
                        //console.log(JSON.flatten(window.API))
                        var flat = JSON.flatten(window.API);

                        for (var key in flat) {
                            if (flat.hasOwnProperty(key)) {
                                //console.log(key + " -> " + flat[key]);
                                options_string += `<option value="'` + flat[key] + `'">` + key + ` : ` + flat[key] + `</option>`;

                            }
                        }

                    }
                    //console.log(storage_vars)

                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ',' + storage_vars[jj];
                        }
                    }
                    for (var jj = 0; jj < input_vars.length; jj++) {
                        if (input_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + input_vars[jj] + `">` + input_vars[jj] + `</option>`;
                        }
                    }
                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }


                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            //  //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }


                    options_string += `<option selected="selected" value="">None</option>`;

                    options_string += `<option value="Custom">Custom</option>`;
                    options_string += `<option value="Webhook">Webhook</option>`;

                    options_string += `</select>`;

                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    
                    elements[jj].click();
                    var newData = CSVToArray(window.data);
                    elements[jj].dispatchEvent(new Event('focus'));
                    elements[jj].focus();
                    simulateKey('a');        

                                            
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},5000)
}
}

slow(0);
            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            Endpoint : Keypress<br> ` + options_string + `<br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    
                    elements[jj].click();
                    var newData = CSVToArray(window.data);
                    elements[jj].dispatchEvent(new Event('focus'));
                    elements[jj].focus();
                    simulateKey('a');        
                                                 
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},5000)
}
}

slow(0);


            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "hover") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    
                    elements[jj].dispatchEvent(new MouseEvent('mouseover', { 'view': window, 'bubbles': true, 'cancelable': true }));
                                         
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},500)
}
}

slow(0);

            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Hover<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){
                    
                    elements[jj].dispatchEvent(new MouseEvent('mouseover', { 'view': window, 'bubbles': true, 'cancelable': true }));
                                               
if(jj < elements.length){
    setTimeout(function(){slow(jj+1)},500)
}
}

slow(0);
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "screenshot") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){ 
                    html2canvas(elements[jj], { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
                        document.body.appendChild(canvas);
                              canvas.setAttribute("id", "canvas");
                         var link = document.createElement('a');
                      link.download = 'webpage.png';
                      link.href = document.getElementById('canvas').toDataURL()
                      link.click();
                    
                    });
                    if(jj < elements.length){
                        setTimeout(function(){slow(jj+1)},500)
                    }
                    }
                    
                    slow(0);
            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Screenshot<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){ 
                    html2canvas(elements[jj], { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
                        document.body.appendChild(canvas);
                              canvas.setAttribute("id", "canvas");
                         var link = document.createElement('a');
                      link.download = 'webpage.png';
                      link.href = document.getElementById('canvas').toDataURL()
                      link.click();
                    
                    });
                    if(jj < elements.length){
                        setTimeout(function(){slow(jj+1)},500)
                    }
                    }
                    
                    slow(0);
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "forward") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
                window.history.forward();
            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            Endpoint : Go Forward<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                window.history.forward();
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "back") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
                window.history.back()
                }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            Endpoint : Go Back<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                window.history.back()
              }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "scroll") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){ 
                    elements[jj].scrollTop = elements[jj].scrollHeight;
                                if(jj < elements.length){
                                    setTimeout(function(){slow(jj+1)},500)
                                }
                                }
                                
                                slow(0);
            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Scroll<br>
            Delay: <br><input class='cheatlayer cheat-input'   style='background-color:white; color:black'type="text" id='DELAYKEY'  style='background-color:white; color:black'type="text" value="` + currentDelay + `"></input><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var elements = document.querySelectorAll('` + event.data.cssselector + `');
                


                function slow(jj){ 
                    
                    elements[jj].scrollTop = elements[jj].scrollHeight;
                    if(jj < elements.length){
                        setTimeout(function(){slow(jj+1)},500)
                    }
                    }
                    
                    slow(0);
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                }



            } else if (selector_type == "useelement") {
                /*
                
                
                */





                if (event.data.style == "excel") {

                    new_code = `
      
    //endcode
    const workbook = new ExcelJS.Workbook();
    
    
    const worksheet = workbook.addWorksheet('New Sheet');
    //console.log(cheat_data)
    //console.log()
    var columns = [
    ];
    var keys = Object.keys(cheat_data);
    for(var kk = 0; kk < keys.length; kk++){
        columns.push({header:keys[kk], key:keys[kk]})
        
    }
    worksheet.columns = columns;
    //console.log("Rows")
    //console.log(cheat_data[keys[0]])
    for(var kk = 0; kk < cheat_data[keys[0]].length; kk++){
    var data = {}
    
    for(var jj = 0; jj < keys.length; jj++){
        data[keys[jj]] = cheat_data[keys[jj]][kk]
    }
        const row = worksheet.addRow(data);
    
    }
    
    workbook.xlsx.writeBuffer().then((data) => {
      const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8' });
      saveAs(blob, 'test.xlsx');
    });//Generated Script id=1//Generated Script id=
    
        `;
                    text = `
        Start Code
        Endpoint : Excel File<br> 
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
       
        End Code
        var delayKey = 1000;
            setTimeout(function(){
     
    //endcode
    const workbook = new ExcelJS.Workbook();
    
    
    const worksheet = workbook.addWorksheet('New Sheet');
    //console.log(cheat_data)
    //console.log()
    var columns = [
    ];
    var keys = Object.keys(cheat_data);
    for(var kk = 0; kk < keys.length; kk++){
        columns.push({header:keys[kk], key:keys[kk]})
        
    }
    worksheet.columns = columns;
    //console.log("Rows")
    //console.log(cheat_data[keys[0]])
    for(var kk = 0; kk < cheat_data[keys[0]].length; kk++){
    var data = {}
    
    for(var jj = 0; jj < keys.length; jj++){
        data[keys[jj]] = cheat_data[keys[jj]][kk]
    }
        const row = worksheet.addRow(data);
    
    }
    
    workbook.xlsx.writeBuffer().then((data) => {
      const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8' });
      saveAs(blob, 'test.xlsx');
    });//Generated Script id=1//Generated Script id=
    
            },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "rss") {

                    $('HTML').append(`
    
            <div id="getDataMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
            
            <div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:40%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
            <center><h1 style="color:black !important;">RSS Feed Input</h1><br>
            Please enter the RSS URL:<br>
            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='sheet_input_url'  value=''></input><br>
            
            <button style='background-color:white;color:black;' id='saveSheetURL'>Save</button>
            <button style='background-color:white;color:black;' id='cancelSheetURL'>Cancel</button><br>
            
            </center>
            </div>
            
            
            </div>
            `);
                    document.getElementById('cancelSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";
                    };


                    document.getElementById('saveSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";


                        var sheet_url = document.getElementById('sheet_input_url').value;
                        getXML(sheet_url, `
                window.data = data;
                //console.log(data);
                `);

                        new_code = `
                var delayKey = 1000;
    setTimeout(function(){
        getXML('` + sheet_url + `', \`
        window.data = data;
        \`);         
        //console.log(window.data);       
    },/*delay*/` + currentDelay + `*delayKey);
    
                `;
                        text = `
                Start Code
                Endpoint : RSS Input<br> 
                RSS URL:<br>
                <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='RSSURLKEY'  value='` + sheet_url + `'></input><br>
    
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
    setTimeout(function(){
        getXML('` + sheet_url + `', \`
        window.data = data;
        /*startCheat*/
        /*stopCheat*/
        \`);       
        //console.log(window.data);       
    },/*delay*/` + currentDelay + `*delayKey);
                `;

                        var icon_code = '';
                        old_code = window.editor.getValue();

                        if (text.includes("End Code")) {
                            code = text.split("End Code")[1];
                            no_code = text.split("End Code")[0];
                        } else {
                            code = text;
                        }





                        var img_src = "https://cheatlayer.com/icon2.png";
                        var Title = "";
                        //Tesseract

                        img_src = chrome.runtime.getURL("rss.png");
                        Title += "RSS</h2>";


                        no_code = no_code.split("textarea").join("textarea style='width:100%'");
                        no_code = no_code.split(".getAttribute('innerText')").join(".innerText");

                        //.getAttribute('innerText') 

                        icon_code += '<h2 class="cheatlayer"style="color:black;"><img style="margin:20px;pointer-events: none;background-color:#FFFFFF;width:50px;height:50px;border-radius:10px;border:1px solid black;padding:5px;margin:5px;" src=\"';
                        icon_code += img_src;
                        icon_code += '\"></img> ' + Title;

                        no_code = icon_code + "" + no_code + "";
                        (no_code.split('SELECTORKEY'));
                        no_code = no_code.split('SELECTORKEY').join('SELECTORKEY' + code_ids);
                        no_code = no_code.split('XPATHKEY').join('XPATHKEY' + code_ids);
                        no_code = no_code.split('CSSKEY').join('CSSKEY' + code_ids);
                        no_code = no_code.split('ELEMENTSELECTKEY').join('ELEMENTSELECTKEY' + code_ids);

                        no_code = no_code.split('DELAYKEY').join('DELAYKEY' + code_ids);
                        no_code = no_code.split('KEYPRESSKEY').join('KEYPRESSKEY' + code_ids);
                        no_code = no_code.split('PRINTKEY').join('PRINTKEY' + code_ids);

                        no_code = no_code.split('REMOVEKEY').join('REMOVEKEY' + code_ids);
                        no_code = no_code.split('VARIABLEKEY').join('VARIABLEKEY' + code_ids);

                        no_code = no_code.split('VALUEKEY').join('VALUEKEY' + code_ids);
                        no_code = no_code.split('INPUTKEY').join('INPUTKEY' + code_ids);
                        no_code = no_code.split('INNERTEXTKEY').join('INNERTEXTKEY' + code_ids);

                        no_code = no_code.split('TIMERKEY').join('TIMERKEY' + code_ids);
                        no_code = no_code.split('LOCATIONKEY').join('LOCATIONKEY' + code_ids);
                        no_code = no_code.split('ELEMENTKEY').join('ELEMENTKEY' + code_ids);
                        no_code = no_code.split('CODEKEY').join('CODEKEY' + code_ids);
                        no_code = no_code.split('CODEGETDATA').join('CODEGETDATA' + code_ids);

                        no_code = no_code.split('Start Code').join('');
                        //  no_code = no_code.split('//').join('');
                        no_code = no_code.split('SHEETURLKEY').join('SHEETKEY' + code_ids);
                        no_code = no_code.split('SHEETIDKEY').join('SHEETIDKEY' + code_ids);
                        no_code = no_code.split('DOCIDKEY').join('DOCIDKEY' + code_ids);
                        no_code = no_code.split('DOCVALUESKEY').join('DOCVALUESKEY' + code_ids);
                        no_code = no_code.split('GMAILVALUEKEY').join('GMAILVALUEKEY' + code_ids);

                        no_code = no_code.split('SHEETVALUESKEY').join('SHEETVALUESKEY' + code_ids);
                        no_code = no_code.split('SHEETNAMEKEY').join('SHEETNAMEKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKURLKEY').join('WEBHOOKURLKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKDATAKEY').join('WEBHOOKDATAKEY' + code_ids);
                        no_code = no_code.split('CSVURLKEY').join('CSVURLKEY' + code_ids);
                        no_code = no_code.split('RIKUNAME').join('RIKUNAME' + code_ids);
                        no_code = no_code.split('RIKUAPIKEY').join('RIKUAPIKEY' + code_ids);
                        no_code = no_code.split('PROMPTKEY').join('PROMPTKEY' + code_ids);
                        no_code = no_code.split('GPT3KEY').join('GPT3KEY' + code_ids);

                        no_code = no_code.split('RIKUINPUT5KEY').join('RIKUINPUT5KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT4KEY').join('RIKUINPUT4KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT1KEY').join('RIKUINPUT1KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT2KEY').join('RIKUINPUT2KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT3KEY').join('RIKUINPUT3KEY' + code_ids);
                        no_code = no_code.split('TIMEOUTKEY').join('TIMEOUTKEY' + code_ids);
                        no_code = no_code.split('TABIDKEY').join('TABIDKEY' + code_ids);
                        no_code = no_code.split('NEWWINDOWKEY').join('NEWWINDOWKEY' + code_ids);
                        no_code = no_code.split('RUNONVARSKEY').join('RUNONVARSKEY' + code_ids);
                        no_code = no_code.split('PAGINATIONKEY').join('PAGINATIONKEY' + code_ids);

                        no_code_container.push({ selector: selector_type, options: options_array, code_ids: code_ids, variablenames: no_code_variable_names, variables: no_code_variables.join(','), style: event.data.style, id: code_ids, no_code: no_code });


                        //document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
                        //document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
                        //document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;
                        drawNoCodeContainer();

                        //googleSignIn


                        window.editor.setValue(old_code + "\n//Generated Script id=" + code_ids + "\n" + new_code + "\n//endcode\n");
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        $(document).on('click', '#googleSignIn', function () {
                            SendMessage("GoogleSignIn", "GoogleSignIn", "event.data");


                        });
                        if (typeof window.editor != 'undefined') {
                            var added_code = "//Generated Script id=" + code_ids;
                            added_code += code;
                            window.editor.setValue(old_code + added_code + "\n//endcode");
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                            document.getElementById('cheatmenu').style.display = 'block';

                        }
                        window.editor.resize();
                        code_ids += 1;
                        currentDelay = 3;

                    };




                } else if (event.data.style == "gmail") {
                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='GMAILVALUEKEY'>
            `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ` + ' ' + ` + no_code_container[jj]["variables"];
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ` + ' ' + ` + storage_vars[jj];
                        }
                    }
                    options_string += `<option value="element.src">Image Source</option>`;
                    options_string += `<option value="element.href">Link Destination</option>`;
                    if (no_code_variables_string.length > 0) {
                        options_string += `<option  value="element.innerText + ' ' + ` + no_code_variables_string + `">elements.innerText + ' ' + ` + no_code_variables_string + `</option>`;

                        options_string += `<option  selected='selected'  value="element.innerText">Inner Text</option>`;
                    } else {
                        options_string += `<option  selected='selected' value="element.innerText">Inner Text element.innerText</option>`;
                    }
                    options_string += `</select>`;


                    new_code = `
     
        var delayKey = 1000;
            setTimeout(function(){
                var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                for(var hh = 0; hh < elements.length; hh++){
                
                 var to = '` + user_email + `';
                 var subject = 'Cheat Layer Automation Alert';
                 var body = elements[hh].innerText;
                var gmailURL = 'https://mail.google.com/mail/u/0/?fs=1&to=' +to + '&su=' + subject + '&body=' +body + '&tf=cm';
          
                    var timeout = 30;
                    var script = \`//Generated Script id=0
                    var delayKey = 1000;
                    setTimeout(function(){
                    var elements = document.getElementsByTagName('DIV');
                    function slow(kk){
                     if(typeof elements[kk] != 'undefined' && elements[kk].getAttribute('id') && elements[kk].getAttribute('id').indexOf(":oz") >= 0){
                            elements[kk].click();
                            if(kk < elements.length){
                                setTimeout(function(){slow(kk+1)},10000);
                            }
                        }else{
                            if(kk < elements.length){
                                setTimeout(function(){slow(kk+1)},1);
                            }
                        }
                    }
                    slow(0);
                    },/*delay*/1*delayKey);\`;
    
                runOnTab(gmailURL, script, 30, {newWindow:true, id:-1})
    
                }
            },/*delay*/` + currentDelay + `*delayKey);
        `;
                    text = `
        Start Code
        Endpoint : Gmail<br> 
        
        Body: <br>
    ` + options_string + `
    
        <br>
    
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
       
        End Code
        var delayKey = 1000;
            setTimeout(function(){
                var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);
                for(var hh = 0; hh < elements.length; hh++){

                 var to = '` + user_email + `';
                 var subject = 'Cheat Layer Automation Alert';
                 var body = elements[hh].innerText;
                var gmailURL = 'https://mail.google.com/mail/u/0/?fs=1&to=' +to + '&su=' + subject + '&body=' +body + '&tf=cm';
          
                    var timeout = 30;
                    var script = \`//Generated Script id=0
                    var delayKey = 1000;
                    setTimeout(function(){
                    var elements = document.getElementsByTagName('DIV');
                    function slow(kk){
                     if(typeof elements[kk] != 'undefined' && elements[kk].getAttribute('id') && elements[kk].getAttribute('id').indexOf(":oz") >= 0){
                            elements[kk].click();
                            if(kk < elements.length){
                                setTimeout(function(){slow(kk+1)},10000);
                            }
                        }else{
                            if(kk < elements.length){
                                setTimeout(function(){slow(kk+1)},1);
                            }
                        }
                    }
                    slow(0);
                    },/*delay*/1*delayKey);\`;
    
                runOnTab(gmailURL, script, 30, {newWindow:true, id:-1})
                }
    
            },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "filter") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='FILTERINPKEY'>
            `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ',' + storage_vars[jj];
                        }
                    }
                    options_string += `<option value="element.src">Image Source</option>`;
                    options_string += `<option value="element.href">Link Destination</option>`;

                    options_string += `<option  selected='selected' value="element.innerText">Inner Text element.innerText</option>`;

                    options_string += `</select>`;


                    new_code = `
        var delayKey = 1000;
        setTimeout(function(){
        /*start filter code*/
        /*end filter code*/
    
        },/*delay*/` + currentDelay + `*delayKey);
        `;
                    text = `
        Start Code
        Endpoint : Filter<br> 
        
        Filter Operations:<br> <select class='selectCheat selectBox  select' name="vars" id='FILTEROPKEY'>
        <option value='regex'>Regex Filter</option>
        <option selected="selected" value='contains'>Contains</option>
        <option value='notcontains'>Does Not Contain</option>
        <option value='less'>Less Than</option>
        <option value='greater'>Greater Than</option>
        <option value='dateless'>Date Less Than</option>
        <option value='dategreater'>Date Greater Than</option>
        <option value='matches'>Matches</option>
    
        </select>
        Value: <br><input class='cheatlayer cheat-input'style='background-color:white; color:black' type="text" id='FILTERVALKEY'  style='background-color:white; color:black'type="text" value=""></input><br>
        
        <br>
        Variable: <br>
    ` + options_string + `
    
        <br>
    
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
       
        End Code
        var delayKey = 1000;
            setTimeout(function(){
            /*start filter code*/
            /*end filter code*/
    
            },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "OCR") {

                    new_code = `
        
        var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

        for(var jj  = 0; jj < elements.length; jj++){
        OCR(elements[jj]);
        }
    
        `;
                    text = `
        Start Code
        Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTSELECTKEY' type="text" value='` + selected_element.nodeName + `'></input><br>
        Endpoint : OCR Image To Text<br> 
        <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='SHEETVALUESKEY' value='element.innerText` + no_code_variables_string + `'></input><br>
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
       
        End Code
        var delayKey = 1000;
            setTimeout(function(){
                var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                for(var jj  = 0; jj < elements.length; jj++){    
            OCR(elements[jj]);
                }
            },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "pdf") {

                    total_variables++;
                    no_code_variables.push(`_pdf` + total_variables);
                    no_code_variable_names.push("PDF Output " + total_variables)
                    new_code = `
        
        var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);
        //Generated Script id=0
    
        function gettext(pdfUrl){
          var pdf = pdfjsLib.getDocument(pdfUrl);
          //console.log(pdf);
          return pdf.promise.then(function(pdf) { // get all pages text
            //console.log(pdf)
            var maxPages = pdf._pdfInfo.numPages;
            var countPromises = []; // collecting all page promises
            for (var j = 1; j <= maxPages; j++) {
              var page = pdf.getPage(j);
        
              var txt = "";
              countPromises.push(page.then(function(page) { // add page promise
                var textContent = page.getTextContent();
                return textContent.then(function(text){ // return content promise
                  return text.items.map(function (s) { return s.str; }).join(''); // value page text 
                });
              }));
            }
            // Wait for all pages and join text
            return Promise.all(countPromises).then(function (texts) {
              return texts.join('');
            });
          });
        }
            pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.15.349/build/pdf.worker.js';
         
            for(var jj  = 0; jj < elements.length; jj++){

            
        // waiting on gettext to finish completion, or error
        gettext(elements[jj].href).then(function (text) {
          //console.log('parse ' + text); 
          window.pdf = text; 
        }, 
        function (reason) {
          console.error(reason);
        });     
    }


    
        `;
                    text = `
        Start Code
        Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTSELECTKEY' type="text" value='` + selected_element.nodeName + `'></input><br>
        Endpoint : PDF To Text<br> 
        <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PDFKEY' value='element.href'></input><br>
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
       
        End Code
        var delayKey = 1000;
            setTimeout(function(){
                var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);
    
            function gettext(pdfUrl){
                var pdf = pdfjsLib.getDocument(pdfUrl);
                //console.log(pdf);
                return pdf.promise.then(function(pdf) { // get all pages text
                  //console.log(pdf)
                  var maxPages = pdf._pdfInfo.numPages;
                  var countPromises = []; // collecting all page promises
                  for (var j = 1; j <= maxPages; j++) {
                    var page = pdf.getPage(j);
              
                    var txt = "";
                    countPromises.push(page.then(function(page) { // add page promise
                      var textContent = page.getTextContent();
                      return textContent.then(function(text){ // return content promise
                        return text.items.map(function (s) { return s.str; }).join(''); // value page text 
                      });
                    }));
                  }
                  // Wait for all pages and join text
                  return Promise.all(countPromises).then(function (texts) {
                    return texts.join('');
                  });
                });
              }
                  pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.15.349/build/pdf.worker.js';
                  for(var jj  = 0; jj < elements.length; jj++){

              // waiting on gettext to finish completion, or error
              gettext(elements[jj].href).then(function (text) {
                //console.log('parse ' + text); 
                window.pdf = text; 
              }, 
              function (reason) {
                console.error(reason);
              });

            }
            },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "gsheets") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='SHEETVALUESKEY'>
            `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ',' + storage_vars[jj];
                        }
                    }
                    options_string += `<option value="element.src">Image Source</option>`;
                    options_string += `<option value="element.href">Link Destination</option>`;
                    if (no_code_variables_string.length > 0) {
                        options_string += `<option  selected='selected' value="element.innerText` + no_code_variables_string + `">Inner Text element.innerText` + no_code_variables_string + `</option>`;
                        options_string += `<option  value="element.innerText">Inner Text</option>`;
                    } else {
                        options_string += `<option  selected='selected' value="element.innerText">Inner Text element.innerText</option>`;
                    }
                    options_string += `</select>`;
                    //        alert('Please note that google is still reviewing our direct API request, so you may be blocked until they complete review. Early users are grandfathered in.')

                    new_code = `
            
            var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);
            for(var jj  = 0; jj < elements.length; jj++){


            google_sheets_add_row('GOOGLE_SHEETS_ID',/*name*/'Sheet1',[elements[jj].innerText` + no_code_variables_string + `]);       
            }
            `;
                    text = `
            Start Code
            Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTSELECTKEY' type="text" value='` + selected_element.nodeName + `'></input><br>
            Endpoint: Google Sheets<br>
            URL:<br>
            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='SHEETIDKEY' value='GOOGLE_SHEETS_ID'></input><br>
            Sheet Name:<br>
            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='SHEETNAMEKEY'  value='Sheet1'></input><br>
            Sheet Values:<br>
            ` + options_string + `<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
           
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);
                for(var jj  = 0; jj < elements.length; jj++){
                google_sheets_add_row('GOOGLE_SHEETS_ID',/*name*/'Sheet1',[elements[jj].innerText` + no_code_variables_string + `]);     
                }  
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;

                } else if (event.data.style == "sentiment") {
                    currentDelay = 10;

                    new_code = `
                var delayKey = 1000;
                var sentimentkey = 'none';
                var  sentiment = ml5.sentiment('movieReviews', modelReady);
    
                function modelReady() {
    
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);
                    for(var jj  = 0; jj < elements.length; jj++){

                        // model is ready
                    var prediction = sentiment.predict(elements[jj].innerText);
               
                    var output = parseFloat(prediction.score) > 0.5 ? 'positive' : 'negative';
                    //console.log(prediction.score + ' ' + output);
                    sentimentkey = prediction.score + ' ' + output;
                    
                }  

                    
                    
                    
                    
                    
                },/*delay*/` + currentDelay + `*delayKey);
                }
                
                
                `;
                    text = `
                Start Code
                Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTSELECTKEY' type="text" value='` + selected_element.nodeName + `'></input><br>
                Endpoint: Sentiment Analysis <br> 
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                var sentimentkey = 'none';
                var  sentiment = ml5.sentiment('movieReviews', modelReady);
    
                function modelReady() {
    
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);
                    for(var jj  = 0; jj < elements.length; jj++){

                        // model is ready
                    var prediction = sentiment.predict(elements[jj].innerText);
                    //console.log(prediction.score + ' ' + prediction.score > .5 ? 'positive' : 'negative');
                    sentimentkey = prediction.score + ' ' + prediction.score > .5 ? 'positive' : 'negative';
                        
                    
                    }
                    
                    
                    
                    
                },/*delay*/` + currentDelay + `*delayKey);
                }
                
                `;
                } else if (event.data.style == "object") {
                    total_variables++;
                    no_code_variables.push(`_object` + total_variables);
                    no_code_variable_names.push("Object Detection Output " + total_variables)


                    new_code = `
                    var _object` + total_variables + ` = 'none';
    
                    var delayKey = 1000;
                    var objectkey = 'none';
                    setTimeout(function(){

                        var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);
                        for(var jj  = 0; jj < elements.length; jj++){


                            const result = document.getElementById('result'); // The result tag in the HTML
                        const probability = document.getElementById('probability'); // The probability tag in the HTML
                            
           html2canvas(elements[jj].parentNode, { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
            document.body.appendChild(canvas);
                  canvas.setAttribute("id", "canvas");
             var link = document.createElement('img');
          link.src = document.getElementById('canvas').toDataURL()
    // Create a YOLO method
    link.onload = () => {
    const yolo = ml5.YOLO(options= modelLoaded);
    // When the model is loaded
    function modelLoaded() {
    //console.log('Model Loaded!');
    // Detect objects in the video element
    yolo.detect(link, (err, results) => {
    //console.log(results[0]['label']); // Will output bounding boxes of detected objects
    _object` + total_variables + ` =results[0]['label'];
    });
    }
    }
    });

}
                    },/*delay*/` + currentDelay + `*delayKey);
                    
                    `;
                    text = `
                    Start Code
                    Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTSELECTKEY' type="text" value='` + selected_element.nodeName + `'></input><br>
                    Endpoint: Object Detection <br> 
                    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                    End Code
                    var delayKey = 1000;
                    var objectkey = 'none';
                    var _object` + total_variables + ` = 'none';
    
                    setTimeout(function(){




                        var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);
                        for(var jj  = 0; jj < elements.length; jj++){


                            const result = document.getElementById('result'); // The result tag in the HTML
                        const probability = document.getElementById('probability'); // The probability tag in the HTML
      
           html2canvas(elements[jj].parentNode, { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
            document.body.appendChild(canvas);
                  canvas.setAttribute("id", "canvas");
             var link = document.createElement('img');
          link.src = document.getElementById('canvas').toDataURL()
    // Create a YOLO method
    link.onload = () => {
    const yolo = ml5.YOLO(options= modelLoaded);
    // When the model is loaded
    function modelLoaded() {
    //console.log('Model Loaded!');
    // Detect objects in the video element
    yolo.detect(link, (err, results) => {
    //console.log(results[0]['label']); // Will output bounding boxes of detected objects
    _object` + total_variables + ` =results[0]['label'];
    
    });
    }
    }
    });

}
                    },/*delay*/` + currentDelay + `*delayKey);
                    
                    `;
                    currentDelay = 20;

                } else if (event.data.style == "riku") {
                    no_code_variables.push(`riku[riku.length -1]`);
                    no_code_variable_names.push("Riku.ai Last Output ")

                    riku_variables++;

                    var options_string1 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT1KEY'>
                        `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string1 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string1 += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                        }
                    }

                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string1 += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string1 += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string1 += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string1 += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    options_string1 += `<option selected="selected" value="">None</option>`;

                    options_string1 += `<option value="Custom">Custom Input</option>`;
                    options_string1 += `</select>`;

                    var options_string2 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT2KEY'>
                          `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string2 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string2 += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                        }
                    }
                    options_string2 += `<option selected="selected" value="">None</option>`;

                    options_string2 += `<option value="Custom">Custom Input</option>`;
                    options_string2 += `</select>`;


                    var options_string3 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT3KEY'>
                            `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string3 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string3 += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                        }
                    }
                    options_string3 += `<option selected="selected" value="">None</option>`;

                    options_string3 += `<option value="Custom">Custom Input</option>`;
                    options_string3 += `</select>`;


                    var options_string4 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT4KEY'>
                              `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string4 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string4 += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                        }
                    }
                    options_string4 += `<option selected="selected" value="">None</option>`;

                    options_string4 += `<option value="Custom">Custom Input</option>`;
                    options_string4 += `</select>`;


                    var options_string5 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT5KEY'>
                                `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string5 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string5 += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                        }
                    }
                    options_string5 += `<option selected="selected" value="">None</option>`;

                    options_string5 += `<option value="Custom">Custom Input</option>`;
                    options_string5 += `</select>`;



                    new_code = `
                        
                        var delayKey = 1000;
                        setTimeout(function(){

                            var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                            function slow(jj){

                            elements[jj].focus();
    
                            rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");     
                            
                                if(jj < elements.length){
                                    setTimeout(function(){slow(jj+1)},10000)
                                }

                            }
                            slow(jj)
                        },/*delay*/` + currentDelay + `*delayKey);
            
            
                        `;
                    text = `
                        Start Code
                        Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTSELECTKEY' type="text" value='` + selected_element.nodeName + `'></input><br>
                        Endpoint : Google Sheets<br> 
                        Account Holder name:<br>
                        <input class='cheatlayer cheat-input' id='RIKUNAME' width='174px' style='background-color:white; color:black;width:174px !important;' value='Account'></input><br>
                        
                        API KEY:<br>
                        <input class='cheatlayer cheat-input' id='RIKUAPIKEY' width='174px' style='background-color:white; color:black;width:174px !important;' value='API_KEY'></input><br>
                        Prompt ID:<br>
                        <input class='cheatlayer cheat-input' id='PROMPTKEY' width='174px' style='background-color:white; color:black;width:174px !important;' value='PROMPT_ID'></input><br>
                        Input 1:<br>
                        ` + options_string1 + `<br>
                        Input 2:<br>
                        ` + options_string2 + `<br>
                        Input 3:<br>
                        ` + options_string3 + `<br>
                        Input 4:<br>
                        ` + options_string4 + `<br>
                        Input 5:<br>
                        ` + options_string5 + `<br>
                        
                        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                        End Code
                        var delayKey = 1000;
                        setTimeout(function(){
                            var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                            function slow(jj){
                                
                                elements[jj].click();
                                elements[jj].focus();
    
                            rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/""); 

                            if(jj < elements.length){
                                setTimeout(function(){slow(jj+1)},10000)
                            }
                            }  
                            slow(0)    
                        },/*delay*/` + currentDelay + `*delayKey);
                        
                        `;
                    currentDelay = 5;

                } else if (event.data.style == "webhook") {

                    var options_arr = [];
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_arr.push(no_code_container[jj]["variables"])
                        }
                    }
                    options_arr.push("element.src")
                    options_arr.push("element.href")

                    options_arr.push("custom")

                    $('HTML').append(`
            
                          <div id="wizardMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
                          
                          <div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:40%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
                          <center><h1 style="color:black !important;">API Wizard</h1><br>
                          WebhookURL:<br>
                          <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='api_wizard_url'  value=''></input><br>
                          Request Type:<br>
                          <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='api_wizard_type'  value='POST'></input><br>
                          Headers {<div id='header_wiz'></div>}<br>
                          Body {<div id='body_wiz'></div>}<br>
            
                          <button style='background-color:white;color:black;' id='addWizardBody'>Add Body Data</button><br>
                          <button style='background-color:white;color:black;' id='addWizardHeader'>Add Header</button><br>
            
                          <button style='background-color:white;color:black;' id='saveWizard'>Save</button><br>
                          <button style='background-color:white;color:black;' id='cancelWizard'>Cancel</button><br><br>
                          
                          </center>
                          </div>
                          
                          
                          </div>
                          `);
                    var header_count = 0;
                    var body_count = 0;
                    var headers = {};
                    var bodies = {};

                    document.getElementById('addWizardHeader').onclick = function () {
                        $('#header_wiz').append(`<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='header_wiz_keys` + header_count + `'  value='key'></input> : 
                                      <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='header_wiz_values` + header_count + `'  value='value'></input><br>`)

                        //  options_array.push({"title":'Header Key 1', "id":'WEBHOOKHEADERKEY' + header_count + '_' + code_ids, "value":header_key, "type":'text'})
                        // options_array.push({"title":'Header Data 1', "id":'WEBHOOKHEADERDATAKEY' +header_count + '_' + code_ids, "value":header_val, "type":'text'})
                        //    headers[header_key] = header_val;

                        header_count++;

                    };


                    document.getElementById('addWizardBody').onclick = function () {
                        //  options_array.push({"title":'Body Key 1', "id":'WEBHOOKKEY1' + code_ids, "value":body_key, "type":'text'})
                        //   options_array.push({"title":'Body Value 1', "id":'WEBHOOKDATAKEY' + code_ids, "value":'data', "type":'dropdown', 'options':options_arr})

                        //  bodies[body_key] = body_val;

                        $('#body_wiz').append(`<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='body_wiz_keys` + body_count + `'  value='key'></input> : 
                              <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='body_wiz_values` + body_count + `'  value='value'></input><br>`)



                        body_count++;

                    };

                    document.getElementById('cancelWizard').onclick = function () {
                        document.getElementById('wizardMenu').style.display = "none";
                    };


                    document.getElementById('saveWizard').onclick = function () {

                        for (var kk = 0; kk < body_count; kk++) {
                            //        options_array.push({"title":'Body Key ' + kk, "id":'WEBHOOKKEY1_' + kk  + '_' + code_ids, "value":$('#body_wiz_keys' + kk).val(), "type":'text'})
                            //        options_array.push({"title":'Body Value ' + kk, "id":'WEBHOOKDATAKEY_' + kk  + '_' + code_ids, "value":$('#body_wiz_values' + kk).val(), "type":'dropdown', 'options':options_arr})

                            bodies[$('#body_wiz_keys' + kk).val()] = $('#body_wiz_values' + kk).val();

                        }
                        for (var kk = 0; kk < header_count; kk++) {
                            //        options_array.push({"title":'Header Key ' + kk, "id":'WEBHOOKKEY1_' + kk  + '_' + code_ids, "value":$('#body_wiz_keys' + kk).val(), "type":'text'})
                            //        options_array.push({"title":'Header Value ' + kk, "id":'WEBHOOKDATAKEY_' + kk  + '_' + code_ids, "value":$('#body_wiz_values' + kk).val(), "type":'dropdown', 'options':options_arr})

                            headers[$('#body_wiz_keys' + kk).val()] = $('#body_wiz_values' + kk).val();

                        }

                        document.getElementById('wizardMenu').style.display = "none";
                        var wiz_url = document.getElementById('api_wizard_url').value;
                        var wiz_type = document.getElementById('api_wizard_type').value;
                  
                        SendMessage("sendAjax", "data", {
                            url: wiz_url,
                            data: bodies,
                            mode: wiz_type,
                            callback: 'window.API = JSON.parse(data);//console.log(JSON.stringify(data));',
                            headers: headers,
                            dataType: null,
                            currentTab_id: 0
                        });

                        new_code = `
                
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){

                                            sendAjax('WEBHOOK_URL',{data:[elements[jj].innerText]},'POST');    
                                            
                                            
                            if(jj < elements.length){
                                setTimeout(function(){slow(jj+1)},1000)
                            }

                    }

                    slow(0);
                },/*delay*/` + currentDelay + `*delayKey);
    
    
                `;
                        text = `
                Start Code
                Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTSELECTKEY' type="text" value='` + selected_element.nodeName + `'></input><br>
                Endpoint : Google Sheets<br> 
                URL:<br>
                <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='WEBHOOKURLKEY'  value='` + wiz_url + `'></input><br>
                Data:<br>
                ` + options_string + `<br>
                
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        
                        
                        sendAjax('` + wiz_url + `',` + JSON.stringify(bodies) + `,/*type*/'` + wiz_type + `',/*callback*/'//console.log(data);',/*header*/` + JSON.stringify(headers) + `);       
                                       
                    if(jj < elements.length){
                        setTimeout(function(){slow(jj+1)},1000)
                    }
                    
                    }

                    slow(0)
                },/*delay*/` + currentDelay + `*delayKey);
                
                `;



                        var icon_code = '';
                        old_code = window.editor.getValue();

                        if (text.includes("End Code")) {
                            code = text.split("End Code")[1];
                            no_code = text.split("End Code")[0];
                        } else {
                            code = text;
                        }





                        var img_src = "https://cheatlayer.com/icon2.png";
                        var Title = "";
                        //Tesseract

                        img_src = "https://cheatlayer.com/images/textarea/text1.png";
                        Title += "Get Data GSheets</h2>";

                        no_code = no_code.split("textarea").join("textarea style='width:100%'");
                        no_code = no_code.split(".getAttribute('innerText')").join(".innerText");

                        icon_code += '<h2 class="cheatlayer"style="color:black;"><img style="margin:20px;pointer-events: none;background-color:#FFFFFF;width:50px;height:50px;border-radius:10px;border:1px solid black;padding:5px;margin:5px;" src=\"';
                        icon_code += img_src;
                        icon_code += '\"></img> ' + Title;

                        no_code = icon_code + "" + no_code + "";
                        (no_code.split('SELECTORKEY'));
                        no_code = no_code.split('SELECTORKEY').join('SELECTORKEY' + code_ids);
                        no_code = no_code.split('XPATHKEY').join('XPATHKEY' + code_ids);
                        no_code = no_code.split('CSSKEY').join('CSSKEY' + code_ids);
                        no_code = no_code.split('ELEMENTSELECTKEY').join('ELEMENTSELECTKEY' + code_ids);

                        no_code = no_code.split('DELAYKEY').join('DELAYKEY' + code_ids);
                        no_code = no_code.split('KEYPRESSKEY').join('KEYPRESSKEY' + code_ids);
                        no_code = no_code.split('PRINTKEY').join('PRINTKEY' + code_ids);
                        no_code = no_code.split('VARIABLEATTRKEY').join('VARIABLEATTRKEY' + code_ids);

                        no_code = no_code.split('REMOVEKEY').join('REMOVEKEY' + code_ids);
                        no_code = no_code.split('VARIABLEKEY').join('VARIABLEKEY' + code_ids);

                        no_code = no_code.split('VALUEKEY').join('VALUEKEY' + code_ids);
                        no_code = no_code.split('INPUTKEY').join('INPUTKEY' + code_ids);
                        no_code = no_code.split('INNERTEXTKEY').join('INNERTEXTKEY' + code_ids);

                        no_code = no_code.split('TIMERKEY').join('TIMERKEY' + code_ids);
                        no_code = no_code.split('LOCATIONKEY').join('LOCATIONKEY' + code_ids);
                        no_code = no_code.split('ELEMENTKEY').join('ELEMENTKEY' + code_ids);
                        no_code = no_code.split('CODEKEY').join('CODEKEY' + code_ids);
                        no_code = no_code.split('CODEGETDATA').join('CODEGETDATA' + code_ids);

                        no_code = no_code.split('Start Code').join('');
                        //  no_code = no_code.split('//').join('');
                        no_code = no_code.split('SHEETURLKEY').join('SHEETKEY' + code_ids);
                        no_code = no_code.split('SHEETIDKEY').join('SHEETIDKEY' + code_ids);
                        no_code = no_code.split('DOCIDKEY').join('DOCIDKEY' + code_ids);
                        no_code = no_code.split('DOCVALUESKEY').join('DOCVALUESKEY' + code_ids);
                        no_code = no_code.split('GMAILVALUEKEY').join('GMAILVALUEKEY' + code_ids);

                        no_code = no_code.split('FILTERINPKEY').join('FILTERINPKEY' + code_ids);
                        no_code = no_code.split('FILTEROPKEY').join('FILTEROPKEY' + code_ids);
                        no_code = no_code.split('FILTERVALKEY').join('FILTERVALKEY' + code_ids);


                        no_code = no_code.split('SHEETVALUESKEY').join('SHEETVALUESKEY' + code_ids);
                        no_code = no_code.split('SHEETNAMEKEY').join('SHEETNAMEKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKURLKEY').join('WEBHOOKURLKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKDATAKEY').join('WEBHOOKDATAKEY' + code_ids);
                        no_code = no_code.split('CSVURLKEY').join('CSVURLKEY' + code_ids);
                        no_code = no_code.split('RIKUNAME').join('RIKUNAME' + code_ids);
                        no_code = no_code.split('RIKUAPIKEY').join('RIKUAPIKEY' + code_ids);
                        no_code = no_code.split('PROMPTKEY').join('PROMPTKEY' + code_ids);
                        no_code = no_code.split('GPT3KEY').join('GPT3KEY' + code_ids);

                        no_code = no_code.split('RIKUINPUT5KEY').join('RIKUINPUT5KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT4KEY').join('RIKUINPUT4KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT1KEY').join('RIKUINPUT1KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT2KEY').join('RIKUINPUT2KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT3KEY').join('RIKUINPUT3KEY' + code_ids);
                        no_code = no_code.split('TIMEOUTKEY').join('TIMEOUTKEY' + code_ids);
                        no_code = no_code.split('TABIDKEY').join('TABIDKEY' + code_ids);
                        no_code = no_code.split('NEWWINDOWKEY').join('NEWWINDOWKEY' + code_ids);
                        no_code = no_code.split('RUNONVARSKEY').join('RUNONVARSKEY' + code_ids);
                        no_code = no_code.split('PAGINATIONKEY').join('PAGINATIONKEY' + code_ids);

                        no_code_container.push({ selector: selector_type, options: options_array, code_ids: code_ids, variablenames: no_code_variable_names, variables: no_code_variables.join(','), style: event.data.style, id: code_ids, no_code: no_code });


                        //document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
                        //document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
                        //document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;
                        drawNoCodeContainer();

                        //googleSignIn


                        window.editor.setValue(old_code + "\n//Generated Script id=" + code_ids + "\n" + new_code + "\n//endcode\n");
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        $(document).on('click', '#googleSignIn', function () {
                            SendMessage("GoogleSignIn", "GoogleSignIn", "event.data");


                        });
                        if (typeof window.editor != 'undefined') {
                            var added_code = "//Generated Script id=" + code_ids;
                            added_code += code;
                            window.editor.setValue(old_code + added_code + "\n//endcode");
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                            document.getElementById('cheatmenu').style.display = 'block';

                        }
                        window.editor.resize();
                        code_ids += 1;
                        currentDelay = 3;

                    };

                } else if (event.data.style == "getdata") {

                    $('HTML').append(`
    
                    <div id="getDataMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
                    
                    <div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:40%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
                    <center><h1 style="color:black !important;">Google Sheets Data Input</h1><br>
                    Please enter the google sheets published CSV URL:<br>
                    <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='sheet_input_url'  value=''></input><br>
                    
                    <button style='background-color:white;color:black;' id='saveSheetURL'>Save</button>
                    <button style='background-color:white;color:black;' id='cancelSheetURL'>Cancel</button><br>
                    
                    </center>
                    </div>
                    
                    
                    </div>
                    `);
                    document.getElementById('cancelSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";
                    };


                    document.getElementById('saveSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";


                        var options_string = `<select class='selectCheat selectBox  select' name="vars" id='CODEGETDATA'>
                        `;
                        for (var jj = 0; jj < scripts.length; jj++) {
                            if (scripts[jj]["name"] && scripts[jj]["name"].length > 0 && scripts[jj]["deleted"] != "true") {
                                options_string += `<option value="` + scripts[jj]["name"] + `">` + scripts[jj]["name"] + `</option>`;
                            }
                        }
                        options_string += `<option selected="selected" value="none">None</option>`;

                        options_string += `</select>`;

                        var sheet_url = document.getElementById('sheet_input_url').value;
                        sendAjax(sheet_url, {}, "GET", `
                        window.data = data;
                        //console.log(data);
                        `);

                        new_code = `
                        var delayKey = 1000;
            setTimeout(function(){
                sendAjax('` + sheet_url + `',{},"GET", \`
                window.data = data;
                \`);         
                //console.log(window.data);       
            },/*delay*/` + currentDelay + `*delayKey);
            
                        `;
                        text = `
                        Start Code
                        Endpoint : Google Sheets<br> 
                        Google Sheets CSV URL:<br>
    
                        Run Cheat:<br>
                        ` + options_string + `<br>
    
                        
                        <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='CSVURLKEY'  value='` + sheet_url + `'></input><br>
            
                        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                        End Code
                        var delayKey = 1000;
            setTimeout(function(){
                sendAjax('` + sheet_url + `',{},"GET", \`
                window.data = data;
                /*startCheat*/
                /*stopCheat*/
    
                \`);         
                //console.log(window.data);       
            },/*delay*/` + currentDelay + `*delayKey);
                        `;

                        var icon_code = '';
                        if (text.includes(`getAttribute('innerText')`)) {
                            text = text.split(`getAttribute('innerText')`).join('innerText')
                        }
                        old_code = window.editor.getValue();

                        if (text.includes("End Code")) {
                            code = text.split("End Code")[1];
                            no_code = text.split("End Code")[0];
                        } else {
                            code = text;
                        }





                        var img_src = "https://cheatlayer.com/icon2.png";
                        var Title = "";
                        //Tesseract

                        img_src = "https://cheatlayer.com/images/textarea/text1.png";
                        Title += "Get Data GSheets</h2>";

                        no_code = no_code.split("textarea").join("textarea style='width:100%'");
                        no_code = no_code.split(".getAttribute('innerText')").join(".innerText");

                        icon_code += '<h2 class="cheatlayer"style="color:black;"><img style="margin:20px;pointer-events: none;background-color:#FFFFFF;width:50px;height:50px;border-radius:10px;border:1px solid black;padding:5px;margin:5px;" src=\"';
                        icon_code += img_src;
                        icon_code += '\"></img> ' + Title;

                        no_code = icon_code + "" + no_code + "";
                        (no_code.split('SELECTORKEY'));
                        no_code = no_code.split('SELECTORKEY').join('SELECTORKEY' + code_ids);
                        no_code = no_code.split('XPATHKEY').join('XPATHKEY' + code_ids);
                        no_code = no_code.split('CSSKEY').join('CSSKEY' + code_ids);
                        no_code = no_code.split('ELEMENTSELECTKEY').join('ELEMENTSELECTKEY' + code_ids);

                        no_code = no_code.split('DELAYKEY').join('DELAYKEY' + code_ids);
                        no_code = no_code.split('KEYPRESSKEY').join('KEYPRESSKEY' + code_ids);
                        no_code = no_code.split('PRINTKEY').join('PRINTKEY' + code_ids);

                        no_code = no_code.split('REMOVEKEY').join('REMOVEKEY' + code_ids);
                        no_code = no_code.split('VARIABLEKEY').join('VARIABLEKEY' + code_ids);

                        no_code = no_code.split('VALUEKEY').join('VALUEKEY' + code_ids);
                        no_code = no_code.split('INPUTKEY').join('INPUTKEY' + code_ids);
                        no_code = no_code.split('INNERTEXTKEY').join('INNERTEXTKEY' + code_ids);

                        no_code = no_code.split('TIMERKEY').join('TIMERKEY' + code_ids);
                        no_code = no_code.split('LOCATIONKEY').join('LOCATIONKEY' + code_ids);
                        no_code = no_code.split('ELEMENTKEY').join('ELEMENTKEY' + code_ids);
                        no_code = no_code.split('CODEKEY').join('CODEKEY' + code_ids);
                        no_code = no_code.split('CODEGETDATA').join('CODEGETDATA' + code_ids);

                        no_code = no_code.split('Start Code').join('');
                        //  no_code = no_code.split('//').join('');
                        no_code = no_code.split('SHEETURLKEY').join('SHEETKEY' + code_ids);
                        no_code = no_code.split('SHEETIDKEY').join('SHEETIDKEY' + code_ids);
                        no_code = no_code.split('DOCIDKEY').join('DOCIDKEY' + code_ids);
                        no_code = no_code.split('DOCVALUESKEY').join('DOCVALUESKEY' + code_ids);
                        no_code = no_code.split('GMAILVALUEKEY').join('GMAILVALUEKEY' + code_ids);

                        no_code = no_code.split('SHEETVALUESKEY').join('SHEETVALUESKEY' + code_ids);
                        no_code = no_code.split('SHEETNAMEKEY').join('SHEETNAMEKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKURLKEY').join('WEBHOOKURLKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKDATAKEY').join('WEBHOOKDATAKEY' + code_ids);
                        no_code = no_code.split('CSVURLKEY').join('CSVURLKEY' + code_ids);
                        no_code = no_code.split('RIKUNAME').join('RIKUNAME' + code_ids);
                        no_code = no_code.split('RIKUAPIKEY').join('RIKUAPIKEY' + code_ids);
                        no_code = no_code.split('PROMPTKEY').join('PROMPTKEY' + code_ids);
                        no_code = no_code.split('GPT3KEY').join('GPT3KEY' + code_ids);

                        no_code = no_code.split('RIKUINPUT5KEY').join('RIKUINPUT5KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT4KEY').join('RIKUINPUT4KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT1KEY').join('RIKUINPUT1KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT2KEY').join('RIKUINPUT2KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT3KEY').join('RIKUINPUT3KEY' + code_ids);
                        no_code = no_code.split('TIMEOUTKEY').join('TIMEOUTKEY' + code_ids);
                        no_code = no_code.split('TABIDKEY').join('TABIDKEY' + code_ids);
                        no_code = no_code.split('NEWWINDOWKEY').join('NEWWINDOWKEY' + code_ids);
                        no_code = no_code.split('RUNONVARSKEY').join('RUNONVARSKEY' + code_ids);
                        no_code = no_code.split('PAGINATIONKEY').join('PAGINATIONKEY' + code_ids);

                        no_code_container.push({ selector: selector_type, options: options_array, code_ids: code_ids, variablenames: no_code_variable_names, variables: no_code_variables.join(','), style: event.data.style, id: code_ids, no_code: no_code });


                        //document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
                        //document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
                        //document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;
                        drawNoCodeContainer();

                        //googleSignIn


                        window.editor.setValue(old_code + "\n//Generated Script id=" + code_ids + "\n" + new_code + "\n//endcode\n");
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        $(document).on('click', '#googleSignIn', function () {
                            SendMessage("GoogleSignIn", "GoogleSignIn", "event.data");


                        });
                        if (typeof window.editor != 'undefined') {
                            var added_code = "//Generated Script id=" + code_ids;
                            added_code += code;
                            window.editor.setValue(old_code + added_code + "\n//endcode");
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                            document.getElementById('cheatmenu').style.display = 'block';

                        }
                        window.editor.resize();
                        code_ids += 1;
                        currentDelay = 3;

                    };




                } else if (event.data.style == "gcal") {
                    //                    alert('Please note that google is still reviewing our direct API request, so you may be blocked until they complete review. Early users are grandfathered in.')


                    new_code = `
                
                var delayKey = 1000;
                setTimeout(function(){
                    var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                    google_calendar_append(element.innerText,window.location.href);       
                },/*delay*/` + currentDelay + `*delayKey);
                `;
                    text = `
                Start Code
                Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTSELECTKEY' type="text" value='` + selected_element.nodeName + `'></input><br>
                Endpoint : Google Calendar<br> 
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                    var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                    google_calendar_append(element.innerText,window.location.href);       
                },/*delay*/` + currentDelay + `*delayKey);
                
                `;
                } else if (event.data.style == "gdocs") {


                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='DOCVALUESKEY'>
                    `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ',' + storage_vars[jj];
                        }
                    }
                    options_string += `<option selected="selected" value="elements[jj].innerText">Inner Text</option>`;

                    options_string += `<option value="` + no_code_variables_string + `">` + no_code_variables_string + `</option>`;
                    options_string += `</select>`;
                    //                alert('Please note that google is still reviewing our direct API request, so you may be blocked until they complete review. Early users are grandfathered in.')

                    new_code = `
                
                var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                function slow(jj){
                
                    google_docs_append('GOOGLE_DOCS_ID',elements[jj].innerText);   
                    if(jj < elements.length){
                        setTimeout(function(){slow(jj+1)},1000)
                    }
                }
                slow(0)
                `;
                    text = `
                Start Code
                Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTSELECTKEY' type="text" value='` + selected_element.nodeName + `'></input><br>
                Endpoint : Google Sheets<br> 
                Doc ID:<br>
                <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='DOCIDKEY' value='GOOGLE_DOCS_ID'></input><br>
                Doc Input:<br>
                 ` + options_string + `<br>
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
   
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        google_docs_append('GOOGLE_DOCS_ID',elements[jj].innerText);       
                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},1000)
                        }
                    }
                    slow(0)
                },/*delay*/` + currentDelay + `*delayKey);
                
                `;
                } else if (event.data.style == "print") {


                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='PRINTKEY'>
                    `;
                    options_string += `<option value="href">Link Destination .href</option>`;
                    options_string += `<option value="src">Image source .src</option>`;
                    options_string += `<option value="innerText">Inner Text .innerText</option>`;
                    options_string += `<option selected="selected" value="Custom Attribute">Custom Attribute</option>`;

                    options_string += `</select>`;

                    new_code = `
                var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                function slow(jj){
                    
                    //console.log(elements[jj].innerText);
                    if(jj < elements.length){
                        setTimeout(function(){slow(jj+1)},1000)
                    }
                }
                slow(0)

                `;
                    text = `
                Start Code
                Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTSELECTKEY' type="text" value='` + selected_element.nodeName + `'></input><br>
                Endpoint : Web Console<br>
                Attribute:<br>
                ` + options_string + `
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        //console.log(elements[jj].innerText);
                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},1000)
                        }
                    }

                    slow(0)
                },/*delay*/` + currentDelay + `*delayKey);
                `;
                } else if (event.data.style == "script") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='CODEKEY'>
          `;
                    for (var jj = 0; jj < scripts.length; jj++) {
                        if (scripts[jj]["name"] && scripts[jj]["name"].length > 0 && scripts[jj]["deleted"] != "true") {
                            options_string += `<option value="` + scripts[jj]["name"] + `">` + scripts[jj]["name"] + `</option>`;
                        }
                    }
                    options_string += `</select>`;

                    var options_string2 = `<select class='selectCheat selectBox  select' name="vars" id='RUNONVARSKEY'>
            `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string2 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string2 += `<option selected='selected' value="none">None</option>`;

                    options_string2 += `</select>`;


                    var options_string3 = `<select class='selectCheat selectBox  select' name="vars" id='TABIDKEY'>
            `;
                    if (typeof window.tabs != "undefined") {
                        for (var jj = 0; jj < window.tabs.length; jj++) {

                            options_string3 += `<option value="` + window.tabs[jj]["id"] + `">` + window.tabs[jj]["id"] + ` ( ` + window.tabs[jj]["url"] + `)</option>`;

                        }
                    }
                    options_string3 += `<option selected='selected' value="-1">None</option>`;

                    options_string3 += `</select>`;


                    var options_string4 = `<select class='selectCheat selectBox  select' name="vars" id='TIMEOUTKEY'>
              `;

                    options_string4 += `<option selected='selected' value="30">30 seconds</option>`;
                    options_string4 += `<option value="60">60 seconds</option>`;
                    options_string4 += `<option value="120">120 seconds</option>`;
                    options_string4 += `<option value="300">300 seconds</option>`;
                    options_string4 += `<option value="1500">1500 seconds</option>`;
                    options_string4 += `<option value="300000">300000 seconds</option>`;


                    options_string4 += `</select>`;

                    new_code = `
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        runOnTab(elements[jj].innerText,'SCRIPT_NAME');
                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},1000)
                        }
                    }

                    slow(0)
                },/*delay*/` + currentDelay + `*delayKey);
                
                `;
                    text = `
                Start Code
                Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTSELECTKEY' type="text" value='` + selected_element.nodeName + `'></input><br>
                Endpoint : Script 
                <br>
                Code:<br>
                ` + options_string + `
                <br>
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                Timeout: <br>
                ` + options_string4 + `
                <br>
                Tab ID: <br>
                ` + options_string3 + `
                <br>
                New Window: <br><select class='selectCheat selectBox  select'  id='NEWWINDOWKEY' ><option selected='selected' value="false">False</option><option value="true">True</option></select><br>
              
                Pagination URL:<br> <input class='cheatlayer cheat-input' id='PAGINATIONKEY' type="text" value=""></input><br>
    
                Custom Data: <br>` + options_string2 + `<br>
    
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        
                        runOnTab(elements[jj].href,/*script*/'SCRIPT_NAME',/*timeout*/30,/*options*/{/*id*/id:-1, /*newWindow*/newWindow:false,/*custom1*/data1:"none",/*custom2*/data2:"none",/*custom3*/data3:"none"});

                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},1000)
                        }
                    }

                    slow(0);


                },/*delay*/` + currentDelay + `*delayKey);
                `;

                } else if (event.data.style == "click") {
                    new_code = `
                var delayKey = 1000;
                setTimeout(function(){
                
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        elements[jj].click();

                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},1000)
                        }
                    }

                    slow(0);
                
                },/*delay*/` + currentDelay + `*delayKey);
                
                `;
                    text = `
                Start Code
                Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTSELECTKEY' type="text" value='` + selected_element.nodeName + `'></input><br>
                Endpoint : Click Element<br>
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){

                elements[jj].click();
                

                if(jj < elements.length){
                    setTimeout(function(){slow(jj+1)},1000)
                }
            }

            slow(0);
        
        
        },/*delay*/` + currentDelay + `*delayKey);
                `;
                } else if (event.data.style == "variable") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='VARIABLEATTRKEY'>
                `;

                    options_string += `<option value="innerText">Inner Text .innerText</option>`;
                    options_string += `<option value="URL">Page URL</option>`;

                    options_string += `<option value="href">Link Destination .href</option>`;
                    options_string += `<option value="src">Image source .src</option>`;
                    options_string += `<option value="Custom Attribute">Custom Attribute</option>`;

                    options_string += `</select>`;
                    total_variables++;
                    no_code_variables.push(`_variable` + total_variables);
                    no_code_variable_names.push("Saved Variable " + total_variables)

                    new_code = `
                var _variable` + total_variables + ` = 'none';
    
                var delayKey = 1000;
                setTimeout(function(){
                
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        
                        _variable` + total_variables + ` = elements[jj].innerText;


                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},1000)
                        }
                    }
        
                    slow(0);
                    
                    
                },/*delay*/` + currentDelay + `*delayKey);
                
                `;
                    text = `
                Start Code
                Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTSELECTKEY' type="text" value='` + selected_element.nodeName + `'></input><br>
                Variable Name: <br>_variable` + total_variables + `<br>
                Endpoint : Variable<br>
                Attribute:<br>
                ` + options_string + `<br>
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var _variable` + total_variables + ` = 'none';
         
                var delayKey = 1000;
                setTimeout(function(){
                
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        
                        _variable` + total_variables + ` =/*attribute*/elements[jj].innerText;
            
                
                   if(typeof cheat_data == 'undefined'){
                    cheat_data = {}
                }
               
                if("_variable` + total_variables + `"  + "_" + window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"") in cheat_data){
                    cheat_data["_variable` + total_variables + `"  + "_" + window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"")].push(elements[jj].innerText);
    
                }else{
                cheat_data["_variable` + total_variables + `"   + "_" + window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"")] = /*attribute*/[elements[jj].innerText];
                }
                
                //console.log(elements[jj].innerText)
                //console.log(cheat_data)
                //console.log(tab_id)
            function storeUserPrefs() {
                    var key = "cheatlayer"
                     //console.log(cheat_data)
                     var out_obj = JSON.parse(\`` + JSON.stringify(storage_json) + `\`);
                     out_obj[window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"")] = cheat_data;
                     var testPrefs = JSON.stringify(out_obj);
                    var jsonfile = {};
                    jsonfile[key] = testPrefs;
                    chrome.storage.sync.set(jsonfile, function () {
                        //console.log('Saved', key, testPrefs);
                    });
                
                }
                storeUserPrefs();
    

                if(jj < elements.length){
                    setTimeout(function(){slow(jj+1)},1000)
                }
            }

            slow(0);    
                },/*delay*/` + currentDelay + `*delayKey);
                
              
    
    
                
                `;
                } else if (event.data.style == "cloud") {
                    new_code = `
                var delayKey = 1000;
                setTimeout(function(){
    
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        sendAjax('https://cheatlayer.com/user/saveTemp',{TempA: elements[jj].href, text: elements[kk].innerText},'post');


                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},1000)
                        }
                    }
        
                    slow(0);                        
                },/*delay*/` + currentDelay + `*delayKey);
                
                `;
                    text = `
                Start Code
                Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
                Endpoint : Cloud<br>
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                    var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                    sendAjax('https://cheatlayer.com/user/saveTemp',{TempA: element.href, text: elements[kk].innerText},'post');
                },/*delay*/` + currentDelay + `*delayKey);
                
                `;
                } else if (event.data.style == "input") {
                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='INPUTKEY'>
                `;

                    if (selected_element.nodeName == 'SELECT') {
                        for (var kk = 0; kk < selected_element.options.length; kk++) {

                            options_string += `<option value="` + selected_element.options[kk].value + `">` + selected_element.options[kk].text + `</option>`;

                        }
                    }
                    if (typeof window.API != 'undefined') {
                        //console.log('window.API')

                        //console.log(window.API)
                        //console.log(JSON.flatten(window.API))
                        var flat = JSON.flatten(window.API);

                        for (var key in flat) {
                            if (flat.hasOwnProperty(key)) {
                                //console.log(key + " -> " + flat[key]);
                                options_string += `<option value="'` + flat[key] + `'">` + key + ` : ` + flat[key] + `</option>`;

                            }
                        }

                    }


                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    options_string += `<option selected="selected" value="">None</option>`;

                    options_string += `<option value="Custom">Custom</option>`;

                    options_string += `</select>`;


                    var input_val = 'TEST_VALUE';
                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        input_val = window.data[inputCounter++];
                    }

                    new_code = `
            
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        
                        elements[jj].value = '` + input_val + `';

                        
                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},1000)
                        }
                    }
        
                    slow(0);     


                }, /*delay*/` + currentDelay + `*delayKey);
                
                
                `;
                    text = `
                Start Code
                Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
                Endpoint : Input<br>
                ` + options_string + `
                <br>
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        elements[jj].value = '` + input_val + `';

                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},1000)
                        }
                    }
        
                    slow(0);     
                }, /*delay*/` + currentDelay + `*delayKey);
    
                `;
                } else if (event.data.style == "download") {
                    new_code = `
                var delayKey = 1000;
                setTimeout(function(){
                
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        if(elements[jj].src){
                        downloadFile(elements[jj].src);
                       }else if(elements[jj].href){
                        downloadFile(elements[jj].href);
                    }else{
                        downloadFile(elements[jj].innerText);
    
                    }
                    if(jj < elements.length){
                        setTimeout(function(){slow(jj+1)},1000)
                    }
                }
    
                slow(0); 
         
                }, /*delay*/` + currentDelay + `*delayKey);
                
                
                `;
                    text = `
                Start Code
                Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
                Endpoint : Download File<br>
    
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        
                        if(elements[jj].src){
                        downloadFile(elements[jj].src);
                       }else if(elements[jj].href){
                        downloadFile(elements[jj].href);
                    }else{
                        downloadFile(elements[jj].innerText);
    
                    }
         
                    if(jj < elements.length){
                        setTimeout(function(){slow(jj+1)},1000)
                    }
                }
    
                slow(0); 
                }, /*delay*/` + currentDelay + `*delayKey);
                
                `;
                } else if (event.data.style == "innerText") {
                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='INNERTEXTKEY'>
                `;


                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    options_string += `<option value="` + no_code_variables_string + `">` + no_code_variables_string + `</option>`;
                    options_string += `</select>`;


                    new_code = `
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        
                        elements[jj].innerText = 'TEST_VALUE';

                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},1000)
                        }
                    }
        
                    slow(0); 


            
                }, /*delay*/` + currentDelay + `*delayKey);
                `;
                    text = `
                Start Code
                Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
                Endpoint : Set Inner Text<br> 
                ` + options_string + `
                <br>
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        
                        elements[jj].innerText = 'TEST_VALUE';

                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},1000)
                        }
                    }
        
                    slow(0); 



            
                }, /*delay*/` + currentDelay + `*delayKey);
                
                `;
                } else if (event.data.style == "keypress") {
                    //console.log("try storage")
                    //console.log(storage_vars)


                    var options_string = `<select  class='selectCheat selectBox  select' name="vars" id='KEYPRESSKEY'>
                `;

                    if (typeof window.API != 'undefined') {
                        //console.log('window.API')

                        //console.log(window.API)
                        //console.log(JSON.flatten(window.API))
                        var flat = JSON.flatten(window.API);

                        for (var key in flat) {
                            if (flat.hasOwnProperty(key)) {
                                //console.log(key + " -> " + flat[key]);
                                options_string += `<option value="'` + flat[key] + `'">` + key + ` : ` + flat[key] + `</option>`;

                            }
                        }

                    }

                    //console.log(storage_vars)

                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                        }
                    }

                    for (var jj = 0; jj < input_vars.length; jj++) {
                        if (input_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + input_vars[jj] + `">` + input_vars[jj] + `</option>`;
                        }
                    }


                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    //storage_vars




                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ',' + storage_vars[jj];
                        }
                    }
                    options_string += `<option selected="selected" value="">None</option>`;
                    options_string += `<option value="Webhook">Webhook</option>`;

                    options_string += `<option value="Custom">Custom</option>`;

                    options_string += `</select>`;

                    new_code = `
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        
                        elements[jj].click();
    
                        elements[jj].dispatchEvent(new Event('focus'));
                        elements[jj].focus();
    
                        simulateKey('a');        

                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},5000)
                        }
                    }
        
                    slow(0); 


                }, /*delay*/` + currentDelay + `*delayKey);
                `;
                    text = `
                Start Code
                Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                Endpoint : Keypress<br> ` + options_string + `<br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        
                        elements[jj].click();
                        var newData = CSVToArray(window.data);
                        elements[jj].dispatchEvent(new Event('focus'));
                        elements[jj].focus();
                        simulateKey('a');

                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},5000)
                        }
                    }
        
                    slow(0); 


            
                }, /*delay*/` + currentDelay + `*delayKey);
                
                `;
                } else if (event.data.style == "hover") {
                    new_code = `
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        elements[jj].dispatchEvent(new MouseEvent('mouseover', { 'view': window, 'bubbles': true, 'cancelable': true }));
         
                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},1000)
                        }
                    }
        
                    slow(0); 


                }, /*delay*/` + currentDelay + `*delayKey);
                `;
                    text = `
                Start Code
                Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
                Endpoint : Hover<br>
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){
                        
                        
                        elements[jj].dispatchEvent(new MouseEvent('mouseover', { 'view': window, 'bubbles': true, 'cancelable': true }));
               
                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},1000)
                        }
                    }
        
                    slow(0); 

                }, /*delay*/` + currentDelay + `*delayKey);
                
                `;
                } else if (event.data.style == "screenshot") {
                    new_code = `
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){     
                        html2canvas(elements[jj], { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
                            document.body.appendChild(canvas);
                                  canvas.setAttribute("id", "canvas");
                             var link = document.createElement('a');
                          link.download = 'webpage.png';
                          link.href = document.getElementById('canvas').toDataURL()
                          link.click();
                        
                        });
                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},1000)
                        }
                    }
        
                    slow(0); 
                
                
                }, /*delay*/` + currentDelay + `*delayKey);
                `;
                    text = `
                Start Code
                Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
                Endpoint : Screenshot<br>
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){       
                        html2canvas(elements[jj], { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
                            document.body.appendChild(canvas);
                                  canvas.setAttribute("id", "canvas");
                             var link = document.createElement('a');
                          link.download = 'webpage.png';
                          link.href = document.getElementById('canvas').toDataURL()
                          link.click();
                        
                        });
                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},1000)
                        }
                    }
        
                    slow(0); 
                }, /*delay*/` + currentDelay + `*delayKey);
                
                `;
                } else if (event.data.style == "forward") {
                    new_code = `
                var delayKey = 1000;
                setTimeout(function(){
                    window.history.forward();
                }, /*delay*/` + currentDelay + `*delayKey);
                `;
                    text = `
                Start Code
                Endpoint : Go Forward<br>
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                    window.history.forward();
                }, /*delay*/` + currentDelay + `*delayKey);
                
                `;
                } else if (event.data.style == "back") {
                    new_code = `
                var delayKey = 1000;
                setTimeout(function(){
                    window.history.back()
                    }, /*delay*/` + currentDelay + `*delayKey);
                `;
                    text = `
                Start Code
                Endpoint : Go Back<br>
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                    window.history.back()
                  }, /*delay*/` + currentDelay + `*delayKey);
                
                `;
                } else if (event.data.style == "scroll") {
                    new_code = `
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){ 
                        
                        elements[jj].scrollTop = elements[jj].scrollHeight;
                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},1000)
                        }
                    }
        
                    slow(0); 
                }, /*delay*/` + currentDelay + `*delayKey);
                `;
                    text = `
                Start Code
                Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
                Endpoint : Scroll<br>
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                    var elements = document.getElementsByTagName(\`` + selected_element.nodeName + `\`);

                    function slow(jj){ 
                        
                        
                        elements[jj].scrollTop = element.scrollHeight;
                        if(jj < elements.length){
                            setTimeout(function(){slow(jj+1)},1000)
                        }
                    }
        
                    slow(0); 
                }, /*delay*/` + currentDelay + `*delayKey);
                
                `;
                }



            } else if (selector_type == "usexpath") {
                /*
                
                
                */





                if (event.data.style == "excel") {

                    new_code = `
  
//endcode
const workbook = new ExcelJS.Workbook();


const worksheet = workbook.addWorksheet('New Sheet');
//console.log(cheat_data)
//console.log()
var columns = [
];
var keys = Object.keys(cheat_data);
for(var kk = 0; kk < keys.length; kk++){
    columns.push({header:keys[kk], key:keys[kk]})
    
}
worksheet.columns = columns;
//console.log("Rows")
//console.log(cheat_data[keys[0]])
for(var kk = 0; kk < cheat_data[keys[0]].length; kk++){
var data = {}

for(var jj = 0; jj < keys.length; jj++){
    data[keys[jj]] = cheat_data[keys[jj]][kk]
}
    const row = worksheet.addRow(data);

}

workbook.xlsx.writeBuffer().then((data) => {
  const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8' });
  saveAs(blob, 'test.xlsx');
});//Generated Script id=1//Generated Script id=

    `;
                    text = `
    Start Code
    Endpoint : Excel File<br> 
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>

    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
   
    End Code
    var delayKey = 1000;
        setTimeout(function(){
 
//endcode
const workbook = new ExcelJS.Workbook();


const worksheet = workbook.addWorksheet('New Sheet');
//console.log(cheat_data)
//console.log()
var columns = [
];
var keys = Object.keys(cheat_data);
for(var kk = 0; kk < keys.length; kk++){
    columns.push({header:keys[kk], key:keys[kk]})
    
}
worksheet.columns = columns;
//console.log("Rows")
//console.log(cheat_data[keys[0]])
for(var kk = 0; kk < cheat_data[keys[0]].length; kk++){
var data = {}

for(var jj = 0; jj < keys.length; jj++){
    data[keys[jj]] = cheat_data[keys[jj]][kk]
}
    const row = worksheet.addRow(data);

}

workbook.xlsx.writeBuffer().then((data) => {
  const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8' });
  saveAs(blob, 'test.xlsx');
});//Generated Script id=1//Generated Script id=

        },/*delay*/` + currentDelay + `*delayKey);
    
    `;
                } else if (event.data.style == "rss") {

                    $('HTML').append(`

        <div id="getDataMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
        
        <div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:40%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
        <center><h1 style="color:black !important;">RSS Feed Input</h1><br>
        Please enter the RSS URL:<br>
        <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='sheet_input_url'  value=''></input><br>
        
        <button style='background-color:white;color:black;' id='saveSheetURL'>Save</button>
        <button style='background-color:white;color:black;' id='cancelSheetURL'>Cancel</button><br>
        
        </center>
        </div>
        
        
        </div>
        `);
                    document.getElementById('cancelSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";
                    };


                    document.getElementById('saveSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";


                        var sheet_url = document.getElementById('sheet_input_url').value;
                        getXML(sheet_url, `
            window.data = data;
            //console.log(data);
            `);

                        new_code = `
            var delayKey = 1000;
setTimeout(function(){
    getXML('` + sheet_url + `', \`
    window.data = data;
    \`);         
    //console.log(window.data);       
},/*delay*/` + currentDelay + `*delayKey);

            `;
                        text = `
            Start Code
            Endpoint : RSS Input<br> 
            RSS URL:<br>
            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='RSSURLKEY'  value='` + sheet_url + `'></input><br>

            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
setTimeout(function(){
    getXML('` + sheet_url + `', \`
    window.data = data;
    /*startCheat*/
    /*stopCheat*/
    \`);       
    //console.log(window.data);       
},/*delay*/` + currentDelay + `*delayKey);
            `;

                        var icon_code = '';
                        old_code = window.editor.getValue();

                        if (text.includes("End Code")) {
                            code = text.split("End Code")[1];
                            no_code = text.split("End Code")[0];
                        } else {
                            code = text;
                        }





                        var img_src = "https://cheatlayer.com/icon2.png";
                        var Title = "";
                        //Tesseract

                        img_src = chrome.runtime.getURL("rss.png");
                        Title += "RSS</h2>";


                        no_code = no_code.split("textarea").join("textarea style='width:100%'");
                        no_code = no_code.split(".getAttribute('innerText')").join(".innerText");

                        icon_code += '<h2 class="cheatlayer"style="color:black;"><img style="margin:20px;pointer-events: none;background-color:#FFFFFF;width:50px;height:50px;border-radius:10px;border:1px solid black;padding:5px;margin:5px;" src=\"';
                        icon_code += img_src;
                        icon_code += '\"></img> ' + Title;

                        no_code = icon_code + "" + no_code + "";
                        (no_code.split('SELECTORKEY'));
                        no_code = no_code.split('SELECTORKEY').join('SELECTORKEY' + code_ids);
                        no_code = no_code.split('XPATHKEY').join('XPATHKEY' + code_ids);
                        no_code = no_code.split('CSSKEY').join('CSSKEY' + code_ids);
                        no_code = no_code.split('ELEMENTSELECTKEY').join('ELEMENTSELECTKEY' + code_ids);

                        no_code = no_code.split('DELAYKEY').join('DELAYKEY' + code_ids);
                        no_code = no_code.split('KEYPRESSKEY').join('KEYPRESSKEY' + code_ids);
                        no_code = no_code.split('PRINTKEY').join('PRINTKEY' + code_ids);

                        no_code = no_code.split('REMOVEKEY').join('REMOVEKEY' + code_ids);
                        no_code = no_code.split('VARIABLEKEY').join('VARIABLEKEY' + code_ids);

                        no_code = no_code.split('VALUEKEY').join('VALUEKEY' + code_ids);
                        no_code = no_code.split('INPUTKEY').join('INPUTKEY' + code_ids);
                        no_code = no_code.split('INNERTEXTKEY').join('INNERTEXTKEY' + code_ids);

                        no_code = no_code.split('TIMERKEY').join('TIMERKEY' + code_ids);
                        no_code = no_code.split('LOCATIONKEY').join('LOCATIONKEY' + code_ids);
                        no_code = no_code.split('ELEMENTKEY').join('ELEMENTKEY' + code_ids);
                        no_code = no_code.split('CODEKEY').join('CODEKEY' + code_ids);
                        no_code = no_code.split('CODEGETDATA').join('CODEGETDATA' + code_ids);

                        no_code = no_code.split('Start Code').join('');
                        //  no_code = no_code.split('//').join('');
                        no_code = no_code.split('SHEETURLKEY').join('SHEETKEY' + code_ids);
                        no_code = no_code.split('SHEETIDKEY').join('SHEETIDKEY' + code_ids);
                        no_code = no_code.split('DOCIDKEY').join('DOCIDKEY' + code_ids);
                        no_code = no_code.split('DOCVALUESKEY').join('DOCVALUESKEY' + code_ids);
                        no_code = no_code.split('GMAILVALUEKEY').join('GMAILVALUEKEY' + code_ids);

                        no_code = no_code.split('SHEETVALUESKEY').join('SHEETVALUESKEY' + code_ids);
                        no_code = no_code.split('SHEETNAMEKEY').join('SHEETNAMEKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKURLKEY').join('WEBHOOKURLKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKDATAKEY').join('WEBHOOKDATAKEY' + code_ids);
                        no_code = no_code.split('CSVURLKEY').join('CSVURLKEY' + code_ids);
                        no_code = no_code.split('RIKUNAME').join('RIKUNAME' + code_ids);
                        no_code = no_code.split('RIKUAPIKEY').join('RIKUAPIKEY' + code_ids);
                        no_code = no_code.split('PROMPTKEY').join('PROMPTKEY' + code_ids);
                        no_code = no_code.split('GPT3KEY').join('GPT3KEY' + code_ids);

                        no_code = no_code.split('RIKUINPUT5KEY').join('RIKUINPUT5KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT4KEY').join('RIKUINPUT4KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT1KEY').join('RIKUINPUT1KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT2KEY').join('RIKUINPUT2KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT3KEY').join('RIKUINPUT3KEY' + code_ids);
                        no_code = no_code.split('TIMEOUTKEY').join('TIMEOUTKEY' + code_ids);
                        no_code = no_code.split('TABIDKEY').join('TABIDKEY' + code_ids);
                        no_code = no_code.split('NEWWINDOWKEY').join('NEWWINDOWKEY' + code_ids);
                        no_code = no_code.split('RUNONVARSKEY').join('RUNONVARSKEY' + code_ids);
                        no_code = no_code.split('PAGINATIONKEY').join('PAGINATIONKEY' + code_ids);

                        no_code_container.push({ selector: selector_type, options: options_array, code_ids: code_ids, variablenames: no_code_variable_names, variables: no_code_variables.join(','), style: event.data.style, id: code_ids, no_code: no_code });


                        //document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
                        //document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
                        //document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;
                        drawNoCodeContainer();

                        //googleSignIn


                        window.editor.setValue(old_code + "\n//Generated Script id=" + code_ids + "\n" + new_code + "\n//endcode\n");
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        $(document).on('click', '#googleSignIn', function () {
                            SendMessage("GoogleSignIn", "GoogleSignIn", "event.data");


                        });
                        if (typeof window.editor != 'undefined') {
                            var added_code = "//Generated Script id=" + code_ids;
                            added_code += code;
                            window.editor.setValue(old_code + added_code + "\n//endcode");
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                            document.getElementById('cheatmenu').style.display = 'block';

                        }
                        window.editor.resize();
                        code_ids += 1;
                        currentDelay = 3;

                    };




                } else if (event.data.style == "gmail") {
                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='GMAILVALUEKEY'>
        `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ` + ' ' + ` + no_code_container[jj]["variables"];
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ` + ' ' + ` + storage_vars[jj];
                        }
                    }
                    options_string += `<option value="element.src">Image Source</option>`;
                    options_string += `<option value="element.href">Link Destination</option>`;
                    if (no_code_variables_string.length > 0) {
                        options_string += `<option  value="element.innerText + ' ' + ` + no_code_variables_string + `">elements.innerText + ' ' + ` + no_code_variables_string + `</option>`;

                        options_string += `<option  selected='selected'  value="element.innerText">Inner Text</option>`;
                    } else {
                        options_string += `<option  selected='selected' value="element.innerText">Inner Text element.innerText</option>`;
                    }
                    options_string += `</select>`;


                    new_code = `
 
    var delayKey = 1000;
        setTimeout(function(){
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);

             var to = '` + user_email + `';
             var subject = 'Cheat Layer Automation Alert';
             var body = element.innerText;
            var gmailURL = 'https://mail.google.com/mail/u/0/?fs=1&to=' +to + '&su=' + subject + '&body=' +body + '&tf=cm';
      
                var timeout = 30;
                var script = \`//Generated Script id=0
                var delayKey = 1000;
                setTimeout(function(){
                var elements = document.getElementsByTagName('DIV');
                function slow(kk){
                 if(typeof elements[kk] != 'undefined' && elements[kk].getAttribute('id') && elements[kk].getAttribute('id').indexOf(":oz") >= 0){
                        elements[kk].click();
                        if(kk < elements.length){
                            setTimeout(function(){slow(kk+1)},10000);
                        }
                    }else{
                        if(kk < elements.length){
                            setTimeout(function(){slow(kk+1)},1);
                        }
                    }
                }
                slow(0);
                },/*delay*/1*delayKey);\`;

            runOnTab(gmailURL, script, 30, {newWindow:true, id:-1})


        },/*delay*/` + currentDelay + `*delayKey);
    `;
                    text = `
    Start Code
    Endpoint : Gmail<br> 
    
    Body: <br>
` + options_string + `

    <br>

    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>

    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
   
    End Code
    var delayKey = 1000;
        setTimeout(function(){
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);

             var to = '` + user_email + `';
             var subject = 'Cheat Layer Automation Alert';
             var body = element.innerText;
            var gmailURL = 'https://mail.google.com/mail/u/0/?fs=1&to=' +to + '&su=' + subject + '&body=' +body + '&tf=cm';
      
                var timeout = 30;
                var script = \`//Generated Script id=0
                var delayKey = 1000;
                setTimeout(function(){
                var elements = document.getElementsByTagName('DIV');
                function slow(kk){
                 if(typeof elements[kk] != 'undefined' && elements[kk].getAttribute('id') && elements[kk].getAttribute('id').indexOf(":oz") >= 0){
                        elements[kk].click();
                        if(kk < elements.length){
                            setTimeout(function(){slow(kk+1)},10000);
                        }
                    }else{
                        if(kk < elements.length){
                            setTimeout(function(){slow(kk+1)},1);
                        }
                    }
                }
                slow(0);
                },/*delay*/1*delayKey);\`;

            runOnTab(gmailURL, script, 30, {newWindow:true, id:-1})


        },/*delay*/` + currentDelay + `*delayKey);
    
    `;
                } else if (event.data.style == "filter") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='FILTERINPKEY'>
        `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ',' + storage_vars[jj];
                        }
                    }
                    options_string += `<option value="element.src">Image Source</option>`;
                    options_string += `<option value="element.href">Link Destination</option>`;

                    options_string += `<option  selected='selected' value="element.innerText">Inner Text element.innerText</option>`;

                    options_string += `</select>`;


                    new_code = `
    var delayKey = 1000;
    setTimeout(function(){
    /*start filter code*/
    /*end filter code*/

    },/*delay*/` + currentDelay + `*delayKey);
    `;
                    text = `
    Start Code
    Endpoint : Filter<br> 
    
    Filter Operations:<br> <select class='selectCheat selectBox  select' name="vars" id='FILTEROPKEY'>
    <option value='regex'>Regex Filter</option>
    <option selected="selected" value='contains'>Contains</option>
    <option value='notcontains'>Does Not Contain</option>
    <option value='less'>Less Than</option>
    <option value='greater'>Greater Than</option>
    <option value='dateless'>Date Less Than</option>
    <option value='dategreater'>Date Greater Than</option>
    <option value='matches'>Matches</option>

    </select>
    Value: <br><input class='cheatlayer cheat-input'style='background-color:white; color:black' type="text" id='FILTERVALKEY'  style='background-color:white; color:black'type="text" value=""></input><br>
    
    <br>
    Variable: <br>
` + options_string + `

    <br>

    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>

    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
   
    End Code
    var delayKey = 1000;
        setTimeout(function(){
        /*start filter code*/
        /*end filter code*/

        },/*delay*/` + currentDelay + `*delayKey);
    
    `;
                } else if (event.data.style == "OCR") {

                    new_code = `
    
    var element = lookupElementByXPath(\`` + event.data.xpath + `\`);

    OCR(element);

    `;
                    text = `
    Start Code
    Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
    Endpoint : OCR Image To Text<br> 
    <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='SHEETVALUESKEY' value='element.innerText` + no_code_variables_string + `'></input><br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>

    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
   
    End Code
    var delayKey = 1000;
        setTimeout(function(){
        var element = lookupElementByXPath(\`` + event.data.xpath + `\`);

        OCR(element);

        },/*delay*/` + currentDelay + `*delayKey);
    
    `;
                } else if (event.data.style == "pdf") {

                    total_variables++;
                    no_code_variables.push(`_pdf` + total_variables);
                    no_code_variable_names.push("PDF Output " + total_variables)
                    new_code = `
    
    var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
    //Generated Script id=0

    function gettext(pdfUrl){
      var pdf = pdfjsLib.getDocument(pdfUrl);
      //console.log(pdf);
      return pdf.promise.then(function(pdf) { // get all pages text
        //console.log(pdf)
        var maxPages = pdf._pdfInfo.numPages;
        var countPromises = []; // collecting all page promises
        for (var j = 1; j <= maxPages; j++) {
          var page = pdf.getPage(j);
    
          var txt = "";
          countPromises.push(page.then(function(page) { // add page promise
            var textContent = page.getTextContent();
            return textContent.then(function(text){ // return content promise
              return text.items.map(function (s) { return s.str; }).join(''); // value page text 
            });
          }));
        }
        // Wait for all pages and join text
        return Promise.all(countPromises).then(function (texts) {
          return texts.join('');
        });
      });
    }
        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.15.349/build/pdf.worker.js';
     
    // waiting on gettext to finish completion, or error
    gettext(element.href).then(function (text) {
      //console.log('parse ' + text); 
      window.pdf = text; 
    }, 
    function (reason) {
      console.error(reason);
    });     

    `;
                    text = `
    Start Code
    Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
    Endpoint : PDF To Text<br> 
    <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PDFKEY' value='element.href'></input><br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>

    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
   
    End Code
    var delayKey = 1000;
        setTimeout(function(){
        var element = lookupElementByXPath(\`` + event.data.xpath + `\`);

        function gettext(pdfUrl){
            var pdf = pdfjsLib.getDocument(pdfUrl);
            //console.log(pdf);
            return pdf.promise.then(function(pdf) { // get all pages text
              //console.log(pdf)
              var maxPages = pdf._pdfInfo.numPages;
              var countPromises = []; // collecting all page promises
              for (var j = 1; j <= maxPages; j++) {
                var page = pdf.getPage(j);
          
                var txt = "";
                countPromises.push(page.then(function(page) { // add page promise
                  var textContent = page.getTextContent();
                  return textContent.then(function(text){ // return content promise
                    return text.items.map(function (s) { return s.str; }).join(''); // value page text 
                  });
                }));
              }
              // Wait for all pages and join text
              return Promise.all(countPromises).then(function (texts) {
                return texts.join('');
              });
            });
          }
              pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.15.349/build/pdf.worker.js';
           
          // waiting on gettext to finish completion, or error
          gettext(element.href).then(function (text) {
            //console.log('parse ' + text); 
            window.pdf = text; 
          }, 
          function (reason) {
            console.error(reason);
          });
        },/*delay*/` + currentDelay + `*delayKey);
    
    `;
                } else if (event.data.style == "gsheets") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='SHEETVALUESKEY'>
        `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ',' + storage_vars[jj];
                        }
                    }
                    options_string += `<option value="element.src">Image Source</option>`;
                    options_string += `<option value="element.href">Link Destination</option>`;
                    if (no_code_variables_string.length > 0) {
                        options_string += `<option  selected='selected' value="element.innerText` + no_code_variables_string + `">Inner Text element.innerText` + no_code_variables_string + `</option>`;
                        options_string += `<option  value="element.innerText">Inner Text</option>`;
                    } else {
                        options_string += `<option  selected='selected' value="element.innerText">Inner Text element.innerText</option>`;
                    }
                    options_string += `</select>`;
                    //        alert('Please note that google is still reviewing our direct API request, so you may be blocked until they complete review. Early users are grandfathered in.')

                    new_code = `
        
        var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
        google_sheets_add_row('GOOGLE_SHEETS_ID',/*name*/'Sheet1',[element.innerText` + no_code_variables_string + `]);       
        
        `;
                    text = `
        Start Code
        Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
        Endpoint: Google Sheets<br>
        URL:<br>
        <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='SHEETIDKEY' value='GOOGLE_SHEETS_ID'></input><br>
        Sheet Name:<br>
        <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='SHEETNAMEKEY'  value='Sheet1'></input><br>
        Sheet Values:<br>
        ` + options_string + `<br>
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>

        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
       
        End Code
        var delayKey = 1000;
        setTimeout(function(){
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
            google_sheets_add_row('GOOGLE_SHEETS_ID',/*name*/'Sheet1',[element.innerText` + no_code_variables_string + `]);       
        },/*delay*/` + currentDelay + `*delayKey);
        
        `;

                } else if (event.data.style == "sentiment") {
                    currentDelay = 10;

                    new_code = `
            var delayKey = 1000;
            var sentimentkey = 'none';
            var  sentiment = ml5.sentiment('movieReviews', modelReady);

            function modelReady() {

            setTimeout(function(){
                var element = lookupElementByXPath(\`` + event.data.xpath + `\`);      

                    // model is ready
                var prediction = sentiment.predict(element.innerText);
           
                var output = parseFloat(prediction.score) > 0.5 ? 'positive' : 'negative';
                //console.log(prediction.score + ' ' + output);
                sentimentkey = prediction.score + ' ' + output;
                
                
                
                
                
                
                
            },/*delay*/` + currentDelay + `*delayKey);
            }
            
            
            `;
                    text = `
            Start Code
            Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
            Endpoint: Sentiment Analysis <br> 
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            var sentimentkey = 'none';
            var  sentiment = ml5.sentiment('movieReviews', modelReady);

            function modelReady() {

            setTimeout(function(){
                var element = lookupElementByXPath(\`` + event.data.xpath + `\`);      

                    // model is ready
                var prediction = sentiment.predict(element.innerText);
                //console.log(prediction.score + ' ' + prediction.score > .5 ? 'positive' : 'negative');
                sentimentkey = prediction.score + ' ' + prediction.score > .5 ? 'positive' : 'negative';
                    
                
                
                
                
                
                
            },/*delay*/` + currentDelay + `*delayKey);
            }
            
            `;
                } else if (event.data.style == "object") {
                    total_variables++;
                    no_code_variables.push(`_object` + total_variables);
                    no_code_variable_names.push("Object Detection Output " + total_variables)


                    new_code = `
                var _object` + total_variables + ` = 'none';

                var delayKey = 1000;
                var objectkey = 'none';
                setTimeout(function(){
                    var element = lookupElementByXPath(\`` + event.data.xpath + `\`);      
                    const result = document.getElementById('result'); // The result tag in the HTML
                    const probability = document.getElementById('probability'); // The probability tag in the HTML
                        
       html2canvas(element.parentNode, { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
        document.body.appendChild(canvas);
              canvas.setAttribute("id", "canvas");
         var link = document.createElement('img');
      link.src = document.getElementById('canvas').toDataURL()
// Create a YOLO method
link.onload = () => {
const yolo = ml5.YOLO(options= modelLoaded);
// When the model is loaded
function modelLoaded() {
//console.log('Model Loaded!');
// Detect objects in the video element
yolo.detect(link, (err, results) => {
//console.log(results[0]['label']); // Will output bounding boxes of detected objects
_object` + total_variables + ` =results[0]['label'];
});
}
}
});
                },/*delay*/` + currentDelay + `*delayKey);
                
                `;
                    text = `
                Start Code
                Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
                Endpoint: Object Detection <br> 
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                var objectkey = 'none';
                var _object` + total_variables + ` = 'none';

                setTimeout(function(){
                    var element = lookupElementByXPath(\`` + event.data.xpath + `\`);      
                    const result = document.getElementById('result'); // The result tag in the HTML
                    const probability = document.getElementById('probability'); // The probability tag in the HTML
  
       html2canvas(element.parentNode, { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
        document.body.appendChild(canvas);
              canvas.setAttribute("id", "canvas");
         var link = document.createElement('img');
      link.src = document.getElementById('canvas').toDataURL()
// Create a YOLO method
link.onload = () => {
const yolo = ml5.YOLO(options= modelLoaded);
// When the model is loaded
function modelLoaded() {
//console.log('Model Loaded!');
// Detect objects in the video element
yolo.detect(link, (err, results) => {
//console.log(results[0]['label']); // Will output bounding boxes of detected objects
_object` + total_variables + ` =results[0]['label'];

});
}
}
});
                },/*delay*/` + currentDelay + `*delayKey);
                
                `;
                    currentDelay = 20;

                } else if (event.data.style == "riku") {
                    no_code_variables.push(`riku[riku.length -1]`);
                    no_code_variable_names.push("Riku.ai Last Output ")

                    riku_variables++;

                    var options_string1 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT1KEY'>
                    `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string1 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string1 += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                        }
                    }

                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string1 += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string1 += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string1 += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string1 += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    options_string1 += `<option selected="selected" value="">None</option>`;

                    options_string1 += `<option value="Custom">Custom Input</option>`;
                    options_string1 += `</select>`;

                    var options_string2 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT2KEY'>
                      `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string2 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string2 += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                        }
                    }
                    options_string2 += `<option selected="selected" value="">None</option>`;

                    options_string2 += `<option value="Custom">Custom Input</option>`;
                    options_string2 += `</select>`;


                    var options_string3 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT3KEY'>
                        `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string3 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string3 += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                        }
                    }
                    options_string3 += `<option selected="selected" value="">None</option>`;

                    options_string3 += `<option value="Custom">Custom Input</option>`;
                    options_string3 += `</select>`;


                    var options_string4 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT4KEY'>
                          `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string4 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string4 += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                        }
                    }
                    options_string4 += `<option selected="selected" value="">None</option>`;

                    options_string4 += `<option value="Custom">Custom Input</option>`;
                    options_string4 += `</select>`;


                    var options_string5 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT5KEY'>
                            `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string5 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string5 += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                        }
                    }
                    options_string5 += `<option selected="selected" value="">None</option>`;

                    options_string5 += `<option value="Custom">Custom Input</option>`;
                    options_string5 += `</select>`;



                    new_code = `
                    
                    var delayKey = 1000;
                    setTimeout(function(){
                        var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                        element.focus();

                        rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");       
                    },/*delay*/` + currentDelay + `*delayKey);
        
        
                    `;
                    text = `
                    Start Code
                    Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
                    Endpoint : Google Sheets<br> 
                    Account Holder name:<br>
                    <input class='cheatlayer cheat-input' id='RIKUNAME' width='174px' style='background-color:white; color:black;width:174px !important;' value='Account'></input><br>
                    
                    API KEY:<br>
                    <input class='cheatlayer cheat-input' id='RIKUAPIKEY' width='174px' style='background-color:white; color:black;width:174px !important;' value='API_KEY'></input><br>
                    Prompt ID:<br>
                    <input class='cheatlayer cheat-input' id='PROMPTKEY' width='174px' style='background-color:white; color:black;width:174px !important;' value='PROMPT_ID'></input><br>
                    Input 1:<br>
                    ` + options_string1 + `<br>
                    Input 2:<br>
                    ` + options_string2 + `<br>
                    Input 3:<br>
                    ` + options_string3 + `<br>
                    Input 4:<br>
                    ` + options_string4 + `<br>
                    Input 5:<br>
                    ` + options_string5 + `<br>
                    
                    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                    End Code
                    var delayKey = 1000;
                    setTimeout(function(){
                        var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                        element.click();
                        element.focus();

                        rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");       
                    },/*delay*/` + currentDelay + `*delayKey);
                    
                    `;
                    currentDelay = 5;

                } else if (event.data.style == "webhook") {

                    var options_arr = [];
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_arr.push(no_code_container[jj]["variables"])
                        }
                    }
                    options_arr.push("element.src")
                    options_arr.push("element.href")

                    options_arr.push("custom")

                    $('HTML').append(`
        
                      <div id="wizardMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
                      
                      <div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:40%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
                      <center><h1 style="color:black !important;">API Wizard</h1><br>
                      WebhookURL:<br>
                      <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='api_wizard_url'  value=''></input><br>
                      Request Type:<br>
                      <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='api_wizard_type'  value='POST'></input><br>
                      Headers {<div id='header_wiz'></div>}<br>
                      Body {<div id='body_wiz'></div>}<br>
        
                      <button style='background-color:white;color:black;' id='addWizardBody'>Add Body Data</button><br>
                      <button style='background-color:white;color:black;' id='addWizardHeader'>Add Header</button><br>
        
                      <button style='background-color:white;color:black;' id='saveWizard'>Save</button><br>
                      <button style='background-color:white;color:black;' id='cancelWizard'>Cancel</button><br><br>
                      
                      </center>
                      </div>
                      
                      
                      </div>
                      `);
                    var header_count = 0;
                    var body_count = 0;
                    var headers = {};
                    var bodies = {};

                    document.getElementById('addWizardHeader').onclick = function () {
                        $('#header_wiz').append(`<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='header_wiz_keys` + header_count + `'  value='key'></input> : 
                                  <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='header_wiz_values` + header_count + `'  value='value'></input><br>`)

                        //  options_array.push({"title":'Header Key 1', "id":'WEBHOOKHEADERKEY' + header_count + '_' + code_ids, "value":header_key, "type":'text'})
                        // options_array.push({"title":'Header Data 1', "id":'WEBHOOKHEADERDATAKEY' +header_count + '_' + code_ids, "value":header_val, "type":'text'})
                        //    headers[header_key] = header_val;

                        header_count++;

                    };


                    document.getElementById('addWizardBody').onclick = function () {
                        //  options_array.push({"title":'Body Key 1', "id":'WEBHOOKKEY1' + code_ids, "value":body_key, "type":'text'})
                        //   options_array.push({"title":'Body Value 1', "id":'WEBHOOKDATAKEY' + code_ids, "value":'data', "type":'dropdown', 'options':options_arr})

                        //  bodies[body_key] = body_val;

                        $('#body_wiz').append(`<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='body_wiz_keys` + body_count + `'  value='key'></input> : 
                          <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='body_wiz_values` + body_count + `'  value='value'></input><br>`)



                        body_count++;

                    };

                    document.getElementById('cancelWizard').onclick = function () {
                        document.getElementById('wizardMenu').style.display = "none";
                    };


                    document.getElementById('saveWizard').onclick = function () {

                        for (var kk = 0; kk < body_count; kk++) {
                            //       options_array.push({"title":'Body Key ' + kk, "id":'WEBHOOKKEY1_' + kk  + '_' + code_ids, "value":$('#body_wiz_keys' + kk).val(), "type":'text'})
                            //       options_array.push({"title":'Body Value ' + kk, "id":'WEBHOOKDATAKEY_' + kk  + '_' + code_ids, "value":$('#body_wiz_values' + kk).val(), "type":'dropdown', 'options':options_arr})

                            bodies[$('#body_wiz_keys' + kk).val()] = $('#body_wiz_values' + kk).val();

                        }
                        for (var kk = 0; kk < header_count; kk++) {
                            //       options_array.push({"title":'Header Key ' + kk, "id":'WEBHOOKKEY1_' + kk  + '_' + code_ids, "value":$('#body_wiz_keys' + kk).val(), "type":'text'})
                            //       options_array.push({"title":'Header Value ' + kk, "id":'WEBHOOKDATAKEY_' + kk  + '_' + code_ids, "value":$('#body_wiz_values' + kk).val(), "type":'dropdown', 'options':options_arr})

                            headers[$('#body_wiz_keys' + kk).val()] = $('#body_wiz_values' + kk).val();

                        }

                        document.getElementById('wizardMenu').style.display = "none";
                        var wiz_url = document.getElementById('api_wizard_url').value;
                        var wiz_type = document.getElementById('api_wizard_type').value;
                   
                        SendMessage("sendAjax", "data", {
                            url: wiz_url,
                            data: bodies,
                            mode: wiz_type,
                            callback: 'window.API = JSON.parse(data);//console.log(JSON.stringify(data));',
                            headers: headers,
                            dataType: null,
                            currentTab_id: 0
                        });

                        new_code = `
            
            var delayKey = 1000;
            setTimeout(function(){
                var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                sendAjax('WEBHOOK_URL',{data:[element.innerText]},'POST');       
            },/*delay*/` + currentDelay + `*delayKey);


            `;
                        text = `
            Start Code
            Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
            Endpoint : Google Sheets<br> 
            URL:<br>
            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='WEBHOOKURLKEY'  value='` + wiz_url + `'></input><br>
            Data:<br>
            ` + options_string + `<br>
            
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                sendAjax('` + wiz_url + `',` + JSON.stringify(bodies) + `,/*type*/'` + wiz_type + `',/*callback*/'//console.log(data);',/*header*/` + JSON.stringify(headers) + `);       
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;



                        var icon_code = '';
                        old_code = window.editor.getValue();

                        if (text.includes("End Code")) {
                            code = text.split("End Code")[1];
                            no_code = text.split("End Code")[0];
                        } else {
                            code = text;
                        }





                        var img_src = "https://cheatlayer.com/icon2.png";
                        var Title = "";
                        //Tesseract

                        img_src = "https://cheatlayer.com/images/textarea/text1.png";
                        Title += "Get Data GSheets</h2>";

                        no_code = no_code.split("textarea").join("textarea style='width:100%'");
                        no_code = no_code.split(".getAttribute('innerText')").join(".innerText");

                        icon_code += '<h2 class="cheatlayer"style="color:black;"><img style="margin:20px;pointer-events: none;background-color:#FFFFFF;width:50px;height:50px;border-radius:10px;border:1px solid black;padding:5px;margin:5px;" src=\"';
                        icon_code += img_src;
                        icon_code += '\"></img> ' + Title;

                        no_code = icon_code + "" + no_code + "";
                        (no_code.split('SELECTORKEY'));
                        no_code = no_code.split('SELECTORKEY').join('SELECTORKEY' + code_ids);
                        no_code = no_code.split('XPATHKEY').join('XPATHKEY' + code_ids);
                        no_code = no_code.split('CSSKEY').join('CSSKEY' + code_ids);
                        no_code = no_code.split('ELEMENTSELECTKEY').join('ELEMENTSELECTKEY' + code_ids);

                        no_code = no_code.split('DELAYKEY').join('DELAYKEY' + code_ids);
                        no_code = no_code.split('KEYPRESSKEY').join('KEYPRESSKEY' + code_ids);
                        no_code = no_code.split('PRINTKEY').join('PRINTKEY' + code_ids);
                        no_code = no_code.split('VARIABLEATTRKEY').join('VARIABLEATTRKEY' + code_ids);

                        no_code = no_code.split('REMOVEKEY').join('REMOVEKEY' + code_ids);
                        no_code = no_code.split('VARIABLEKEY').join('VARIABLEKEY' + code_ids);

                        no_code = no_code.split('VALUEKEY').join('VALUEKEY' + code_ids);
                        no_code = no_code.split('INPUTKEY').join('INPUTKEY' + code_ids);
                        no_code = no_code.split('INNERTEXTKEY').join('INNERTEXTKEY' + code_ids);

                        no_code = no_code.split('TIMERKEY').join('TIMERKEY' + code_ids);
                        no_code = no_code.split('LOCATIONKEY').join('LOCATIONKEY' + code_ids);
                        no_code = no_code.split('ELEMENTKEY').join('ELEMENTKEY' + code_ids);
                        no_code = no_code.split('CODEKEY').join('CODEKEY' + code_ids);
                        no_code = no_code.split('CODEGETDATA').join('CODEGETDATA' + code_ids);

                        no_code = no_code.split('Start Code').join('');
                        //  no_code = no_code.split('//').join('');
                        no_code = no_code.split('SHEETURLKEY').join('SHEETKEY' + code_ids);
                        no_code = no_code.split('SHEETIDKEY').join('SHEETIDKEY' + code_ids);
                        no_code = no_code.split('DOCIDKEY').join('DOCIDKEY' + code_ids);
                        no_code = no_code.split('DOCVALUESKEY').join('DOCVALUESKEY' + code_ids);
                        no_code = no_code.split('GMAILVALUEKEY').join('GMAILVALUEKEY' + code_ids);

                        no_code = no_code.split('FILTERINPKEY').join('FILTERINPKEY' + code_ids);
                        no_code = no_code.split('FILTEROPKEY').join('FILTEROPKEY' + code_ids);
                        no_code = no_code.split('FILTERVALKEY').join('FILTERVALKEY' + code_ids);


                        no_code = no_code.split('SHEETVALUESKEY').join('SHEETVALUESKEY' + code_ids);
                        no_code = no_code.split('SHEETNAMEKEY').join('SHEETNAMEKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKURLKEY').join('WEBHOOKURLKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKDATAKEY').join('WEBHOOKDATAKEY' + code_ids);
                        no_code = no_code.split('CSVURLKEY').join('CSVURLKEY' + code_ids);
                        no_code = no_code.split('RIKUNAME').join('RIKUNAME' + code_ids);
                        no_code = no_code.split('RIKUAPIKEY').join('RIKUAPIKEY' + code_ids);
                        no_code = no_code.split('PROMPTKEY').join('PROMPTKEY' + code_ids);
                        no_code = no_code.split('GPT3KEY').join('GPT3KEY' + code_ids);

                        no_code = no_code.split('RIKUINPUT5KEY').join('RIKUINPUT5KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT4KEY').join('RIKUINPUT4KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT1KEY').join('RIKUINPUT1KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT2KEY').join('RIKUINPUT2KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT3KEY').join('RIKUINPUT3KEY' + code_ids);
                        no_code = no_code.split('TIMEOUTKEY').join('TIMEOUTKEY' + code_ids);
                        no_code = no_code.split('TABIDKEY').join('TABIDKEY' + code_ids);
                        no_code = no_code.split('NEWWINDOWKEY').join('NEWWINDOWKEY' + code_ids);
                        no_code = no_code.split('RUNONVARSKEY').join('RUNONVARSKEY' + code_ids);
                        no_code = no_code.split('PAGINATIONKEY').join('PAGINATIONKEY' + code_ids);

                        no_code_container.push({ selector: selector_type, options: options_array, code_ids: code_ids, variablenames: no_code_variable_names, variables: no_code_variables.join(','), style: event.data.style, id: code_ids, no_code: no_code });


                        //document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
                        //document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
                        //document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;
                        drawNoCodeContainer();

                        //googleSignIn


                        window.editor.setValue(old_code + "\n//Generated Script id=" + code_ids + "\n" + new_code + "\n//endcode\n");
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        $(document).on('click', '#googleSignIn', function () {
                            SendMessage("GoogleSignIn", "GoogleSignIn", "event.data");


                        });
                        if (typeof window.editor != 'undefined') {
                            var added_code = "//Generated Script id=" + code_ids;
                            added_code += code;
                            window.editor.setValue(old_code + added_code + "\n//endcode");
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                            document.getElementById('cheatmenu').style.display = 'block';

                        }
                        window.editor.resize();
                        code_ids += 1;
                        currentDelay = 3;

                    };

                } else if (event.data.style == "getdata") {

                    $('HTML').append(`

                <div id="getDataMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
                
                <div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:40%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
                <center><h1 style="color:black !important;">Google Sheets Data Input</h1><br>
                Please enter the google sheets published CSV URL:<br>
                <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='sheet_input_url'  value=''></input><br>
                
                <button style='background-color:white;color:black;' id='saveSheetURL'>Save</button>
                <button style='background-color:white;color:black;' id='cancelSheetURL'>Cancel</button><br>
                
                </center>
                </div>
                
                
                </div>
                `);
                    document.getElementById('cancelSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";
                    };


                    document.getElementById('saveSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";


                        var options_string = `<select class='selectCheat selectBox  select' name="vars" id='CODEGETDATA'>
                    `;
                        for (var jj = 0; jj < scripts.length; jj++) {
                            if (scripts[jj]["name"] && scripts[jj]["name"].length > 0 && scripts[jj]["deleted"] != "true") {
                                options_string += `<option value="` + scripts[jj]["name"] + `">` + scripts[jj]["name"] + `</option>`;
                            }
                        }
                        options_string += `<option selected="selected" value="none">None</option>`;

                        options_string += `</select>`;

                        var sheet_url = document.getElementById('sheet_input_url').value;
                        sendAjax(sheet_url, {}, "GET", `
                    window.data = data;
                    //console.log(data);
                    `);

                        new_code = `
                    var delayKey = 1000;
        setTimeout(function(){
            sendAjax('` + sheet_url + `',{},"GET", \`
            window.data = data;
            \`);         
            //console.log(window.data);       
        },/*delay*/` + currentDelay + `*delayKey);
        
                    `;
                        text = `
                    Start Code
                    Endpoint : Google Sheets<br> 
                    Google Sheets CSV URL:<br>

                    Run Cheat:<br>
                    ` + options_string + `<br>

                    
                    <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='CSVURLKEY'  value='` + sheet_url + `'></input><br>
        
                    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                    End Code
                    var delayKey = 1000;
        setTimeout(function(){
            sendAjax('` + sheet_url + `',{},"GET", \`
            window.data = data;
            /*startCheat*/
            /*stopCheat*/

            \`);         
            //console.log(window.data);       
        },/*delay*/` + currentDelay + `*delayKey);
                    `;

                        var icon_code = '';
                        if (text.includes(`getAttribute('innerText')`)) {
                            text = text.split(`getAttribute('innerText')`).join('innerText')
                        }
                        old_code = window.editor.getValue();

                        if (text.includes("End Code")) {
                            code = text.split("End Code")[1];
                            no_code = text.split("End Code")[0];
                        } else {
                            code = text;
                        }





                        var img_src = "https://cheatlayer.com/icon2.png";
                        var Title = "";
                        //Tesseract

                        img_src = "https://cheatlayer.com/images/textarea/text1.png";
                        Title += "Get Data GSheets</h2>";

                        no_code = no_code.split("textarea").join("textarea style='width:100%'");
                        no_code = no_code.split(".getAttribute('innerText')").join(".innerText");

                        icon_code += '<h2 class="cheatlayer"style="color:black;"><img style="margin:20px;pointer-events: none;background-color:#FFFFFF;width:50px;height:50px;border-radius:10px;border:1px solid black;padding:5px;margin:5px;" src=\"';
                        icon_code += img_src;
                        icon_code += '\"></img> ' + Title;

                        no_code = icon_code + "" + no_code + "";
                        (no_code.split('SELECTORKEY'));
                        no_code = no_code.split('SELECTORKEY').join('SELECTORKEY' + code_ids);
                        no_code = no_code.split('XPATHKEY').join('XPATHKEY' + code_ids);
                        no_code = no_code.split('ELEMENTSELECTKEY').join('ELEMENTSELECTKEY' + code_ids);

                        no_code = no_code.split('CSSKEY').join('CSSKEY' + code_ids);

                        no_code = no_code.split('DELAYKEY').join('DELAYKEY' + code_ids);
                        no_code = no_code.split('KEYPRESSKEY').join('KEYPRESSKEY' + code_ids);
                        no_code = no_code.split('PRINTKEY').join('PRINTKEY' + code_ids);

                        no_code = no_code.split('REMOVEKEY').join('REMOVEKEY' + code_ids);
                        no_code = no_code.split('VARIABLEKEY').join('VARIABLEKEY' + code_ids);

                        no_code = no_code.split('VALUEKEY').join('VALUEKEY' + code_ids);
                        no_code = no_code.split('INPUTKEY').join('INPUTKEY' + code_ids);
                        no_code = no_code.split('INNERTEXTKEY').join('INNERTEXTKEY' + code_ids);

                        no_code = no_code.split('TIMERKEY').join('TIMERKEY' + code_ids);
                        no_code = no_code.split('LOCATIONKEY').join('LOCATIONKEY' + code_ids);
                        no_code = no_code.split('ELEMENTKEY').join('ELEMENTKEY' + code_ids);
                        no_code = no_code.split('CODEKEY').join('CODEKEY' + code_ids);
                        no_code = no_code.split('CODEGETDATA').join('CODEGETDATA' + code_ids);

                        no_code = no_code.split('Start Code').join('');
                        //  no_code = no_code.split('//').join('');
                        no_code = no_code.split('SHEETURLKEY').join('SHEETKEY' + code_ids);
                        no_code = no_code.split('SHEETIDKEY').join('SHEETIDKEY' + code_ids);
                        no_code = no_code.split('DOCIDKEY').join('DOCIDKEY' + code_ids);
                        no_code = no_code.split('DOCVALUESKEY').join('DOCVALUESKEY' + code_ids);
                        no_code = no_code.split('GMAILVALUEKEY').join('GMAILVALUEKEY' + code_ids);

                        no_code = no_code.split('SHEETVALUESKEY').join('SHEETVALUESKEY' + code_ids);
                        no_code = no_code.split('SHEETNAMEKEY').join('SHEETNAMEKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKURLKEY').join('WEBHOOKURLKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKDATAKEY').join('WEBHOOKDATAKEY' + code_ids);
                        no_code = no_code.split('CSVURLKEY').join('CSVURLKEY' + code_ids);
                        no_code = no_code.split('RIKUNAME').join('RIKUNAME' + code_ids);
                        no_code = no_code.split('RIKUAPIKEY').join('RIKUAPIKEY' + code_ids);
                        no_code = no_code.split('PROMPTKEY').join('PROMPTKEY' + code_ids);
                        no_code = no_code.split('GPT3KEY').join('GPT3KEY' + code_ids);

                        no_code = no_code.split('RIKUINPUT5KEY').join('RIKUINPUT5KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT4KEY').join('RIKUINPUT4KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT1KEY').join('RIKUINPUT1KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT2KEY').join('RIKUINPUT2KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT3KEY').join('RIKUINPUT3KEY' + code_ids);
                        no_code = no_code.split('TIMEOUTKEY').join('TIMEOUTKEY' + code_ids);
                        no_code = no_code.split('TABIDKEY').join('TABIDKEY' + code_ids);
                        no_code = no_code.split('NEWWINDOWKEY').join('NEWWINDOWKEY' + code_ids);
                        no_code = no_code.split('RUNONVARSKEY').join('RUNONVARSKEY' + code_ids);
                        no_code = no_code.split('PAGINATIONKEY').join('PAGINATIONKEY' + code_ids);

                        no_code_container.push({ selector: selector_type, options: options_array, code_ids: code_ids, variablenames: no_code_variable_names, variables: no_code_variables.join(','), style: event.data.style, id: code_ids, no_code: no_code });


                        //document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
                        //document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
                        //document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;
                        drawNoCodeContainer();

                        //googleSignIn


                        window.editor.setValue(old_code + "\n//Generated Script id=" + code_ids + "\n" + new_code + "\n//endcode\n");
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        $(document).on('click', '#googleSignIn', function () {
                            SendMessage("GoogleSignIn", "GoogleSignIn", "event.data");


                        });
                        if (typeof window.editor != 'undefined') {
                            var added_code = "//Generated Script id=" + code_ids;
                            added_code += code;
                            window.editor.setValue(old_code + added_code + "\n//endcode");
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                            document.getElementById('cheatmenu').style.display = 'block';

                        }
                        window.editor.resize();
                        code_ids += 1;
                        currentDelay = 3;

                    };




                } else if (event.data.style == "gcal") {
                    //                    alert('Please note that google is still reviewing our direct API request, so you may be blocked until they complete review. Early users are grandfathered in.')


                    new_code = `
            
            var delayKey = 1000;
            setTimeout(function(){
                var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                google_calendar_append(element.innerText,window.location.href);       
            },/*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
            Endpoint : Google Calendar<br> 
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                google_calendar_append(element.innerText,window.location.href);       
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "gdocs") {


                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='DOCVALUESKEY'>
                `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ',' + storage_vars[jj];
                        }
                    }
                    options_string += `<option selected="selected" value="element.innerText">Inner Text</option>`;

                    options_string += `<option value="` + no_code_variables_string + `">` + no_code_variables_string + `</option>`;
                    options_string += `</select>`;
                    //                alert('Please note that google is still reviewing our direct API request, so you may be blocked until they complete review. Early users are grandfathered in.')

                    new_code = `
            
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
            google_docs_append('GOOGLE_DOCS_ID',element.innerText);       
            
            `;
                    text = `
            Start Code
            Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
            Endpoint : Google Sheets<br> 
            Doc ID:<br>
            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='DOCIDKEY' value='GOOGLE_DOCS_ID'></input><br>
            Doc Input:<br>
             ` + options_string + `<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                google_docs_append('GOOGLE_DOCS_ID',element.innerText);       
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "print") {


                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='PRINTKEY'>
                `;
                    options_string += `<option value="href">Link Destination .href</option>`;
                    options_string += `<option value="src">Image source .src</option>`;
                    options_string += `<option value="innerText">Inner Text .innerText</option>`;
                    options_string += `<option selected="selected" value="Custom Attribute">Custom Attribute</option>`;

                    options_string += `</select>`;

                    new_code = `
        
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
            //console.log(element.innerText);
            
            `;
                    text = `
            Start Code
            Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
            Endpoint : Web Console<br>
            Attribute:<br>
            ` + options_string + `
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                //console.log(element.innerText);
            },/*delay*/` + currentDelay + `*delayKey);
            `;
                } else if (event.data.style == "script") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='CODEKEY'>
      `;
                    for (var jj = 0; jj < scripts.length; jj++) {
                        if (scripts[jj]["name"] && scripts[jj]["name"].length > 0 && scripts[jj]["deleted"] != "true") {
                            options_string += `<option value="` + scripts[jj]["name"] + `">` + scripts[jj]["name"] + `</option>`;
                        }
                    }
                    options_string += `</select>`;

                    var options_string2 = `<select class='selectCheat selectBox  select' name="vars" id='RUNONVARSKEY'>
        `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string2 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string2 += `<option selected='selected' value="none">None</option>`;

                    options_string2 += `</select>`;


                    var options_string3 = `<select class='selectCheat selectBox  select' name="vars" id='TABIDKEY'>
        `;
                    if (typeof window.tabs != "undefined") {
                        for (var jj = 0; jj < window.tabs.length; jj++) {

                            options_string3 += `<option value="` + window.tabs[jj]["id"] + `">` + window.tabs[jj]["id"] + ` ( ` + window.tabs[jj]["url"] + `)</option>`;

                        }
                    }
                    options_string3 += `<option selected='selected' value="-1">None</option>`;

                    options_string3 += `</select>`;


                    var options_string4 = `<select class='selectCheat selectBox  select' name="vars" id='TIMEOUTKEY'>
          `;

                    options_string4 += `<option selected='selected' value="30">30 seconds</option>`;
                    options_string4 += `<option value="60">60 seconds</option>`;
                    options_string4 += `<option value="120">120 seconds</option>`;
                    options_string4 += `<option value="300">300 seconds</option>`;
                    options_string4 += `<option value="1500">1500 seconds</option>`;
                    options_string4 += `<option value="300000">300000 seconds</option>`;


                    options_string4 += `</select>`;

                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
                var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                runOnTab(element.innerText,'SCRIPT_NAME');
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                    text = `
            Start Code
            Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
            Endpoint : Script 
            <br>
            Code:<br>
            ` + options_string + `
            <br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            Timeout: <br>
            ` + options_string4 + `
            <br>
            Tab ID: <br>
            ` + options_string3 + `
            <br>
            New Window: <br><select class='selectCheat selectBox  select'  id='NEWWINDOWKEY' ><option selected='selected' value="false">False</option><option value="true">True</option></select><br>
          
            Pagination URL:<br> <input class='cheatlayer cheat-input' id='PAGINATIONKEY' type="text" value=""></input><br>

            Custom Data: <br>` + options_string2 + `<br>

            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                runOnTab(element.href,/*script*/'SCRIPT_NAME',/*timeout*/30,/*options*/{/*id*/id:-1, /*newWindow*/newWindow:false,/*custom1*/data1:"none",/*custom2*/data2:"none",/*custom3*/data3:"none"});
            },/*delay*/` + currentDelay + `*delayKey);
            `;

                } else if (event.data.style == "click") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
            
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
            element.click();
            
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                    text = `
            Start Code
            Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
            Endpoint : Click Element<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
            
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
            element.click();
            
            },/*delay*/` + currentDelay + `*delayKey);
            `;
                } else if (event.data.style == "variable") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='VARIABLEATTRKEY'>
            `;

                    options_string += `<option value="innerText">Inner Text .innerText</option>`;
                    options_string += `<option value="href">Link Destination .href</option>`;
                    options_string += `<option value="URL">Page URL</option>`;

                    options_string += `<option value="src">Image source .src</option>`;
                    options_string += `<option value="Custom Attribute">Custom Attribute</option>`;

                    options_string += `</select>`;
                    total_variables++;
                    no_code_variables.push(`_variable` + total_variables);
                    no_code_variable_names.push("Saved Variable " + total_variables)

                    new_code = `
            var _variable` + total_variables + ` = 'none';

            var delayKey = 1000;
            setTimeout(function(){
            
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
            _variable` + total_variables + ` = element.innerText;
        
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                    text = `
            Start Code
            Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
            Variable Name: <br>_variable` + total_variables + `<br>
            Endpoint : Variable<br>
            Attribute:<br>
            ` + options_string + `<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var _variable` + total_variables + ` = 'none';
     
            var delayKey = 1000;
            setTimeout(function(){
            
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
            _variable` + total_variables + ` =/*attribute*/element.innerText;
        
            
               if(typeof cheat_data == 'undefined'){
                cheat_data = {}
            }
           
            if("_variable` + total_variables + `"  + "_" + window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"") in cheat_data){
                cheat_data["_variable` + total_variables + `"  + "_" + window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"")].push(element.innerText);

            }else{
            cheat_data["_variable` + total_variables + `"   + "_" + window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"")] = /*attribute*/[element.innerText];
            }
            
            //console.log(element.innerText)
            //console.log(cheat_data)
            //console.log(tab_id)
        function storeUserPrefs() {
                var key = "cheatlayer"
                 //console.log(cheat_data)
                 var out_obj = JSON.parse(\`` + JSON.stringify(storage_json) + `\`);
                 out_obj[window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"")] = cheat_data;
                 var testPrefs = JSON.stringify(out_obj);
                var jsonfile = {};
                jsonfile[key] = testPrefs;
                chrome.storage.sync.set(jsonfile, function () {
                    //console.log('Saved', key, testPrefs);
                });
            
            }
            storeUserPrefs();


            },/*delay*/` + currentDelay + `*delayKey);
            
          


            
            `;
                } else if (event.data.style == "cloud") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
                var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                sendAjax('https://cheatlayer.com/user/saveTemp',{TempA: element.href, text: elements[kk].innerText},'post');
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                    text = `
            Start Code
            Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
            Endpoint : Cloud<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                sendAjax('https://cheatlayer.com/user/saveTemp',{TempA: element.href, text: elements[kk].innerText},'post');
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "input") {
                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='INPUTKEY'>
            `;

                    if (selected_element.nodeName == 'SELECT') {
                        for (var kk = 0; kk < selected_element.options.length; kk++) {

                            options_string += `<option value="` + selected_element.options[kk].value + `">` + selected_element.options[kk].text + `</option>`;

                        }
                    }
                    if (typeof window.API != 'undefined') {
                        //console.log('window.API')

                        //console.log(window.API)
                        //console.log(JSON.flatten(window.API))
                        var flat = JSON.flatten(window.API);

                        for (var key in flat) {
                            if (flat.hasOwnProperty(key)) {
                                //console.log(key + " -> " + flat[key]);
                                options_string += `<option value="'` + flat[key] + `'">` + key + ` : ` + flat[key] + `</option>`;

                            }
                        }

                    }
                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    options_string += `<option selected="selected" value="">None</option>`;

                    options_string += `<option value="Custom">Custom</option>`;

                    options_string += `</select>`;


                    var input_val = 'TEST_VALUE';
                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        input_val = window.data[inputCounter++];
                    }

                    new_code = `
        
            var delayKey = 1000;
            setTimeout(function(){
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
            element.value = '` + input_val + `';
            }, /*delay*/` + currentDelay + `*delayKey);
            
            
            `;
                    text = `
            Start Code
            Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
            Endpoint : Input<br>
            ` + options_string + `
            <br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
            element.value = '` + input_val + `';
            }, /*delay*/` + currentDelay + `*delayKey);

            `;
                } else if (event.data.style == "download") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
            
                var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                if(element.src){
                    downloadFile(element.src);
                   }else if(element.href){
                    downloadFile(element.href);
                }else{
                    downloadFile(element.innerText);

                }
     
     
            }, /*delay*/` + currentDelay + `*delayKey);
            
            
            `;
                    text = `
            Start Code
            Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
            Endpoint : Download File<br>

            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
            
                var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                if(element.src){
                    downloadFile(element.src);
                   }else if(element.href){
                    downloadFile(element.href);
                }else{
                    downloadFile(element.innerText);

                }
     
     
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "innerText") {
                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='INNERTEXTKEY'>
            `;


                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    options_string += `<option value="` + no_code_variables_string + `">` + no_code_variables_string + `</option>`;
                    options_string += `</select>`;


                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
            element.innerText = 'TEST_VALUE';
        
            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
            Endpoint : Set Inner Text<br> 
            ` + options_string + `
            <br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
            element.innerText = 'TEST_VALUE';
        
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "keypress") {
                    //console.log("try storage")
                    //console.log(storage_vars)


                    var options_string = `<select  class='selectCheat selectBox  select' name="vars" id='KEYPRESSKEY'>
            `;
                    //console.log(storage_vars)
                    if (typeof window.API != 'undefined') {
                        //console.log('window.API')

                        //console.log(window.API)
                        //console.log(JSON.flatten(window.API))
                        var flat = JSON.flatten(window.API);

                        for (var key in flat) {
                            if (flat.hasOwnProperty(key)) {
                                //console.log(key + " -> " + flat[key]);
                                options_string += `<option value="'` + flat[key] + `'">` + key + ` : ` + flat[key] + `</option>`;

                            }
                        }

                    }

                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                        }
                    }

                    for (var jj = 0; jj < input_vars.length; jj++) {
                        if (input_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + input_vars[jj] + `">` + input_vars[jj] + `</option>`;
                        }
                    }


                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    //storage_vars




                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ',' + storage_vars[jj];
                        }
                    }
                    options_string += `<option selected="selected" value="">None</option>`;
                    options_string += `<option value="Webhook">Webhook</option>`;

                    options_string += `<option value="Custom">Custom</option>`;

                    options_string += `</select>`;

                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
                var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                element.click();

                    element.dispatchEvent(new Event('focus'));
                    element.focus();

                    simulateKey('a');        
            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            Endpoint : Keypress<br> ` + options_string + `<br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
                element.click();
                var newData = CSVToArray(window.data);
                    element.dispatchEvent(new Event('focus'));
                    element.focus();
                    simulateKey('a');
        
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "hover") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
            element.dispatchEvent(new MouseEvent('mouseover', { 'view': window, 'bubbles': true, 'cancelable': true }));
     
            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
            Endpoint : Hover<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
            element.dispatchEvent(new MouseEvent('mouseover', { 'view': window, 'bubbles': true, 'cancelable': true }));
           
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "screenshot") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
 
                    html2canvas(element, { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
                        document.body.appendChild(canvas);
                              canvas.setAttribute("id", "canvas");
                         var link = document.createElement('a');
                      link.download = 'webpage.png';
                      link.href = document.getElementById('canvas').toDataURL()
                      link.click();
                    
                    });
    
            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
            Endpoint : Screenshot<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var element = lookupElementByXPath(\`` + event.data.xpath + `\`);

                    html2canvas(element, { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
                        document.body.appendChild(canvas);
                              canvas.setAttribute("id", "canvas");
                         var link = document.createElement('a');
                      link.download = 'webpage.png';
                      link.href = document.getElementById('canvas').toDataURL()
                      link.click();
                    
                    });
  
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "forward") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
                window.history.forward();
            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            Endpoint : Go Forward<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                window.history.forward();
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "back") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
                window.history.back()
                }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            Endpoint : Go Back<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                window.history.back()
              }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "scroll") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
            element.scrollTop = element.scrollHeight;
            
            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
            Endpoint : Scroll<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
            var element = lookupElementByXPath(\`` + event.data.xpath + `\`);
            element.scrollTop = element.scrollHeight;
            
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                }



            } else if (selector_type == "usecss") {


                if (event.data.style == "excel") {

                    new_code = `
      
    //endcode
    const workbook = new ExcelJS.Workbook();
    
    
    const worksheet = workbook.addWorksheet('New Sheet');
    //console.log(cheat_data)
    //console.log()
    var columns = [
    ];
    var keys = Object.keys(cheat_data);
    for(var kk = 0; kk < keys.length; kk++){
        columns.push({header:keys[kk], key:keys[kk]})
        
    }
    worksheet.columns = columns;
    //console.log("Rows")
    //console.log(cheat_data[keys[0]])
    for(var kk = 0; kk < cheat_data[keys[0]].length; kk++){
    var data = {}
    
    for(var jj = 0; jj < keys.length; jj++){
        data[keys[jj]] = cheat_data[keys[jj]][kk]
    }
        const row = worksheet.addRow(data);
    
    }
    
    workbook.xlsx.writeBuffer().then((data) => {
      const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8' });
      saveAs(blob, 'test.xlsx');
    });//Generated Script id=1//Generated Script id=
    
        `;
                    text = `
        Start Code
        Endpoint : Excel File<br> 
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
       
        End Code
        var delayKey = 1000;
            setTimeout(function(){
     
    //endcode
    const workbook = new ExcelJS.Workbook();
    
    
    const worksheet = workbook.addWorksheet('New Sheet');
    //console.log(cheat_data)
    //console.log()
    var columns = [
    ];
    var keys = Object.keys(cheat_data);
    for(var kk = 0; kk < keys.length; kk++){
        columns.push({header:keys[kk], key:keys[kk]})
        
    }
    worksheet.columns = columns;
    //console.log("Rows")
    //console.log(cheat_data[keys[0]])
    for(var kk = 0; kk < cheat_data[keys[0]].length; kk++){
    var data = {}
    
    for(var jj = 0; jj < keys.length; jj++){
        data[keys[jj]] = cheat_data[keys[jj]][kk]
    }
        const row = worksheet.addRow(data);
    
    }
    
    workbook.xlsx.writeBuffer().then((data) => {
      const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8' });
      saveAs(blob, 'test.xlsx');
    });//Generated Script id=1//Generated Script id=
    
            },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "rss") {

                    $('HTML').append(`
    
            <div id="getDataMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
            
            <div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:40%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
            <center><h1 style="color:black !important;">RSS Feed Input</h1><br>
            Please enter the RSS URL:<br>
            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='sheet_input_url'  value=''></input><br>
            
            <button style='background-color:white;color:black;' id='saveSheetURL'>Save</button>
            <button style='background-color:white;color:black;' id='cancelSheetURL'>Cancel</button><br>
            
            </center>
            </div>
            
            
            </div>
            `);
                    document.getElementById('cancelSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";
                    };


                    document.getElementById('saveSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";


                        var sheet_url = document.getElementById('sheet_input_url').value;
                        getXML(sheet_url, `
                window.data = data;
                //console.log(data);
                `);

                        new_code = `
                var delayKey = 1000;
    setTimeout(function(){
        getXML('` + sheet_url + `', \`
        window.data = data;
        \`);         
        //console.log(window.data);       
    },/*delay*/` + currentDelay + `*delayKey);
    
                `;
                        text = `
                Start Code
                Endpoint : RSS Input<br> 
                RSS URL:<br>
                <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='RSSURLKEY'  value='` + sheet_url + `'></input><br>
    
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
    setTimeout(function(){
        getXML('` + sheet_url + `', \`
        window.data = data;
        /*startCheat*/
        /*stopCheat*/
        \`);       
        //console.log(window.data);       
    },/*delay*/` + currentDelay + `*delayKey);
                `;

                        var icon_code = '';
                        old_code = window.editor.getValue();

                        if (text.includes("End Code")) {
                            code = text.split("End Code")[1];
                            no_code = text.split("End Code")[0];
                        } else {
                            code = text;
                        }





                        var img_src = "https://cheatlayer.com/icon2.png";
                        var Title = "";
                        //Tesseract

                        img_src = chrome.runtime.getURL("rss.png");
                        Title += "RSS</h2>";


                        no_code = no_code.split("textarea").join("textarea style='width:100%'");
                        no_code = no_code.split(".getAttribute('innerText')").join(".innerText");

                        icon_code += '<h2 class="cheatlayer"style="color:black;"><img style="margin:20px;pointer-events: none;background-color:#FFFFFF;width:50px;height:50px;border-radius:10px;border:1px solid black;padding:5px;margin:5px;" src=\"';
                        icon_code += img_src;
                        icon_code += '\"></img> ' + Title;

                        no_code = icon_code + "" + no_code + "";
                        (no_code.split('SELECTORKEY'));
                        no_code = no_code.split('SELECTORKEY').join('SELECTORKEY' + code_ids);
                        no_code = no_code.split('XPATHKEY').join('XPATHKEY' + code_ids);
                        no_code = no_code.split('CSSKEY').join('CSSKEY' + code_ids);
                        no_code = no_code.split('ELEMENTSELECTKEY').join('ELEMENTSELECTKEY' + code_ids);

                        no_code = no_code.split('DELAYKEY').join('DELAYKEY' + code_ids);
                        no_code = no_code.split('KEYPRESSKEY').join('KEYPRESSKEY' + code_ids);
                        no_code = no_code.split('PRINTKEY').join('PRINTKEY' + code_ids);

                        no_code = no_code.split('REMOVEKEY').join('REMOVEKEY' + code_ids);
                        no_code = no_code.split('VARIABLEKEY').join('VARIABLEKEY' + code_ids);

                        no_code = no_code.split('VALUEKEY').join('VALUEKEY' + code_ids);
                        no_code = no_code.split('INPUTKEY').join('INPUTKEY' + code_ids);
                        no_code = no_code.split('INNERTEXTKEY').join('INNERTEXTKEY' + code_ids);

                        no_code = no_code.split('TIMERKEY').join('TIMERKEY' + code_ids);
                        no_code = no_code.split('LOCATIONKEY').join('LOCATIONKEY' + code_ids);
                        no_code = no_code.split('ELEMENTKEY').join('ELEMENTKEY' + code_ids);
                        no_code = no_code.split('CODEKEY').join('CODEKEY' + code_ids);
                        no_code = no_code.split('CODEGETDATA').join('CODEGETDATA' + code_ids);

                        no_code = no_code.split('Start Code').join('');
                        //  no_code = no_code.split('//').join('');
                        no_code = no_code.split('SHEETURLKEY').join('SHEETKEY' + code_ids);
                        no_code = no_code.split('SHEETIDKEY').join('SHEETIDKEY' + code_ids);
                        no_code = no_code.split('DOCIDKEY').join('DOCIDKEY' + code_ids);
                        no_code = no_code.split('DOCVALUESKEY').join('DOCVALUESKEY' + code_ids);
                        no_code = no_code.split('GMAILVALUEKEY').join('GMAILVALUEKEY' + code_ids);

                        no_code = no_code.split('SHEETVALUESKEY').join('SHEETVALUESKEY' + code_ids);
                        no_code = no_code.split('SHEETNAMEKEY').join('SHEETNAMEKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKURLKEY').join('WEBHOOKURLKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKDATAKEY').join('WEBHOOKDATAKEY' + code_ids);
                        no_code = no_code.split('CSVURLKEY').join('CSVURLKEY' + code_ids);
                        no_code = no_code.split('RIKUNAME').join('RIKUNAME' + code_ids);
                        no_code = no_code.split('RIKUAPIKEY').join('RIKUAPIKEY' + code_ids);
                        no_code = no_code.split('PROMPTKEY').join('PROMPTKEY' + code_ids);
                        no_code = no_code.split('GPT3KEY').join('GPT3KEY' + code_ids);

                        no_code = no_code.split('RIKUINPUT5KEY').join('RIKUINPUT5KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT4KEY').join('RIKUINPUT4KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT1KEY').join('RIKUINPUT1KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT2KEY').join('RIKUINPUT2KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT3KEY').join('RIKUINPUT3KEY' + code_ids);
                        no_code = no_code.split('TIMEOUTKEY').join('TIMEOUTKEY' + code_ids);
                        no_code = no_code.split('TABIDKEY').join('TABIDKEY' + code_ids);
                        no_code = no_code.split('NEWWINDOWKEY').join('NEWWINDOWKEY' + code_ids);
                        no_code = no_code.split('RUNONVARSKEY').join('RUNONVARSKEY' + code_ids);
                        no_code = no_code.split('PAGINATIONKEY').join('PAGINATIONKEY' + code_ids);

                        no_code_container.push({ selector: selector_type, options: options_array, code_ids: code_ids, variablenames: no_code_variable_names, variables: no_code_variables.join(','), style: event.data.style, id: code_ids, no_code: no_code });


                        //document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
                        //document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
                        //document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;
                        drawNoCodeContainer();

                        //googleSignIn


                        window.editor.setValue(old_code + "\n//Generated Script id=" + code_ids + "\n" + new_code + "\n//endcode\n");
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        $(document).on('click', '#googleSignIn', function () {
                            SendMessage("GoogleSignIn", "GoogleSignIn", "event.data");


                        });
                        if (typeof window.editor != 'undefined') {
                            var added_code = "//Generated Script id=" + code_ids;
                            added_code += code;
                            window.editor.setValue(old_code + added_code + "\n//endcode");
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                            document.getElementById('cheatmenu').style.display = 'block';

                        }
                        window.editor.resize();
                        code_ids += 1;
                        currentDelay = 3;

                    };




                } else if (event.data.style == "gmail") {
                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='GMAILVALUEKEY'>
            `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ` + ' ' + ` + no_code_container[jj]["variables"];
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ` + ' ' + ` + storage_vars[jj];
                        }
                    }
                    options_string += `<option value="element.src">Image Source</option>`;
                    options_string += `<option value="element.href">Link Destination</option>`;
                    if (no_code_variables_string.length > 0) {
                        options_string += `<option  value="element.innerText + ' ' + ` + no_code_variables_string + `">element.innerText + ' ' + ` + no_code_variables_string + `</option>`;

                        options_string += `<option  selected='selected' value="element.innerText">Inner Text</option>`;
                    } else {
                        options_string += `<option  selected='selected' value="element.innerText">Inner Text element.innerText</option>`;
                    }
                    options_string += `</select>`;


                    new_code = `
     
        var delayKey = 1000;
            setTimeout(function(){
                var element = document.querySelector('` + event.data.cssselector + `');
    
                 var to = '` + user_email + `';
                 var subject = 'Cheat Layer Automation Alert';
                 var body = element.innerText;
                 var gmailURL = 'https://mail.google.com/mail/u/0/?fs=1&to=' +to + '&su=' + subject + '&body=' +body + '&tf=cm';
          
                    var timeout = 30;
                    var script = \`
                    var delayKey = 1000;
                    setTimeout(function(){
                    var elements = document.getElementsByTagName('DIV');
                    function slow(kk){
                     if(typeof elements[kk] != 'undefined' && elements[kk].getAttribute('id') && elements[kk].getAttribute('id').indexOf(":oz") >= 0){
                            elements[kk].click();
                            if(kk < elements.length){
                                setTimeout(function(){slow(kk+1)},10000);
                            }
                        }else{
                            if(kk < elements.length){
                                setTimeout(function(){slow(kk+1)},1);
                            }
                        }
                    }
                    slow(0);
                    },/*delay*/1*delayKey);\`;
    
                runOnTab(gmailURL, script, 30, {newWindow:true, id:-1})
    
    
            },/*delay*/` + currentDelay + `*delayKey);
        `;
                    text = `
        Start Code
        Endpoint : Gmail<br> 
        
        Body: <br>
    ` + options_string + `
    
        <br>
    
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
       
        End Code
        var delayKey = 1000;
            setTimeout(function(){
                var element = document.querySelector('` + event.data.cssselector + `');
    
                 var to = '` + user_email + `';
                 var subject = 'Cheat Layer Automation Alert';
                 var body = element.innerText;
                 var gmailURL = 'https://mail.google.com/mail/u/0/?fs=1&to=' +to + '&su=' + subject + '&body=' +body + '&tf=cm';
          
                    var timeout = 30;
                    var script = \`
                    var delayKey = 1000;
                    setTimeout(function(){
                    var elements = document.getElementsByTagName('DIV');
                    function slow(kk){
                     if(typeof elements[kk] != 'undefined' && elements[kk].getAttribute('id') && elements[kk].getAttribute('id').indexOf(":oz") >= 0){
                            elements[kk].click();
                            if(kk < elements.length){
                                setTimeout(function(){slow(kk+1)},10000);
                            }
                        }else{
                            if(kk < elements.length){
                                setTimeout(function(){slow(kk+1)},1);
                            }
                        }
                    }
                    slow(0);
                    },/*delay*/1*delayKey);\`;
    
                runOnTab(gmailURL, script, 30, {newWindow:true, id:-1})
    
    
            },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "filter") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='FILTERINPKEY'>
            `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ',' + storage_vars[jj];
                        }
                    }
                    options_string += `<option value="element.src">Image Source</option>`;
                    options_string += `<option value="element.href">Link Destination</option>`;

                    options_string += `<option  selected='selected' value="element.innerText">Inner Text element.innerText</option>`;

                    options_string += `</select>`;


                    new_code = `
        var delayKey = 1000;
        setTimeout(function(){
        /*start filter code*/
        /*end filter code*/
    
        },/*delay*/` + currentDelay + `*delayKey);
        `;
                    text = `
        Start Code
        Endpoint : Filter<br> 
        
        Filter Operations:<br> <select class='selectCheat selectBox  select' name="vars" id='FILTEROPKEY'>
        <option value='regex'>Regex Filter</option>
        <option selected="selected" value='contains'>Contains</option>
        <option value='notcontains'>Does Not Contain</option>
        <option value='less'>Less Than</option>
        <option value='greater'>Greater Than</option>
        <option value='dateless'>Date Less Than</option>
        <option value='dategreater'>Date Greater Than</option>
        <option value='matches'>Matches</option>
    
        </select>
        Value: <br><input class='cheatlayer cheat-input'style='background-color:white; color:black' type="text" id='FILTERVALKEY'  style='background-color:white; color:black'type="text" value=""></input><br>
        
        <br>
        Variable: <br>
    ` + options_string + `
    
        <br>
    
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
       
        End Code
        var delayKey = 1000;
            setTimeout(function(){
            /*start filter code*/
            /*end filter code*/
    
            },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "pdf") {

                    total_variables++;
                    no_code_variables.push(`window.pdf`);
                    no_code_variable_names.push("PDF Output " + total_variables)
                    new_code = `
        
        var element = document.querySelector('` + event.data.cssselector + `');

        function gettext(pdfUrl){
            var pdf = pdfjsLib.getDocument(pdfUrl);
            //console.log(pdf);
            return pdf.promise.then(function(pdf) { // get all pages text
              //console.log(pdf)
              var maxPages = pdf._pdfInfo.numPages;
              var countPromises = []; // collecting all page promises
              for (var j = 1; j <= maxPages; j++) {
                var page = pdf.getPage(j);
          
                var txt = "";
                countPromises.push(page.then(function(page) { // add page promise
                  var textContent = page.getTextContent();
                  return textContent.then(function(text){ // return content promise
                    return text.items.map(function (s) { return s.str; }).join(''); // value page text 
                  });
                }));
              }
              // Wait for all pages and join text
              return Promise.all(countPromises).then(function (texts) {
                return texts.join('');
              });
            });
          }
              pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.15.349/build/pdf.worker.js';
           
          // waiting on gettext to finish completion, or error
          gettext(element.href).then(function (text) {
            //console.log('parse ' + text); 
            window.pdf = text; 
          }, 
          function (reason) {
            console.error(reason);
          });
           
        
        `;
                    text = `
        Start Code
        CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
        Endpoint: PDF to text<br>
        <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PDFKEY' value='element.href'></input><br>
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
        End Code
        var delayKey = 1000;
        setTimeout(function(){
            var element = document.querySelector('` + event.data.cssselector + `');

            function gettext(pdfUrl){
                var pdf = pdfjsLib.getDocument(pdfUrl);
                //console.log(pdf);
                return pdf.promise.then(function(pdf) { // get all pages text
                  //console.log(pdf)
                  var maxPages = pdf._pdfInfo.numPages;
                  var countPromises = []; // collecting all page promises
                  for (var j = 1; j <= maxPages; j++) {
                    var page = pdf.getPage(j);
              
                    var txt = "";
                    countPromises.push(page.then(function(page) { // add page promise
                      var textContent = page.getTextContent();
                      return textContent.then(function(text){ // return content promise
                        return text.items.map(function (s) { return s.str; }).join(''); // value page text 
                      });
                    }));
                  }
                  // Wait for all pages and join text
                  return Promise.all(countPromises).then(function (texts) {
                    return texts.join('');
                  });
                });
              }
                  pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.15.349/build/pdf.worker.js';
               
              // waiting on gettext to finish completion, or error
              gettext(element.href).then(function (text) {
                //console.log('parse ' + text); 
                window.pdf = text; 
              }, 
              function (reason) {
                console.error(reason);
              });
          
                },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "OCR") {

                    new_code = `
        
        var element = document.querySelector('` + event.data.cssselector + `');
        OCR(element);
     
        
        `;
                    text = `
        Start Code
        CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
        Endpoint: OCR<br>
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
        End Code
        var delayKey = 1000;
        setTimeout(function(){
            var element = document.querySelector('` + event.data.cssselector + `');
            OCR(element);

                },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "gsheets") {
                    if (true) {
                        var options_string = `<select class='selectCheat selectBox  select' name="vars" id='SHEETVALUESKEY'>
                `;
                        for (var jj = 0; jj < no_code_container.length; jj++) {
                            if (no_code_container[jj]["variables"].length > 0) {
                                options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                                no_code_variables_string += ',' + no_code_container[jj]["variables"];
                            }
                        }
                        options_string += `<option value="element.src">Image Source</option>`;
                        options_string += `<option value="element.href">Link Destination</option>`;
                        if (no_code_variables_string.length > 0) {
                            options_string += `<option  selected='selected' value="element.innerText` + no_code_variables_string + `">Inner Text element.innerText` + no_code_variables_string + `</option>`;
                            options_string += `<option  value="element.innerText">Inner Text</option>`;
                        } else {
                            options_string += `<option  selected='selected' value="element.innerText">Innert Text</option>`;
                        }
                        options_string += `</select>`;
                        //  alert('Please note that google is still reviewing our direct API request, so you may be blocked until they complete review. Early users are grandfathered in.')

                        new_code = `
        
        var element = document.querySelector('` + event.data.cssselector + `');
        google_sheets_add_row('GOOGLE_SHEETS_ID',/*name*/'Sheet1',[element.innerText` + no_code_variables_string + `]);       
       
        
        `;
                        text = `
        Start Code
        CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
        Endpoint: Google Sheets<br>
        URL:<br>
<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='SHEETIDKEY' value='GOOGLE_SHEETS_ID'></input><br>
Sheet Name:<br>
<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='SHEETNAMEKEY'  value='Sheet1'></input><br>
Sheet Values:<br>
` + options_string + `<br>
Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
        <br>
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
        End Code
        var delayKey = 1000;
        setTimeout(function(){
            var element = document.querySelector('` + event.data.cssselector + `');
            google_sheets_add_row('GOOGLE_SHEETS_ID',/*name*/'Sheet1',[element.innerText` + no_code_variables_string + `]);       
        },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                    }
                } else if (event.data.style == "getdata") {

                    $('HTML').append(`

            <div id="getDataMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
            
            <div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:40%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
            <center><h1 style="color:black !important;">Google Sheets Data Input</h1><br>
            Please enter the google sheets published CSV URL:<br>
            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='sheet_input_url'  value=''></input><br>
            
            <button style='background-color:white;color:black;' id='saveSheetURL'>Save</button>
            <button style='background-color:white;color:black;' id='cancelSheetURL'>Cancel</button><br>
            
            </center>
            </div>
            
            
            </div>
            `);
                    document.getElementById('cancelSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";
                    };


                    document.getElementById('saveSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";

                        var options_string = `<select class='selectCheat selectBox  select' name="vars" id='CODEGETDATA'>
                `;
                        for (var jj = 0; jj < scripts.length; jj++) {
                            if (scripts[jj]["name"] && scripts[jj]["name"].length > 0 && scripts[jj]["deleted"] != "true") {
                                options_string += `<option value="` + scripts[jj]["name"] + `">` + scripts[jj]["name"] + `</option>`;
                            }
                        }
                        options_string += `<option selected="selected" value="none">None</option>`;

                        options_string += `</select>`;


                        var sheet_url = document.getElementById('sheet_input_url').value;
                        sendAjax(sheet_url, {}, "GET", `
                window.data = data;
                //console.log(data);
                `);

                        new_code = `
                var delayKey = 1000;
    setTimeout(function(){
        sendAjax('` + sheet_url + `',{},"GET", \`
        window.data = data;
        \`);         
        //console.log(window.data);       
    },/*delay*/` + currentDelay + `*delayKey);
    
                `;
                        text = `
                Start Code
                Endpoint : Google Sheets<br> 
                Google Sheets CSV URL:<br>
                Run Cheat:<br>
                ` + options_string + `<br>
                <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='CSVURLKEY'  value='` + sheet_url + `'></input><br>
    
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
    setTimeout(function(){
        sendAjax('` + sheet_url + `',{},"GET", \`
        window.data = data;
        /*startCheat*/
        /*stopCheat*/
        \`);         
        //console.log(window.data); 
    },/*delay*/` + currentDelay + `*delayKey);
                `;

                        var icon_code = '';
                        old_code = window.editor.getValue();

                        if (text.includes("End Code")) {
                            code = text.split("End Code")[1];
                            no_code = text.split("End Code")[0];
                        } else {
                            code = text;
                        }





                        var img_src = "https://cheatlayer.com/icon2.png";
                        var Title = "";
                        //Tesseract

                        img_src = "https://cheatlayer.com/images/textarea/text1.png";
                        Title += "Get Data GSheets</h2>";

                        no_code = no_code.split("textarea").join("textarea style='width:100%'");
                        no_code = no_code.split(".getAttribute('innerText')").join(".innerText");

                        icon_code += '<h2 class="cheatlayer"style="color:black;"><img style="margin:20px;pointer-events: none;background-color:#FFFFFF;width:50px;height:50px;border-radius:10px;border:1px solid black;padding:5px;margin:5px;" src=\"';
                        icon_code += img_src;
                        icon_code += '\"></img> ' + Title;

                        no_code = icon_code + "" + no_code + "";
                        (no_code.split('SELECTORKEY'));
                        no_code = no_code.split('SELECTORKEY').join('SELECTORKEY' + code_ids);
                        no_code = no_code.split('XPATHKEY').join('XPATHKEY' + code_ids);
                        no_code = no_code.split('CSSKEY').join('CSSKEY' + code_ids);
                        no_code = no_code.split('ELEMENTSELECTKEY').join('ELEMENTSELECTKEY' + code_ids);

                        no_code = no_code.split('DELAYKEY').join('DELAYKEY' + code_ids);
                        no_code = no_code.split('KEYPRESSKEY').join('KEYPRESSKEY' + code_ids);
                        no_code = no_code.split('PRINTKEY').join('PRINTKEY' + code_ids);
                        no_code = no_code.split('VARIABLEATTRKEY').join('VARIABLEATTRKEY' + code_ids);

                        no_code = no_code.split('REMOVEKEY').join('REMOVEKEY' + code_ids);
                        no_code = no_code.split('VARIABLEKEY').join('VARIABLEKEY' + code_ids);

                        no_code = no_code.split('VALUEKEY').join('VALUEKEY' + code_ids);
                        no_code = no_code.split('INPUTKEY').join('INPUTKEY' + code_ids);
                        no_code = no_code.split('INNERTEXTKEY').join('INNERTEXTKEY' + code_ids);

                        no_code = no_code.split('TIMERKEY').join('TIMERKEY' + code_ids);
                        no_code = no_code.split('LOCATIONKEY').join('LOCATIONKEY' + code_ids);
                        no_code = no_code.split('ELEMENTKEY').join('ELEMENTKEY' + code_ids);
                        no_code = no_code.split('CODEKEY').join('CODEKEY' + code_ids);
                        no_code = no_code.split('CODEGETDATA').join('CODEGETDATA' + code_ids);

                        no_code = no_code.split('Start Code').join('');
                        //  no_code = no_code.split('//').join('');
                        no_code = no_code.split('SHEETURLKEY').join('SHEETKEY' + code_ids);
                        no_code = no_code.split('SHEETIDKEY').join('SHEETIDKEY' + code_ids);
                        no_code = no_code.split('DOCIDKEY').join('DOCIDKEY' + code_ids);
                        no_code = no_code.split('DOCVALUESKEY').join('DOCVALUESKEY' + code_ids);
                        no_code = no_code.split('GMAILVALUEKEY').join('GMAILVALUEKEY' + code_ids);

                        no_code = no_code.split('FILTERINPKEY').join('FILTERINPKEY' + code_ids);
                        no_code = no_code.split('FILTEROPKEY').join('FILTEROPKEY' + code_ids);
                        no_code = no_code.split('FILTERVALKEY').join('FILTERVALKEY' + code_ids);


                        no_code = no_code.split('SHEETVALUESKEY').join('SHEETVALUESKEY' + code_ids);
                        no_code = no_code.split('SHEETNAMEKEY').join('SHEETNAMEKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKURLKEY').join('WEBHOOKURLKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKDATAKEY').join('WEBHOOKDATAKEY' + code_ids);
                        no_code = no_code.split('CSVURLKEY').join('CSVURLKEY' + code_ids);
                        no_code = no_code.split('RIKUNAME').join('RIKUNAME' + code_ids);
                        no_code = no_code.split('RIKUAPIKEY').join('RIKUAPIKEY' + code_ids);
                        no_code = no_code.split('PROMPTKEY').join('PROMPTKEY' + code_ids);
                        no_code = no_code.split('GPT3KEY').join('GPT3KEY' + code_ids);

                        no_code = no_code.split('RIKUINPUT5KEY').join('RIKUINPUT5KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT4KEY').join('RIKUINPUT4KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT1KEY').join('RIKUINPUT1KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT2KEY').join('RIKUINPUT2KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT3KEY').join('RIKUINPUT3KEY' + code_ids);
                        no_code = no_code.split('TIMEOUTKEY').join('TIMEOUTKEY' + code_ids);
                        no_code = no_code.split('TABIDKEY').join('TABIDKEY' + code_ids);
                        no_code = no_code.split('NEWWINDOWKEY').join('NEWWINDOWKEY' + code_ids);
                        no_code = no_code.split('RUNONVARSKEY').join('RUNONVARSKEY' + code_ids);
                        no_code = no_code.split('PAGINATIONKEY').join('PAGINATIONKEY' + code_ids);

                        no_code_container.push({ selector: selector_type, options: options_array, code_ids: code_ids, variablenames: no_code_variable_names, variables: no_code_variables.join(','), style: event.data.style, id: code_ids, no_code: no_code });


                        //document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
                        //document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
                        //document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;
                        drawNoCodeContainer();

                        //googleSignIn


                        window.editor.setValue(old_code + "\n//Generated Script id=" + code_ids + "\n" + new_code + "\n//endcode\n");
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        $(document).on('click', '#googleSignIn', function () {
                            SendMessage("GoogleSignIn", "GoogleSignIn", "event.data");


                        });
                        if (typeof window.editor != 'undefined') {
                            var added_code = "//Generated Script id=" + code_ids;
                            added_code += code;
                            window.editor.setValue(old_code + added_code + "\n//endcode");
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                            document.getElementById('cheatmenu').style.display = 'block';

                        }
                        window.editor.resize();
                        code_ids += 1;
                        currentDelay = 3;

                    };


                } else if (event.data.style == "webhook") {
                    var options_arr = [];
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_arr.push(no_code_container[jj]["variables"])
                        }
                    }
                    options_arr.push("element.src")
                    options_arr.push("element.href")

                    options_arr.push("custom")

                    $('HTML').append(`

              <div id="wizardMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
              
              <div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:40%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
              <center><h1 style="color:black !important;">API Wizard</h1><br>
              WebhookURL:<br>
              <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='api_wizard_url'  value=''></input><br>
              Request Type:<br>
              <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='api_wizard_type'  value='POST'></input><br>
              Headers {<div id='header_wiz'></div>}<br>
              Body {<div id='body_wiz'></div>}<br>

              <button style='background-color:white;color:black;' id='addWizardBody'>Add Body Data</button><br>
              <button style='background-color:white;color:black;' id='addWizardHeader'>Add Header</button><br>

              <button style='background-color:white;color:black;' id='saveWizard'>Save</button><br>
              <button style='background-color:white;color:black;' id='cancelWizard'>Cancel</button><br><br>
              
              </center>
              </div>
              
              
              </div>
              `);
                    var header_count = 0;
                    var body_count = 0;
                    var headers = {};
                    var bodies = {};

                    document.getElementById('addWizardHeader').onclick = function () {
                        $('#header_wiz').append(`<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='header_wiz_keys` + header_count + `'  value='key'></input> : 
                          <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='header_wiz_values` + header_count + `'  value='value'></input><br>`)

                        //  options_array.push({"title":'Header Key 1', "id":'WEBHOOKHEADERKEY' + header_count + '_' + code_ids, "value":header_key, "type":'text'})
                        // options_array.push({"title":'Header Data 1', "id":'WEBHOOKHEADERDATAKEY' +header_count + '_' + code_ids, "value":header_val, "type":'text'})
                        //    headers[header_key] = header_val;

                        header_count++;

                    };


                    document.getElementById('addWizardBody').onclick = function () {
                        //  options_array.push({"title":'Body Key 1', "id":'WEBHOOKKEY1' + code_ids, "value":body_key, "type":'text'})
                        //   options_array.push({"title":'Body Value 1', "id":'WEBHOOKDATAKEY' + code_ids, "value":'data', "type":'dropdown', 'options':options_arr})

                        //  bodies[body_key] = body_val;

                        $('#body_wiz').append(`<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='body_wiz_keys` + body_count + `'  value='key'></input> : 
                  <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='body_wiz_values` + body_count + `'  value='value'></input><br>`)



                        body_count++;

                    };

                    document.getElementById('cancelWizard').onclick = function () {
                        document.getElementById('wizardMenu').style.display = "none";
                    };


                    document.getElementById('saveWizard').onclick = function () {

                        for (var kk = 0; kk < body_count; kk++) {
                            //      options_array.push({"title":'Body Key ' + kk, "id":'WEBHOOKKEY1_' + kk  + '_' + code_ids, "value":$('#body_wiz_keys' + kk).val(), "type":'text'})
                            //      options_array.push({"title":'Body Value ' + kk, "id":'WEBHOOKDATAKEY_' + kk  + '_' + code_ids, "value":$('#body_wiz_values' + kk).val(), "type":'dropdown', 'options':options_arr})

                            bodies[$('#body_wiz_keys' + kk).val()] = $('#body_wiz_values' + kk).val();

                        }
                        for (var kk = 0; kk < header_count; kk++) {
                            //      options_array.push({"title":'Header Key ' + kk, "id":'WEBHOOKKEY1_' + kk  + '_' + code_ids, "value":$('#body_wiz_keys' + kk).val(), "type":'text'})
                            //       options_array.push({"title":'Header Value ' + kk, "id":'WEBHOOKDATAKEY_' + kk  + '_' + code_ids, "value":$('#body_wiz_values' + kk).val(), "type":'dropdown', 'options':options_arr})

                            headers[$('#body_wiz_keys' + kk).val()] = $('#body_wiz_values' + kk).val();

                        }

                        document.getElementById('wizardMenu').style.display = "none";
                        var wiz_url = document.getElementById('api_wizard_url').value;
                        var wiz_type = document.getElementById('api_wizard_type').value;
                       
                        SendMessage("sendAjax", "data", {
                            url: wiz_url,
                            data: bodies,
                            mode: wiz_type,
                            callback: 'window.API = JSON.parse(data);//console.log(JSON.stringify(data));',
                            headers: headers,
                            dataType: null,
                            currentTab_id: 0
                        });

                        new_code = `
                  var delayKey = 1000;
                  setTimeout(function(){
                      var element = document.querySelector('` + event.data.cssselector + `');
                      sendAjax('WEBHOOK_URL',{data:[element.innerText]},'POST');       
                  },/*delay*/` + currentDelay + `*delayKey);
                  
                  `;
                        text = `
                  Start Code
                  CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
                  URL:<br>
                  <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='WEBHOOKURLKEY'  value='` + wiz_url + `'></input><br>
                  Data:<br>
                  ` + options_string + `<br>
                  
                  Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                  <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                  End Code
                  var delayKey = 1000;
                  setTimeout(function(){
                      var element = document.querySelector('` + event.data.cssselector + `');
                      sendAjax('` + wiz_url + `',` + JSON.stringify(bodies) + `,/*type*/'` + wiz_type + `',/*callback*/'//console.log(data);',/*header*/` + JSON.stringify(headers) + `);       
                    },/*delay*/` + currentDelay + `*delayKey);
                  
                  `;


                        var icon_code = '';
                        old_code = window.editor.getValue();

                        if (text.includes("End Code")) {
                            code = text.split("End Code")[1];
                            no_code = text.split("End Code")[0];
                        } else {
                            code = text;
                        }





                        var img_src = "https://cheatlayer.com/icon2.png";
                        var Title = "";
                        //Tesseract

                        img_src = "https://cheatlayer.com/images/textarea/text1.png";
                        Title += "Get Data GSheets</h2>";

                        no_code = no_code.split("textarea").join("textarea style='width:100%'");
                        no_code = no_code.split(".getAttribute('innerText')").join(".innerText");

                        icon_code += '<h2 class="cheatlayer"style="color:black;"><img style="margin:20px;pointer-events: none;background-color:#FFFFFF;width:50px;height:50px;border-radius:10px;border:1px solid black;padding:5px;margin:5px;" src=\"';
                        icon_code += img_src;
                        icon_code += '\"></img> ' + Title;

                        no_code = icon_code + "" + no_code + "";
                        (no_code.split('SELECTORKEY'));
                        no_code = no_code.split('SELECTORKEY').join('SELECTORKEY' + code_ids);
                        no_code = no_code.split('XPATHKEY').join('XPATHKEY' + code_ids);
                        no_code = no_code.split('CSSKEY').join('CSSKEY' + code_ids);
                        no_code = no_code.split('ELEMENTSELECTKEY').join('ELEMENTSELECTKEY' + code_ids);

                        no_code = no_code.split('DELAYKEY').join('DELAYKEY' + code_ids);
                        no_code = no_code.split('KEYPRESSKEY').join('KEYPRESSKEY' + code_ids);
                        no_code = no_code.split('PRINTKEY').join('PRINTKEY' + code_ids);
                        no_code = no_code.split('VARIABLEATTRKEY').join('VARIABLEATTRKEY' + code_ids);

                        no_code = no_code.split('REMOVEKEY').join('REMOVEKEY' + code_ids);
                        no_code = no_code.split('VARIABLEKEY').join('VARIABLEKEY' + code_ids);

                        no_code = no_code.split('VALUEKEY').join('VALUEKEY' + code_ids);
                        no_code = no_code.split('INPUTKEY').join('INPUTKEY' + code_ids);
                        no_code = no_code.split('INNERTEXTKEY').join('INNERTEXTKEY' + code_ids);

                        no_code = no_code.split('TIMERKEY').join('TIMERKEY' + code_ids);
                        no_code = no_code.split('LOCATIONKEY').join('LOCATIONKEY' + code_ids);
                        no_code = no_code.split('ELEMENTKEY').join('ELEMENTKEY' + code_ids);
                        no_code = no_code.split('CODEKEY').join('CODEKEY' + code_ids);
                        no_code = no_code.split('CODEGETDATA').join('CODEGETDATA' + code_ids);

                        no_code = no_code.split('Start Code').join('');
                        //  no_code = no_code.split('//').join('');
                        no_code = no_code.split('SHEETURLKEY').join('SHEETKEY' + code_ids);
                        no_code = no_code.split('SHEETIDKEY').join('SHEETIDKEY' + code_ids);
                        no_code = no_code.split('DOCIDKEY').join('DOCIDKEY' + code_ids);
                        no_code = no_code.split('DOCVALUESKEY').join('DOCVALUESKEY' + code_ids);
                        no_code = no_code.split('GMAILVALUEKEY').join('GMAILVALUEKEY' + code_ids);

                        no_code = no_code.split('FILTERINPKEY').join('FILTERINPKEY' + code_ids);
                        no_code = no_code.split('FILTEROPKEY').join('FILTEROPKEY' + code_ids);
                        no_code = no_code.split('FILTERVALKEY').join('FILTERVALKEY' + code_ids);


                        no_code = no_code.split('SHEETVALUESKEY').join('SHEETVALUESKEY' + code_ids);
                        no_code = no_code.split('SHEETNAMEKEY').join('SHEETNAMEKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKURLKEY').join('WEBHOOKURLKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKDATAKEY').join('WEBHOOKDATAKEY' + code_ids);
                        no_code = no_code.split('CSVURLKEY').join('CSVURLKEY' + code_ids);
                        no_code = no_code.split('RIKUNAME').join('RIKUNAME' + code_ids);
                        no_code = no_code.split('RIKUAPIKEY').join('RIKUAPIKEY' + code_ids);
                        no_code = no_code.split('PROMPTKEY').join('PROMPTKEY' + code_ids);
                        no_code = no_code.split('GPT3KEY').join('GPT3KEY' + code_ids);

                        no_code = no_code.split('RIKUINPUT5KEY').join('RIKUINPUT5KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT4KEY').join('RIKUINPUT4KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT1KEY').join('RIKUINPUT1KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT2KEY').join('RIKUINPUT2KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT3KEY').join('RIKUINPUT3KEY' + code_ids);
                        no_code = no_code.split('TIMEOUTKEY').join('TIMEOUTKEY' + code_ids);
                        no_code = no_code.split('TABIDKEY').join('TABIDKEY' + code_ids);
                        no_code = no_code.split('NEWWINDOWKEY').join('NEWWINDOWKEY' + code_ids);
                        no_code = no_code.split('RUNONVARSKEY').join('RUNONVARSKEY' + code_ids);
                        no_code = no_code.split('PAGINATIONKEY').join('PAGINATIONKEY' + code_ids);

                        no_code_container.push({ selector: selector_type, options: options_array, code_ids: code_ids, variablenames: no_code_variable_names, variables: no_code_variables.join(','), style: event.data.style, id: code_ids, no_code: no_code });


                        //document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
                        //document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
                        //document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;
                        drawNoCodeContainer();

                        //googleSignIn


                        window.editor.setValue(old_code + "\n//Generated Script id=" + code_ids + "\n" + new_code + "\n//endcode\n");
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        $(document).on('click', '#googleSignIn', function () {
                            SendMessage("GoogleSignIn", "GoogleSignIn", "event.data");


                        });
                        if (typeof window.editor != 'undefined') {
                            var added_code = "//Generated Script id=" + code_ids;
                            added_code += code;
                            window.editor.setValue(old_code + added_code + "\n//endcode");
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                            document.getElementById('cheatmenu').style.display = 'block';

                        }
                        window.editor.resize();
                        code_ids += 1;
                        currentDelay = 3;

                    };


                } else if (event.data.style == "sentiment") {

                    currentDelay = 10;

                    new_code = `
            
            var delayKey = 1000;
            var sentimentkey = 'none';
            var  sentiment = ml5.sentiment('movieReviews', modelReady);
            function modelReady() {

            setTimeout(function(){
                var element = document.querySelector('` + event.data.cssselector + `');

                    // model is ready
                var prediction = sentiment.predict(element.innerText);
              
                var output = parseFloat(prediction.score) > 0.5 ? 'positive' : 'negative';
                //console.log(prediction.score + ' ' + output);
                sentimentkey = prediction.score + ' ' + output;
                
                
                
            },/*delay*/` + currentDelay + `*delayKey);
            }
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint: Sentiment Analysis<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            var sentimentkey = 'none';
            var  sentiment = ml5.sentiment('movieReviews', modelReady);
            function modelReady() {

            setTimeout(function(){
                var element = document.querySelector('` + event.data.cssselector + `');

                    // model is ready
                var prediction = sentiment.predict(element.innerText);
              
                var output = parseFloat(prediction.score) > 0.5 ? 'positive' : 'negative';
                //console.log(prediction.score + ' ' + output);
                sentimentkey = prediction.score + ' ' + output;
                
                
                
                
                
                
            },/*delay*/` + currentDelay + `*delayKey);
            }
            `;
                } else if (event.data.style == "riku") {

                    no_code_variables.push(`riku[riku.length -1]`);
                    no_code_variable_names.push("Riku.ai Last Output ")

                    riku_variables++;

                    var options_string1 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT1KEY'>
                `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string1 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }


                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string1 += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string1 += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string1 += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string1 += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }

                    options_string1 += `<option selected="selected" value="">None</option>`;

                    options_string1 += `<option value="Custom">Custom Input</option>`;
                    options_string1 += `</select>`;

                    var options_string2 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT2KEY'>
                  `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string2 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string2 += `<option selected="selected" value="">None</option>`;

                    options_string2 += `<option value="Custom">Custom Input</option>`;
                    options_string2 += `</select>`;


                    var options_string3 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT3KEY'>
                    `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string3 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string3 += `<option selected="selected" value="">None</option>`;

                    options_string3 += `<option value="Custom">Custom Input</option>`;
                    options_string3 += `</select>`;


                    var options_string4 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT4KEY'>
                      `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string4 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string4 += `<option selected="selected" value="">None</option>`;

                    options_string4 += `<option value="Custom">Custom Input</option>`;
                    options_string4 += `</select>`;


                    var options_string5 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT5KEY'>
                        `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string5 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string5 += `<option selected="selected" value="">None</option>`;

                    options_string5 += `<option value="Custom">Custom Input</option>`;
                    options_string5 += `</select>`;




                    new_code = `
                
                var delayKey = 1000;
                setTimeout(function(){
                    var element = document.querySelector('` + event.data.cssselector + `');
                    element.focus();

                    rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");       
                },/*delay*/` + currentDelay + `*delayKey);
    
    
                `;
                    text = `
                Start Code
                CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
                Endpoint : Riku.ai<br> 
                Account Holder name:<br>
                <input class='cheatlayer cheat-input' id='RIKUNAME' width='174px' style='background-color:white; color:black;width:174px !important;' value='Account'></input><br>
                
                API KEY:<br>
                <input class='cheatlayer cheat-input' id='RIKUAPIKEY' width='174px' style='background-color:white; color:black;width:174px !important;' value='API_KEY'></input><br>
                Prompt ID:<br>
                <input class='cheatlayer cheat-input' id='PROMPTKEY' width='174px' style='background-color:white; color:black;width:174px !important;' value='PROMPT_ID'></input><br>
               
                Input 1:<br>
                ` + options_string1 + `<br>
                Input 2:<br>
                ` + options_string2 + `<br>
                Input 3:<br>
                ` + options_string3 + `<br>
                Input 4:<br>
                ` + options_string4 + `<br>
                Input 5:<br>
                ` + options_string5 + `<br>
      
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
                setTimeout(function(){
                    var element = document.querySelector('` + event.data.cssselector + `');
                    element.click();
                    element.focus();

                    rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");       
                },/*delay*/` + currentDelay + `*delayKey);
                
                `;
                    currentDelay = 5;

                } else if (event.data.style == "object") {


                    total_variables++;
                    no_code_variables.push(`_object` + total_variables);
                    no_code_variable_names.push("Object Detection Output " + total_variables)
                    new_code = `

                var delayKey = 1000;
                var objectkey = 'none';
                var _object` + total_variables + ` = 'none';

                setTimeout(function(){
                    var element = document.querySelector('` + event.data.cssselector + `');
                    const result = document.getElementById('result'); // The result tag in the HTML
                    const probability = document.getElementById('probability'); // The probability tag in the HTML
            
                    html2canvas(element.parentNode, { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
                        document.body.appendChild(canvas);
                              canvas.setAttribute("id", "canvas");
                         var link = document.createElement('img');
                      link.src = document.getElementById('canvas').toDataURL()
// Create a YOLO method
  link.onload = () => {
const yolo = ml5.YOLO(options= modelLoaded);
// When the model is loaded
function modelLoaded() {
  //console.log('Model Loaded!');
// Detect objects in the video element
yolo.detect(link, (err, results) => {
  //console.log(results[0]['label']); // Will output bounding boxes of detected objects
  _object` + total_variables + ` =results[0]['label'];

});
}
}
       });
                },/*delay*/` + currentDelay + `*delayKey);
                
                
                `;
                    text = `
                Start Code
                CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
                Endpoint: Object Detection<br>
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
               
                var delayKey = 1000;
                var objectkey = 'none';
                var _object` + total_variables + ` = 'none';

                setTimeout(function(){
                    var element = document.querySelector('` + event.data.cssselector + `');
                    const result = document.getElementById('result'); // The result tag in the HTML
                    const probability = document.getElementById('probability'); // The probability tag in the HTML

       html2canvas(element.parentNode, { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
        document.body.appendChild(canvas);
              canvas.setAttribute("id", "canvas");
         var link = document.createElement('img');
      link.src = document.getElementById('canvas').toDataURL()
// Create a YOLO method
link.onload = () => {
const yolo = ml5.YOLO(options= modelLoaded);
// When the model is loaded
function modelLoaded() {
//console.log('Model Loaded!');
// Detect objects in the video element
yolo.detect(link, (err, results) => {
//console.log(results[0]['label']); // Will output bounding boxes of detected objects
_object` + total_variables + ` =results[0]['label'];

});
}
}
});
                },/*delay*/` + currentDelay + `*delayKey);
                
                
                `;
                    currentDelay = 20;

                } else if (event.data.style == "gcal") {

                    // alert('Please note that google is still reviewing our direct API request, so you may be blocked until they complete review. Early users are grandfathered in.')

                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
             
                var element = document.querySelector('` + event.data.cssselector + `');
                google_calendar_append(element.innerText, window.location.href);       
           
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Google Calendar<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
             
                var element = document.querySelector('` + event.data.cssselector + `');
                google_calendar_append(element.innerText, window.location.href);       
           
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "gdocs") {
                    //  alert('Please note that google is still reviewing our direct API request, so you may be blocked until they complete review. Early users are grandfathered in.')


                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='DOCVALUESKEY'>
              `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }
                    options_string += `<option selected="selected" value="element.innerText">Inner Text</option>`;

                    options_string += `<option value="` + no_code_variables_string + `">` + no_code_variables_string + `</option>`;
                    options_string += `</select>`;
                    new_code = `
            
            var element = document.querySelector('` + event.data.cssselector + `');
            google_docs_append('GOOGLE_DOCS_ID',element.innerText);       
           
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            ID:<br>
            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='DOCIDKEY' value='GOOGLE_DOCS_ID'></input><br>
            Doc Input:<br>
            ` + options_string + `<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var element = document.querySelector('` + event.data.cssselector + `');
                google_docs_append('GOOGLE_DOCS_ID',element.innerText);       
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "print") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='PRINTKEY'>
                `;
                    options_string += `<option value="href">Link Destination .href</option>`;
                    options_string += `<option value="src">Image source .src</option>`;
                    options_string += `<option value="innerText">Inner Text .innerText</option>`;
                    options_string += `<option selected="selected" value="Custom Attribute">Custom Attribute</option>`;
                    options_string += `</select>`;

                    new_code = `
        
            var element = document.querySelector('` + event.data.cssselector + `');
            //console.log(element.innerText);
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Web Console<br>
            
    Attribute: <br>
    ` + options_string + `<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var element = document.querySelector('` + event.data.cssselector + `');
                //console.log(element.innerText);
            },/*delay*/` + currentDelay + `*delayKey);
            `;
                } else if (event.data.style == "script") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='CODEKEY'>
      `;
                    for (var jj = 0; jj < scripts.length; jj++) {
                        if (scripts[jj]["name"] && scripts[jj]["name"].length > 0 && scripts[jj]["deleted"] != "true") {
                            options_string += `<option value="` + scripts[jj]["name"] + `">` + scripts[jj]["name"] + `</option>`;
                        }
                    }
                    options_string += `</select>`;

                    var options_string2 = `<select class='selectCheat selectBox  select' name="vars" id='RUNONVARSKEY'>
        `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string2 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string2 += `<option selected='selected' value="none">None</option>`;

                    options_string2 += `</select>`;


                    var options_string3 = `<select class='selectCheat selectBox  select' name="vars" id='TABIDKEY'>
        `;
                    if (typeof window.tabs != "undefined") {
                        for (var jj = 0; jj < window.tabs.length; jj++) {

                            options_string3 += `<option value="` + window.tabs[jj]["id"] + `">` + window.tabs[jj]["id"] + ` ( ` + window.tabs[jj]["url"] + `)</option>`;

                        }
                    }
                    options_string3 += `<option selected='selected' value="-1">None</option>`;

                    options_string3 += `</select>`;


                    var options_string4 = `<select class='selectCheat selectBox  select' name="vars" id='TIMEOUTKEY'>
          `;

                    options_string4 += `<option selected='selected' value="30">30 seconds</option>`;
                    options_string4 += `<option value="60">60 seconds</option>`;
                    options_string4 += `<option value="120">120 seconds</option>`;
                    options_string4 += `<option value="300">300 seconds</option>`;
                    options_string4 += `<option value="1500">1500 seconds</option>`;
                    options_string4 += `<option value="300000">300000 seconds</option>`;


                    options_string4 += `</select>`;

                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
                var element = document.querySelector('` + event.data.cssselector + `');
                runOnTab(element.innerText,'SCRIPT_NAME');
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Code:<br>
            ` + options_string + `
            <br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            Timeout: <br>
            ` + options_string4 + `
            <br>
            Tab ID: <br>
            ` + options_string3 + `
            <br>

            New Window: <br><select class='selectCheat selectBox  select'  id='NEWWINDOWKEY' ><option selected='selected' value="false">False</option><option value="true">True</option></select><br>
            
            Pagination URL:<br> <input class='cheatlayer cheat-input' id='PAGINATIONKEY' type="text" value=""></input><br>

            Custom Data: <br>` + options_string2 + `<br>

            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var element = document.querySelector('` + event.data.cssselector + `');
                runOnTab(element.href,/*script*/'SCRIPT_NAME',/*timeout*/30,/*options*/{/*id*/id:-1, /*newWindow*/newWindow:false,/*custom1*/data1:"none",/*custom2*/data2:"none",/*custom3*/data3:"none"});
            },/*delay*/` + currentDelay + `*delayKey);
            `;
                } else if (event.data.style == "click") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
            
            var element = document.querySelector('` + event.data.cssselector + `');
            element.click();
            
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Click Element<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
            
            var element = document.querySelector('` + event.data.cssselector + `');
            element.click();
            
            },/*delay*/` + currentDelay + `*delayKey);
            `;
                } else if (event.data.style == "variable") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='VARIABLEATTRKEY'>
            `;
                    options_string += `<option value="innerText">Inner Text .innerText</option>`;
                    options_string += `<option value="URL">Page URL</option>`;

                    options_string += `<option value="href">Link Destination .href</option>`;
                    options_string += `<option value="src">Image source .src</option>`;
                    options_string += `<option selected="selected" value="Custom Attribute">Custom Attribute</option>`;

                    options_string += `</select>`;


                    total_variables++;

                    no_code_variables.push(`_variable` + total_variables);
                    no_code_variable_names.push("Saved Variable " + total_variables)

                    new_code = `
            var _variable` + total_variables + ` = 'none';
            var delayKey = 1000;
            setTimeout(function(){
            
            var element = document.querySelector('` + event.data.cssselector + `');
            _var` + total_variables + ` = element.innerText;
        
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Variable Name: <br>_variable` + total_variables + `<br>
            Endpoint : Variable<br>
            Attribute:<br>
            ` + options_string + `<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var _variable` + total_variables + ` = 'none';
            var delayKey = 1000;
            setTimeout(function(){
            
            var element = document.querySelector('` + event.data.cssselector + `');
            
            _variable` + total_variables + ` = /*attribute*/element.innerText;
            if(typeof cheat_data == 'undefined'){
                cheat_data = {}
            }
        
  
            if("_variable` + total_variables + `"  + "_" + window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"") in cheat_data){
                cheat_data["_variable` + total_variables + `"  + "_" + window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"")].push(element.innerText);

            }else{
            cheat_data["_variable` + total_variables + `"   + "_" + window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"")] = /*attribute*/[element.innerText];
            }
                    //console.log(element.innerText)
            //console.log(cheat_data)
            //console.log(tab_id)
       function storeUserPrefs() {
                var key = "cheatlayer"
                 //console.log(cheat_data)

                 var out_obj = JSON.parse(\`` + JSON.stringify(storage_json) + `\`);
                 out_obj[window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"")] = cheat_data;
                 var testPrefs = JSON.stringify(out_obj);                var jsonfile = {};
                jsonfile[key] = testPrefs;
                chrome.storage.sync.set(jsonfile, function () {
                    //console.log('Saved', key, testPrefs);
                });
            
            }
            storeUserPrefs();


            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "cloud") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
                var element = document.querySelector('` + event.data.cssselector + `');
                sendAjax('https://cheatlayer.com/user/saveTemp',{TempA: element.href, text: elements[kk].innerText},'post');
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Cloud<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var element = document.querySelector('` + event.data.cssselector + `');
                sendAjax('https://cheatlayer.com/user/saveTemp',{TempA: element.href, text: elements[kk].innerText},'post');
            },/*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "input") {
                    var input_val = 'TEST_VALUE';
                    if (typeof window.data != 'undefined' && window.data && window.data.length > 0) {
                        input_val = window.data[inputCounter++];
                    }
                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='INPUTKEY'>
            `;

                    if (selected_element.nodeName == 'SELECT') {
                        for (var kk = 0; kk < selected_element.options.length; kk++) {

                            options_string += `<option value="` + selected_element.options[kk].value + `">` + selected_element.options[kk].text + `</option>`;

                        }
                    }
                    if (typeof window.API != 'undefined') {
                        //console.log('window.API')

                        //console.log(window.API)
                        //console.log(JSON.flatten(window.API))
                        var flat = JSON.flatten(window.API);

                        for (var key in flat) {
                            if (flat.hasOwnProperty(key)) {
                                //console.log(key + " -> " + flat[key]);
                                options_string += `<option value="'` + flat[key] + `'">` + key + ` : ` + flat[key] + `</option>`;

                            }
                        }

                    }
                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    options_string += `<option selected="selected" value="">None</option>`;

                    options_string += `<option value="Custom">Custom</option>`;

                    options_string += `</select>`;
                    new_code = `
        
            var delayKey = 1000;
            setTimeout(function(){
            var element = document.querySelector('` + event.data.cssselector + `');
            element.value = '` + input_val + `';
            }, /*delay*/` + currentDelay + `*delayKey);
            
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Input<br>
            ` + options_string + `
            <br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
            var element = document.querySelector('` + event.data.cssselector + `');
            element.value = '` + input_val + `';
            }, /*delay*/` + currentDelay + `*delayKey);

            `;
                } else if (event.data.style == "download") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
            
                var element = document.querySelector('` + event.data.cssselector + `');
                if(element.src){
                    downloadFile(element.src);
                   }else if(element.href){
                    downloadFile(element.href);
                }else{
                    downloadFile(element.innerText);

                }
     
     
            }, /*delay*/` + currentDelay + `*delayKey);
            
            
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Download File<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
            
                var element = document.querySelector('` + event.data.cssselector + `');
                if(element.src){
                    downloadFile(element.src);
                   }else if(element.href){
                    downloadFile(element.href);
                }else{
                    downloadFile(element.innerText);

                }
     
     
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "innerText") {
                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='INNERTEXTKEY'>
            `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }
                    options_string += `<option value="` + no_code_variables_string + `">` + no_code_variables_string + `</option>`;
                    options_string += `</select>`;



                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
            var element = document.querySelector('` + event.data.cssselector + `');
            element.innerText = 'TEST_VALUE';
        
            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Inner Text<br> 
            ` + options_string + `
            <br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
            var element = document.querySelector('` + event.data.cssselector + `');
            element.innerText = 'TEST_VALUE';
        
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "keypress") {
                    //console.log("try storage");

                    //console.log(storage_vars);


                    var options_string = `<select  class='selectCheat selectBox  select' name="vars" id='KEYPRESSKEY'>
            `;
                    //console.log(storage_vars)

                    if (typeof window.API != 'undefined') {
                        //console.log('window.API')

                        //console.log(window.API)
                        //console.log(JSON.flatten(window.API))
                        var flat = JSON.flatten(window.API);

                        for (var key in flat) {
                            if (flat.hasOwnProperty(key)) {
                                //console.log(key + " -> " + flat[key]);
                                options_string += `<option value="'` + flat[key] + `'">` + key + ` : ` + flat[key] + `</option>`;

                            }
                        }

                    }


                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ',' + storage_vars[jj];
                        }
                    }
                    for (var jj = 0; jj < input_vars.length; jj++) {
                        if (input_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + input_vars[jj] + `">` + input_vars[jj] + `</option>`;
                        }
                    }
                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }


                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            //  //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }


                    options_string += `<option selected="selected" value="">None</option>`;

                    options_string += `<option value="Custom">Custom</option>`;
                    options_string += `<option value="Webhook">Webhook</option>`;

                    options_string += `</select>`;

                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
                var element = document.querySelector('` + event.data.cssselector + `');
                element.click();

                    element.dispatchEvent(new Event('focus'));
                    element.focus();
                    simulateKey('a');        
            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            Endpoint : Keypress<br> ` + options_string + `<br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var element = document.querySelector('` + event.data.cssselector + `');
                element.click();
                var newData = CSVToArray(window.data);
                    element.dispatchEvent(new Event('focus'));
                    element.focus();
                    simulateKey('a');        
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "hover") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
            var element = document.querySelector('` + event.data.cssselector + `');
            element.dispatchEvent(new MouseEvent('mouseover', { 'view': window, 'bubbles': true, 'cancelable': true }));
     
            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Hover<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
            var element = document.querySelector('` + event.data.cssselector + `');
            element.dispatchEvent(new MouseEvent('mouseover', { 'view': window, 'bubbles': true, 'cancelable': true }));
           
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "screenshot") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
            var element = document.querySelector('` + event.data.cssselector + `');
 
                    html2canvas(element, { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
                        document.body.appendChild(canvas);
                              canvas.setAttribute("id", "canvas");
                         var link = document.createElement('a');
                      link.download = 'webpage.png';
                      link.href = document.getElementById('canvas').toDataURL()
                      link.click();
                    
                    });
    
            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Screenshot<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                var element = document.querySelector('` + event.data.cssselector + `');

                    html2canvas(element, { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
                        document.body.appendChild(canvas);
                              canvas.setAttribute("id", "canvas");
                         var link = document.createElement('a');
                      link.download = 'webpage.png';
                      link.href = document.getElementById('canvas').toDataURL()
                      link.click();
                    
                    });
  
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "forward") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
                window.history.forward();
            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            Endpoint : Go Forward<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                window.history.forward();
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "back") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
                window.history.back()
                }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            Endpoint : Go Back<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
                window.history.back()
              }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                } else if (event.data.style == "scroll") {
                    new_code = `
            var delayKey = 1000;
            setTimeout(function(){
            var element = document.querySelector('` + event.data.cssselector + `');
            element.scrollTop = element.scrollHeight;
            
            }, /*delay*/` + currentDelay + `*delayKey);
            `;
                    text = `
            Start Code
            CSS Selector:<br> <input class='cheatlayer cheat-input' id='CSSKEY' type="text" value="` + event.data.cssselector + `"></input><br>
            Endpoint : Scroll<br>
            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
            End Code
            var delayKey = 1000;
            setTimeout(function(){
            var element = document.querySelector('` + event.data.cssselector + `');
            element.scrollTop = element.scrollHeight;
            
            }, /*delay*/` + currentDelay + `*delayKey);
            
            `;
                }



            } else if (selector_type == "useattr") {


                if (event.data.style == "excel") {

                    new_code = `
      
    //endcode
    const workbook = new ExcelJS.Workbook();
    
    
    const worksheet = workbook.addWorksheet('New Sheet');
    //console.log(cheat_data)
    //console.log()
    var columns = [
    ];
    var keys = Object.keys(cheat_data);
    for(var kk = 0; kk < keys.length; kk++){
        columns.push({header:keys[kk], key:keys[kk]})
        
    }
    worksheet.columns = columns;
    //console.log("Rows")
    //console.log(cheat_data[keys[0]])
    for(var kk = 0; kk < cheat_data[keys[0]].length; kk++){
    var data = {}
    
    for(var jj = 0; jj < keys.length; jj++){
        data[keys[jj]] = cheat_data[keys[jj]][kk]
    }
        const row = worksheet.addRow(data);
    
    }
    
    workbook.xlsx.writeBuffer().then((data) => {
      const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8' });
      saveAs(blob, 'test.xlsx');
    });//Generated Script id=1//Generated Script id=
    
        `;
                    text = `
        Start Code
        Xpath:<br> <input class='cheatlayer cheat-input' id='XPATHKEY' type="text" value='` + event.data.xpath + `'></input><br>
        Endpoint : Excel File<br> 
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
       
        End Code
        var delayKey = 1000;
            setTimeout(function(){
     
    //endcode
    const workbook = new ExcelJS.Workbook();
    
    
    const worksheet = workbook.addWorksheet('New Sheet');
    //console.log(cheat_data)
    //console.log()
    var columns = [
    ];
    var keys = Object.keys(cheat_data);
    for(var kk = 0; kk < keys.length; kk++){
        columns.push({header:keys[kk], key:keys[kk]})
        
    }
    worksheet.columns = columns;
    //console.log("Rows")
    //console.log(cheat_data[keys[0]])
    for(var kk = 0; kk < cheat_data[keys[0]].length; kk++){
    var data = {}
    
    for(var jj = 0; jj < keys.length; jj++){
        data[keys[jj]] = cheat_data[keys[jj]][kk]
    }
        const row = worksheet.addRow(data);
    
    }
    
    workbook.xlsx.writeBuffer().then((data) => {
      const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8' });
      saveAs(blob, 'test.xlsx');
    });//Generated Script id=1//Generated Script id=
    
            },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "rss") {

                    $('HTML').append(`
    
            <div id="getDataMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
            
            <div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:40%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
            <center><h1 style="color:black !important;">RSS Feed Input</h1><br>
            Please enter the RSS URL:<br>
            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='sheet_input_url'  value=''></input><br>
            
            <button style='background-color:white;color:black;' id='saveSheetURL'>Save</button>
            <button style='background-color:white;color:black;' id='cancelSheetURL'>Cancel</button><br>
            
            </center>
            </div>
            
            
            </div>
            `);
                    document.getElementById('cancelSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";
                    };


                    document.getElementById('saveSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";


                        var sheet_url = document.getElementById('sheet_input_url').value;
                        getXML(sheet_url, `
                window.data = data;
                //console.log(data);
                `);

                        new_code = `
                var delayKey = 1000;
    setTimeout(function(){
        getXML('` + sheet_url + `', \`
        window.data = data;
        \`);         
        //console.log(window.data);       
    },/*delay*/` + currentDelay + `*delayKey);
    
                `;
                        text = `
                Start Code
                Endpoint : RSS Input<br> 
                RSS URL:<br>
                <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='RSSURLKEY'  value='` + sheet_url + `'></input><br>
    
                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                End Code
                var delayKey = 1000;
    setTimeout(function(){
        getXML('` + sheet_url + `', \`
        window.data = data;
        /*startCheat*/
        /*stopCheat*/
        \`);       
        //console.log(window.data);       
    },/*delay*/` + currentDelay + `*delayKey);
                `;

                        var icon_code = '';
                        old_code = window.editor.getValue();

                        if (text.includes("End Code")) {
                            code = text.split("End Code")[1];
                            no_code = text.split("End Code")[0];
                        } else {
                            code = text;
                        }





                        var img_src = "https://cheatlayer.com/icon2.png";
                        var Title = "";
                        //Tesseract

                        img_src = chrome.runtime.getURL("rss.png");
                        Title += "RSS</h2>";


                        no_code = no_code.split("textarea").join("textarea style='width:100%'");
                        no_code = no_code.split(".getAttribute('innerText')").join(".innerText");

                        icon_code += '<h2 class="cheatlayer"style="color:black;"><img style="margin:20px;pointer-events: none;background-color:#FFFFFF;width:50px;height:50px;border-radius:10px;border:1px solid black;padding:5px;margin:5px;" src=\"';
                        icon_code += img_src;
                        icon_code += '\"></img> ' + Title;

                        no_code = icon_code + "" + no_code + "";
                        (no_code.split('SELECTORKEY'));
                        no_code = no_code.split('SELECTORKEY').join('SELECTORKEY' + code_ids);
                        no_code = no_code.split('XPATHKEY').join('XPATHKEY' + code_ids);
                        no_code = no_code.split('CSSKEY').join('CSSKEY' + code_ids);
                        no_code = no_code.split('ELEMENTSELECTKEY').join('ELEMENTSELECTKEY' + code_ids);

                        no_code = no_code.split('DELAYKEY').join('DELAYKEY' + code_ids);
                        no_code = no_code.split('KEYPRESSKEY').join('KEYPRESSKEY' + code_ids);
                        no_code = no_code.split('PRINTKEY').join('PRINTKEY' + code_ids);

                        no_code = no_code.split('REMOVEKEY').join('REMOVEKEY' + code_ids);
                        no_code = no_code.split('VARIABLEKEY').join('VARIABLEKEY' + code_ids);

                        no_code = no_code.split('VALUEKEY').join('VALUEKEY' + code_ids);
                        no_code = no_code.split('INPUTKEY').join('INPUTKEY' + code_ids);
                        no_code = no_code.split('INNERTEXTKEY').join('INNERTEXTKEY' + code_ids);

                        no_code = no_code.split('TIMERKEY').join('TIMERKEY' + code_ids);
                        no_code = no_code.split('LOCATIONKEY').join('LOCATIONKEY' + code_ids);
                        no_code = no_code.split('ELEMENTKEY').join('ELEMENTKEY' + code_ids);
                        no_code = no_code.split('CODEKEY').join('CODEKEY' + code_ids);
                        no_code = no_code.split('CODEGETDATA').join('CODEGETDATA' + code_ids);

                        no_code = no_code.split('Start Code').join('');
                        //  no_code = no_code.split('//').join('');
                        no_code = no_code.split('SHEETURLKEY').join('SHEETKEY' + code_ids);
                        no_code = no_code.split('SHEETIDKEY').join('SHEETIDKEY' + code_ids);
                        no_code = no_code.split('DOCIDKEY').join('DOCIDKEY' + code_ids);
                        no_code = no_code.split('DOCVALUESKEY').join('DOCVALUESKEY' + code_ids);
                        no_code = no_code.split('GMAILVALUEKEY').join('GMAILVALUEKEY' + code_ids);

                        no_code = no_code.split('SHEETVALUESKEY').join('SHEETVALUESKEY' + code_ids);
                        no_code = no_code.split('SHEETNAMEKEY').join('SHEETNAMEKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKURLKEY').join('WEBHOOKURLKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKDATAKEY').join('WEBHOOKDATAKEY' + code_ids);
                        no_code = no_code.split('CSVURLKEY').join('CSVURLKEY' + code_ids);
                        no_code = no_code.split('RIKUNAME').join('RIKUNAME' + code_ids);
                        no_code = no_code.split('RIKUAPIKEY').join('RIKUAPIKEY' + code_ids);
                        no_code = no_code.split('GPT3KEY').join('GPT3KEY' + code_ids);

                        no_code = no_code.split('PROMPTKEY').join('PROMPTKEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT5KEY').join('RIKUINPUT5KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT4KEY').join('RIKUINPUT4KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT1KEY').join('RIKUINPUT1KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT2KEY').join('RIKUINPUT2KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT3KEY').join('RIKUINPUT3KEY' + code_ids);
                        no_code = no_code.split('TIMEOUTKEY').join('TIMEOUTKEY' + code_ids);
                        no_code = no_code.split('TABIDKEY').join('TABIDKEY' + code_ids);
                        no_code = no_code.split('NEWWINDOWKEY').join('NEWWINDOWKEY' + code_ids);
                        no_code = no_code.split('RUNONVARSKEY').join('RUNONVARSKEY' + code_ids);
                        no_code = no_code.split('PAGINATIONKEY').join('PAGINATIONKEY' + code_ids);

                        no_code_container.push({ selector: selector_type, options: options_array, code_ids: code_ids, variablenames: no_code_variable_names, variables: no_code_variables.join(','), style: event.data.style, id: code_ids, no_code: no_code });


                        //document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
                        //document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
                        //document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;
                        drawNoCodeContainer();

                        //googleSignIn


                        window.editor.setValue(old_code + "\n//Generated Script id=" + code_ids + "\n" + new_code + "\n//endcode\n");
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        $(document).on('click', '#googleSignIn', function () {
                            SendMessage("GoogleSignIn", "GoogleSignIn", "event.data");


                        });
                        if (typeof window.editor != 'undefined') {
                            var added_code = "//Generated Script id=" + code_ids;
                            added_code += code;
                            window.editor.setValue(old_code + added_code + "\n//endcode");
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                            document.getElementById('cheatmenu').style.display = 'block';

                        }
                        window.editor.resize();
                        code_ids += 1;
                        currentDelay = 3;

                    };




                } else if (event.data.style == "gmail") {
                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='GMAILVALUEKEY'>
            `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ` + ' ' + ` + no_code_container[jj]["variables"];

                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ` + ' ' + ` + storage_vars[jj];
                        }
                    }
                    options_string += `<option value="element.src">Image Source</option>`;
                    options_string += `<option value="element.href">Link Destination</option>`;
                    if (no_code_variables_string.length > 0) {
                        options_string += `<option  value="elements[kk].innerText + ' ' + ` + no_code_variables_string + `">elements[kk].innerText + ' ' + ` + no_code_variables_string + `</option>`;

                        options_string += `<option  selected='selected'  value="element.innerText">Inner Text</option>`;
                    } else {
                        options_string += `<option  selected='selected' value="element.innerText">Inner Text element.innerText</option>`;
                    }
                    options_string += `</select>`;


                    new_code = `
     
        var delayKey = 1000;
            setTimeout(function(){
                var elements1 = document.getElementsByTagName('` + event.data.setNoCode + `');
    
                 var to = '` + user_email + `';
                 var subject = 'Cheat Layer Automation Alert';
                 var body = element.innerText;
                 var gmailURL = 'https://mail.google.com/mail/u/0/?fs=1&to=' +to + '&su=' + subject + '&body=' +body + '&tf=cm';
          
                    var timeout = 30;
                    var script = \`
                    var delayKey = 1000;
                    setTimeout(function(){
                    var elements = document.getElementsByTagName('DIV');
                    function slow(kk){
                     if(typeof elements[kk] != 'undefined' && elements[kk].getAttribute('id') && elements[kk].getAttribute('id').indexOf(":oz") >= 0){
                            elements[kk].click();
                            if(kk < elements.length){
                                setTimeout(function(){slow(kk+1)},10000);
                            }
                        }else{
                            if(kk < elements.length){
                                setTimeout(function(){slow(kk+1)},1);
                            }
                        }
                    }
                    slow(0);
                    },/*delay*/1*delayKey);\`;
    
                runOnTab(gmailURL, script, 30, {newWindow:true, id:-1})
    
    
            },/*delay*/` + currentDelay + `*delayKey);
        `;
                    text = `
        Start Code
        Endpoint : Gmail<br> 
        
        Body: <br>
    ` + options_string + `
    
        <br>
    
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
       
        End Code
        var delayKey = 1000;
            setTimeout(function(){
                var elements1 = document.getElementsByTagName('` + event.data.setNoCode + `');
    
                 var to = '` + user_email + `';
                 var subject = 'Cheat Layer Automation Alert';
                 var body = elements1[0].innerText;
                 var gmailURL = 'https://mail.google.com/mail/u/0/?fs=1&to=' +to + '&su=' + subject + '&body=' +body + '&tf=cm';
          
                    var timeout = 30;
                    var script = \`
                    var delayKey = 1000;
                    setTimeout(function(){
                    var elements = document.getElementsByTagName('DIV');
                    function slow(kk){
                     if(typeof elements[kk] != 'undefined' && elements[kk].getAttribute('id') && elements[kk].getAttribute('id').indexOf(":oz") >= 0){
                            elements[kk].click();
                            if(kk < elements.length){
                                setTimeout(function(){slow(kk+1)},10000);
                            }
                        }else{
                            if(kk < elements.length){
                                setTimeout(function(){slow(kk+1)},1);
                            }
                        }
                    }
                    slow(0);
                    },/*delay*/1*delayKey);\`;
    
                runOnTab(gmailURL, script, 30, {newWindow:true, id:-1})
    
    
            },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "filter") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='FILTERINPKEY'>
            `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }
                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ',' + storage_vars[jj];
                        }
                    }
                    options_string += `<option value="element.src">Image Source</option>`;
                    options_string += `<option value="element.href">Link Destination</option>`;

                    options_string += `<option  selected='selected' value="element.innerText">Inner Text element.innerText</option>`;

                    options_string += `</select>`;


                    new_code = `
        var delayKey = 1000;
        setTimeout(function(){
        /*start filter code*/
        /*end filter code*/
    
        },/*delay*/` + currentDelay + `*delayKey);
        `;
                    text = `
        Start Code
        Endpoint : Filter<br> 
        
        Filter Operations:<br> <select class='selectCheat selectBox  select' name="vars" id='FILTEROPKEY'>
        <option value='regex'>Regex Filter</option>
        <option selected="selected" value='contains'>Contains</option>
        <option value='notcontains'>Does Not Contain</option>
        <option value='less'>Less Than</option>
        <option value='greater'>Greater Than</option>
        <option value='dateless'>Date Less Than</option>
        <option value='dategreater'>Date Greater Than</option>
        <option value='matches'>Matches</option>
    
        </select>
        Value: <br><input class='cheatlayer cheat-input'style='background-color:white; color:black' type="text" id='FILTERVALKEY'  style='background-color:white; color:black'type="text" value=""></input><br>
        
        <br>
        Variable: <br>
    ` + options_string + `
    
        <br>
    
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
       
        End Code
        var delayKey = 1000;
            setTimeout(function(){
            /*start filter code*/
            /*end filter code*/
    
            },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "pdf") {

                    total_variables++;
                    no_code_variables.push(`_pdf` + total_variables);
                    no_code_variable_names.push("PDF Output " + total_variables)


                    new_code = `
        var delayKey = 1000;
        setTimeout(function(){
        
        var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
        function slow(kk){
            if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
                function gettext(pdfUrl){
                    var pdf = pdfjsLib.getDocument(pdfUrl);
                    //console.log(pdf);
                    return pdf.promise.then(function(pdf) { // get all pages text
                      //console.log(pdf)
                      var maxPages = pdf._pdfInfo.numPages;
                      var countPromises = []; // collecting all page promises
                      for (var j = 1; j <= maxPages; j++) {
                        var page = pdf.getPage(j);
                  
                        var txt = "";
                        countPromises.push(page.then(function(page) { // add page promise
                          var textContent = page.getTextContent();
                          return textContent.then(function(text){ // return content promise
                            return text.items.map(function (s) { return s.str; }).join(''); // value page text 
                          });
                        }));
                      }
                      // Wait for all pages and join text
                      return Promise.all(countPromises).then(function (texts) {
                        return texts.join('');
                      });
                    });
                  }
                      pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.15.349/build/pdf.worker.js';
                   
                  // waiting on gettext to finish completion, or error
                  gettext(elements[kk].href).then(function (text) {
                    //console.log('parse ' + text); 
                    window.pdf = text; 
                  }, 
                  function (reason) {
                    console.error(reason);
                  });
                  
                if(kk < elements.length){
                setTimeout(function(){
                    slow(kk+1);
                }, /*delay*/` + currentDelay + `*delayKey);
            } 
        }else{
            if(kk < elements.length){
                setTimeout(function(){
                    slow(kk+1);
                }, /*delay*/` + currentDelay + `);
            }
        
        }
        
        }
        slow(0);
        },/*delay*/` + currentDelay + `*delayKey);
        `;
                    text = `
        Start Code
        Enpoint: OCR<br>
        Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
        Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
        Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
        
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
        End Code
        var duplicates = [];
        var delayKey = 1000;
        setTimeout(function(){
        
        var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
        function slow(kk){
            if(typeof elements[kk] != 'undefined'  && elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
                function gettext(pdfUrl){
                    var pdf = pdfjsLib.getDocument(pdfUrl);
                    //console.log(pdf);
                    return pdf.promise.then(function(pdf) { // get all pages text
                      //console.log(pdf)
                      var maxPages = pdf._pdfInfo.numPages;
                      var countPromises = []; // collecting all page promises
                      for (var j = 1; j <= maxPages; j++) {
                        var page = pdf.getPage(j);
                  
                        var txt = "";
                        countPromises.push(page.then(function(page) { // add page promise
                          var textContent = page.getTextContent();
                          return textContent.then(function(text){ // return content promise
                            return text.items.map(function (s) { return s.str; }).join(''); // value page text 
                          });
                        }));
                      }
                      // Wait for all pages and join text
                      return Promise.all(countPromises).then(function (texts) {
                        return texts.join('');
                      });
                    });
                  }
                      pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.15.349/build/pdf.worker.js';
                   
                  // waiting on gettext to finish completion, or error
                  gettext(elements[kk].href).then(function (text) {
                    //console.log('parse ' + text); 
                    window.pdf = text; 
                  }, 
                  function (reason) {
                    console.error(reason);
                  });      
                        duplicates.push(elements[kk].innerText);
            if(kk < elements.length){
                setTimeout(function(){
                    slow(kk+1);
                }, /*delay*/` + currentDelay + `*delayKey);
            } 
        }else{
            if(kk < elements.length){
                setTimeout(function(){
                    slow(kk+1);
                }, /*delay*/` + currentDelay + `);
            }
        
        }
        
        }
        slow(0);
        },/*delay*/` + currentDelay + `*delayKey);
        
        `;
                } else if (event.data.style == "OCR") {

                    new_code = `
    var delayKey = 1000;
    setTimeout(function(){
    
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    function slow(kk){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            OCR(elements[kk]);

            if(kk < elements.length){
            setTimeout(function(){
                slow(kk+1);
            }, /*delay*/` + currentDelay + `*delayKey);
        } 
    }else{
        if(kk < elements.length){
            setTimeout(function(){
                slow(kk+1);
            }, /*delay*/` + currentDelay + `);
        }
    
    }
    
    }
    slow(0);
    },/*delay*/` + currentDelay + `*delayKey);
    `;
                    text = `
    Start Code
    Enpoint: OCR<br>
    Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
    Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
    Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    
    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
    End Code
    var duplicates = [];
    var delayKey = 1000;
    setTimeout(function(){
    
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    function slow(kk){
        if(typeof elements[kk] != 'undefined'  && elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            OCR(elements[kk]);
  
                    duplicates.push(elements[kk].innerText);
        if(kk < elements.length){
            setTimeout(function(){
                slow(kk+1);
            }, /*delay*/` + currentDelay + `*delayKey);
        } 
    }else{
        if(kk < elements.length){
            setTimeout(function(){
                slow(kk+1);
            }, /*delay*/` + currentDelay + `);
        }
    
    }
    
    }
    slow(0);
    },/*delay*/` + currentDelay + `*delayKey);
    
    `;
                } else if (event.data.style == "gsheets") {

                    if (true) {

                        var options_string = `<select class='selectCheat selectBox  select' name="vars" id='SHEETVALUESKEY'>
            `;
                        for (var jj = 0; jj < no_code_container.length; jj++) {
                            if (no_code_container[jj]["variables"].length > 0) {
                                options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                                no_code_variables_string += ',' + no_code_container[jj]["variables"];
                            }
                        }
                        options_string += `<option value="elements[kk].src">Image Source</option>`;
                        options_string += `<option value="elements[kk].href">Link Destination</option>`;
                        if (no_code_variables_string.length > 0) {
                            options_string += `<option  selected='selected' value="elements[kk].innerText` + no_code_variables_string + `">elements[kk].innerText` + no_code_variables_string + `</option>`;
                            options_string += `<option  value="elements[kk].innerText">Inner Text</option>`;
                        } else {
                            options_string += `<option  selected='selected' value="elements[kk].innerText">Inner Text</option>`;
                        }
                        options_string += `</select>`;
                        //alert('Please note that google is still reviewing our direct API request, so you may be blocked until they complete review. Early users are grandfathered in.')

                        new_code = `
var delayKey = 1000;
setTimeout(function(){

var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
function slow(kk){
    if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
    google_sheets_add_row('GOOGLE_SHEETS_ID',/*name*/'Sheet1',[elements[kk].innerText` + no_code_variables_string + `]);  
    if(kk < elements.length){
        setTimeout(function(){
            slow(kk+1);
        }, /*delay*/` + currentDelay + `*delayKey);
    } 
}else{
    if(kk < elements.length){
        setTimeout(function(){
            slow(kk+1);
        }, /*delay*/` + currentDelay + `);
    }

}

}
slow(0);
},/*delay*/` + currentDelay + `*delayKey);
`;
                        text = `
Start Code
Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
Endpoint: Google Sheets<br>
URL:<br>
<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='SHEETIDKEY' value='GOOGLE_SHEETS_ID'></input><br>
Sheet Name:<br>
<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='SHEETNAMEKEY'  value='Sheet1'></input><br>
Sheet Values:<br>
` + options_string + ` <br>
Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
<br>

<hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
End Code
var duplicates = [];
var delayKey = 1000;
setTimeout(function(){

var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
function slow(kk){
    if(typeof elements[kk] != 'undefined'  && elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
    google_sheets_add_row('GOOGLE_SHEETS_ID',/*name*/'Sheet1',[elements[kk].innerText` + no_code_variables_string + `]);  
    duplicates.push(elements[kk].innerText);
    if(kk < elements.length){
        setTimeout(function(){
            slow(kk+1);
        }, /*delay*/` + currentDelay + `*delayKey);
    } 
}else{
    if(kk < elements.length){
        setTimeout(function(){
            slow(kk+1);
        }, /*delay*/` + currentDelay + `);
    }

}

}
slow(0);
},/*delay*/` + currentDelay + `*delayKey);

`;
                    }
                } else if (event.data.style == "getdata") {


                    $('HTML').append(`

    <div id="getDataMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
    
    <div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:30%;height:20%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
    <center><h1 style="color:black !important;">Google Sheets Data Input</h1><br>
    Please enter the google sheets published CSV URL:<br>
    <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='sheet_input_url'  value=''></input><br>
    
    <button style='background-color:white;color:black;' id='saveSheetURL'>Save</button>
    <button style='background-color:white;color:black;' id='cancelSheetURL'>Cancel</button><br>
    
    </center>
    </div>
    
    
    </div>
    `);
                    document.getElementById('cancelSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";
                    };


                    document.getElementById('saveSheetURL').onclick = function () {
                        document.getElementById('getDataMenu').style.display = "none";
                        var options_string = `<select class='selectCheat selectBox  select' name="vars" id='CODEGETDATA'>
        `;
                        for (var jj = 0; jj < scripts.length; jj++) {
                            if (scripts[jj]["name"] && scripts[jj]["name"].length > 0 && scripts[jj]["deleted"] != "true") {
                                options_string += `<option value="` + scripts[jj]["name"] + `">` + scripts[jj]["name"] + `</option>`;
                            }
                        }
                        options_string += `<option selected="selected" value="none">None</option>`;

                        options_string += `</select>`;

                        var sheet_url = document.getElementById('sheet_input_url').value;
                        sendAjax(sheet_url, {}, "GET", `
        window.data = data;
        //console.log(data);
        `);

                        new_code = `
        var delayKey = 1000;
setTimeout(function(){
sendAjax('` + sheet_url + `',{},"GET", \`
window.data = data;
\`);         
//console.log(window.data);       
},/*delay*/` + currentDelay + `*delayKey);

        `;
                        text = `
        Start Code
        Endpoint : Google Sheets<br> 
        Google Sheets CSV URL:<br>
        
        Run Cheat:<br>
        ` + options_string + `<br>

        
        <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='CSVURLKEY'  value='` + sheet_url + `'></input><br>

        Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
        <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
        End Code
        var delayKey = 1000;
setTimeout(function(){
sendAjax('` + sheet_url + `',{},"GET", \`
window.data = data;
/*startCheat*/
/*stopCheat*/
\`);         
//console.log(window.data);     
},/*delay*/` + currentDelay + `*delayKey);
        `;

                        var icon_code = '';
                        old_code = window.editor.getValue();

                        if (text.includes("End Code")) {
                            code = text.split("End Code")[1];
                            no_code = text.split("End Code")[0];
                        } else {
                            code = text;
                        }





                        var img_src = "https://cheatlayer.com/icon2.png";
                        var Title = "";
                        //Tesseract

                        img_src = "https://cheatlayer.com/images/textarea/text1.png";
                        Title += "Get Data GSheets</h2>";

                        no_code = no_code.split("textarea").join("textarea style='width:100%'");
                        no_code = no_code.split(".getAttribute('innerText')").join(".innerText");

                        icon_code += '<h2 class="cheatlayer"style="color:black;"><img style="margin:20px;pointer-events: none;background-color:#FFFFFF;width:50px;height:50px;border-radius:10px;border:1px solid black;padding:5px;margin:5px;" src=\"';
                        icon_code += img_src;
                        icon_code += '\"></img> ' + Title;

                        no_code = icon_code + "" + no_code + "";
                        (no_code.split('SELECTORKEY'));
                        no_code = no_code.split('SELECTORKEY').join('SELECTORKEY' + code_ids);
                        no_code = no_code.split('XPATHKEY').join('XPATHKEY' + code_ids);
                        no_code = no_code.split('CSSKEY').join('CSSKEY' + code_ids);
                        no_code = no_code.split('ELEMENTSELECTKEY').join('ELEMENTSELECTKEY' + code_ids);

                        no_code = no_code.split('DELAYKEY').join('DELAYKEY' + code_ids);
                        no_code = no_code.split('KEYPRESSKEY').join('KEYPRESSKEY' + code_ids);
                        no_code = no_code.split('PRINTKEY').join('PRINTKEY' + code_ids);
                        no_code = no_code.split('VARIABLEATTRKEY').join('VARIABLEATTRKEY' + code_ids);

                        no_code = no_code.split('REMOVEKEY').join('REMOVEKEY' + code_ids);
                        no_code = no_code.split('VARIABLEKEY').join('VARIABLEKEY' + code_ids);

                        no_code = no_code.split('VALUEKEY').join('VALUEKEY' + code_ids);
                        no_code = no_code.split('INPUTKEY').join('INPUTKEY' + code_ids);
                        no_code = no_code.split('INNERTEXTKEY').join('INNERTEXTKEY' + code_ids);

                        no_code = no_code.split('TIMERKEY').join('TIMERKEY' + code_ids);
                        no_code = no_code.split('LOCATIONKEY').join('LOCATIONKEY' + code_ids);
                        no_code = no_code.split('ELEMENTKEY').join('ELEMENTKEY' + code_ids);
                        no_code = no_code.split('CODEKEY').join('CODEKEY' + code_ids);
                        no_code = no_code.split('CODEGETDATA').join('CODEGETDATA' + code_ids);

                        no_code = no_code.split('Start Code').join('');
                        //  no_code = no_code.split('//').join('');
                        no_code = no_code.split('SHEETURLKEY').join('SHEETKEY' + code_ids);
                        no_code = no_code.split('SHEETIDKEY').join('SHEETIDKEY' + code_ids);
                        no_code = no_code.split('DOCIDKEY').join('DOCIDKEY' + code_ids);
                        no_code = no_code.split('DOCVALUESKEY').join('DOCVALUESKEY' + code_ids);
                        no_code = no_code.split('GMAILVALUEKEY').join('GMAILVALUEKEY' + code_ids);

                        no_code = no_code.split('SHEETVALUESKEY').join('SHEETVALUESKEY' + code_ids);
                        no_code = no_code.split('SHEETNAMEKEY').join('SHEETNAMEKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKURLKEY').join('WEBHOOKURLKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKDATAKEY').join('WEBHOOKDATAKEY' + code_ids);
                        no_code = no_code.split('CSVURLKEY').join('CSVURLKEY' + code_ids);
                        no_code = no_code.split('RIKUNAME').join('RIKUNAME' + code_ids);
                        no_code = no_code.split('RIKUAPIKEY').join('RIKUAPIKEY' + code_ids);
                        no_code = no_code.split('PROMPTKEY').join('PROMPTKEY' + code_ids);
                        no_code = no_code.split('GPT3KEY').join('GPT3KEY' + code_ids);

                        no_code = no_code.split('RIKUINPUT5KEY').join('RIKUINPUT5KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT4KEY').join('RIKUINPUT4KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT1KEY').join('RIKUINPUT1KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT2KEY').join('RIKUINPUT2KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT3KEY').join('RIKUINPUT3KEY' + code_ids);
                        no_code = no_code.split('TIMEOUTKEY').join('TIMEOUTKEY' + code_ids);
                        no_code = no_code.split('TABIDKEY').join('TABIDKEY' + code_ids);
                        no_code = no_code.split('NEWWINDOWKEY').join('NEWWINDOWKEY' + code_ids);
                        no_code = no_code.split('RUNONVARSKEY').join('RUNONVARSKEY' + code_ids);
                        no_code = no_code.split('PAGINATIONKEY').join('PAGINATIONKEY' + code_ids);

                        no_code_container.push({ selector: selector_type, options: options_array, code_ids: code_ids, variablenames: no_code_variable_names, variables: no_code_variables.join(','), style: event.data.style, id: code_ids, no_code: no_code });


                        //document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
                        //document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
                        //document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;
                        drawNoCodeContainer();

                        //googleSignIn


                        window.editor.setValue(old_code + "\n//Generated Script id=" + code_ids + "\n" + new_code + "\n//endcode\n");
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        $(document).on('click', '#googleSignIn', function () {
                            SendMessage("GoogleSignIn", "GoogleSignIn", "event.data");


                        });
                        if (typeof window.editor != 'undefined') {
                            var added_code = "//Generated Script id=" + code_ids;
                            added_code += code;
                            window.editor.setValue(old_code + added_code + "\n//endcode");
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                            document.getElementById('cheatmenu').style.display = 'block';

                        }
                        window.editor.resize();
                        code_ids += 1;

                        currentDelay = 3;

                    };

                } else if (event.data.style == "webhook") {
                    var options_arr = [];
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_arr.push(no_code_container[jj]["variables"])
                        }
                    }
                    options_arr.push("element.src")
                    options_arr.push("element.href")

                    options_arr.push("custom")

                    $('HTML').append(`

                <div id="wizardMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
                
                <div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:40%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
                <center><h1 style="color:black !important;">API Wizard</h1><br>
                WebhookURL:<br>
                <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='api_wizard_url'  value=''></input><br>
                Request Type:<br>
                <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='api_wizard_type'  value='POST'></input><br>
                Headers {<div id='header_wiz'></div>}<br>
                Body {<div id='body_wiz'></div>}<br>

                <button style='background-color:white;color:black;' id='addWizardBody'>Add Body Data</button><br>
                <button style='background-color:white;color:black;' id='addWizardHeader'>Add Header</button><br>

                <button style='background-color:white;color:black;' id='saveWizard'>Save</button><br>
                <button style='background-color:white;color:black;' id='cancelWizard'>Cancel</button><br><br>
                
                </center>
                </div>
                
                
                </div>
                `);
                    var header_count = 0;
                    var body_count = 0;
                    var headers = {};
                    var bodies = {};

                    document.getElementById('addWizardHeader').onclick = function () {
                        $('#header_wiz').append(`<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='header_wiz_keys` + header_count + `'  value='key'></input> : 
                            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='header_wiz_values` + header_count + `'  value='value'></input><br>`)

                        //  options_array.push({"title":'Header Key 1', "id":'WEBHOOKHEADERKEY' + header_count + '_' + code_ids, "value":header_key, "type":'text'})
                        // options_array.push({"title":'Header Data 1', "id":'WEBHOOKHEADERDATAKEY' +header_count + '_' + code_ids, "value":header_val, "type":'text'})
                        //    headers[header_key] = header_val;

                        header_count++;

                    };


                    document.getElementById('addWizardBody').onclick = function () {
                        //  options_array.push({"title":'Body Key 1', "id":'WEBHOOKKEY1' + code_ids, "value":body_key, "type":'text'})
                        //   options_array.push({"title":'Body Value 1', "id":'WEBHOOKDATAKEY' + code_ids, "value":'data', "type":'dropdown', 'options':options_arr})

                        //  bodies[body_key] = body_val;

                        $('#body_wiz').append(`<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='body_wiz_keys` + body_count + `'  value='key'></input> : 
                    <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='body_wiz_values` + body_count + `'  value='value'></input><br>`)



                        body_count++;

                    };

                    document.getElementById('cancelWizard').onclick = function () {
                        document.getElementById('wizardMenu').style.display = "none";
                    };


                    document.getElementById('saveWizard').onclick = function () {

                        for (var kk = 0; kk < body_count; kk++) {
                            //            options_array.push({"title":'Body Key ' + kk, "id":'WEBHOOKBODYKEY_' + kk  + '_' + code_ids, "value":$('#body_wiz_keys' + kk).val(), "type":'text'})
                            //           options_array.push({"title":'Body Value ' + kk, "id":'WEBHOOKBODYVALUE_' + kk  + '_' + code_ids, "value":$('#body_wiz_values' + kk).val(), "type":'dropdown', 'options':options_arr})

                            bodies[$('#body_wiz_keys' + kk).val()] = $('#body_wiz_values' + kk).val();

                        }
                        for (var kk = 0; kk < header_count; kk++) {
                            //         options_array.push({"title":'Header Key ' + kk, "id":'WEBHOOKHEADERKEY_' + kk  + '_' + code_ids, "value":$('#body_wiz_keys' + kk).val(), "type":'text'})
                            //          options_array.push({"title":'Header Value ' + kk, "id":'WEBHOOKHEADERVALUE_' + kk  + '_' + code_ids, "value":$('#body_wiz_values' + kk).val(), "type":'dropdown', 'options':options_arr})

                            headers[$('#body_wiz_keys' + kk).val()] = $('#body_wiz_values' + kk).val();

                        }

                        document.getElementById('wizardMenu').style.display = "none";
                        var wiz_url = document.getElementById('api_wizard_url').value;
                        var wiz_type = document.getElementById('api_wizard_type').value;
                     
                        SendMessage("sendAjax", "data", {
                            url: wiz_url,
                            data: bodies,
                            mode: wiz_type,
                            callback: 'window.API = JSON.parse(data);//console.log(JSON.stringify(data));',
                            headers: headers,
                            dataType: null,
                            currentTab_id: 0
                        });

                        new_code = `

var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
for(var kk = 0; kk < elements.length; kk++){
    if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
        sendAjax('WEBHOOK_URL',` + JSON.stringify(bodies) + `,'POST');       
    }
}

`;
                        text = `
Start Code
Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
URL:<br>
<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='WEBHOOKURLKEY'  value='` + wiz_url + `'></input><br>

Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
<hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
End Code
var delayKey = 1000;
setTimeout(function(){

var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
for(var kk = 0; kk < elements.length; kk++){
if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
    sendAjax('` + wiz_url + `',` + JSON.stringify(bodies) + `,/*type*/'` + wiz_type + `',/*callback*/'//console.log(data);',/*header*/` + JSON.stringify(headers) + `);       
}
}},/*delay*/` + currentDelay + `*delayKey);

`;

                        var icon_code = '';
                        old_code = window.editor.getValue();

                        if (text.includes("End Code")) {
                            code = text.split("End Code")[1];
                            no_code = text.split("End Code")[0];
                        } else {
                            code = text;
                        }





                        var img_src = "https://cheatlayer.com/icon2.png";
                        var Title = "";
                        //Tesseract

                        img_src = "https://cheatlayer.com/images/textarea/text1.png";
                        Title += "Get Data GSheets</h2>";

                        no_code = no_code.split("textarea").join("textarea style='width:100%'");
                        no_code = no_code.split(".getAttribute('innerText')").join(".innerText");

                        icon_code += '<h2 class="cheatlayer"style="color:black;"><img style="margin:20px;pointer-events: none;background-color:#FFFFFF;width:50px;height:50px;border-radius:10px;border:1px solid black;padding:5px;margin:5px;" src=\"';
                        icon_code += img_src;
                        icon_code += '\"></img> ' + Title;

                        no_code = icon_code + "" + no_code + "";
                        (no_code.split('SELECTORKEY'));
                        no_code = no_code.split('SELECTORKEY').join('SELECTORKEY' + code_ids);
                        no_code = no_code.split('XPATHKEY').join('XPATHKEY' + code_ids);
                        no_code = no_code.split('CSSKEY').join('CSSKEY' + code_ids);
                        no_code = no_code.split('ELEMENTSELECTKEY').join('ELEMENTSELECTKEY' + code_ids);

                        no_code = no_code.split('DELAYKEY').join('DELAYKEY' + code_ids);
                        no_code = no_code.split('KEYPRESSKEY').join('KEYPRESSKEY' + code_ids);
                        no_code = no_code.split('PRINTKEY').join('PRINTKEY' + code_ids);
                        no_code = no_code.split('VARIABLEATTRKEY').join('VARIABLEATTRKEY' + code_ids);

                        no_code = no_code.split('REMOVEKEY').join('REMOVEKEY' + code_ids);
                        no_code = no_code.split('VARIABLEKEY').join('VARIABLEKEY' + code_ids);

                        no_code = no_code.split('VALUEKEY').join('VALUEKEY' + code_ids);
                        no_code = no_code.split('INPUTKEY').join('INPUTKEY' + code_ids);
                        no_code = no_code.split('INNERTEXTKEY').join('INNERTEXTKEY' + code_ids);

                        no_code = no_code.split('TIMERKEY').join('TIMERKEY' + code_ids);
                        no_code = no_code.split('LOCATIONKEY').join('LOCATIONKEY' + code_ids);
                        no_code = no_code.split('ELEMENTKEY').join('ELEMENTKEY' + code_ids);
                        no_code = no_code.split('CODEKEY').join('CODEKEY' + code_ids);
                        no_code = no_code.split('CODEGETDATA').join('CODEGETDATA' + code_ids);

                        no_code = no_code.split('Start Code').join('');
                        //  no_code = no_code.split('//').join('');
                        no_code = no_code.split('SHEETURLKEY').join('SHEETKEY' + code_ids);
                        no_code = no_code.split('SHEETIDKEY').join('SHEETIDKEY' + code_ids);
                        no_code = no_code.split('DOCIDKEY').join('DOCIDKEY' + code_ids);
                        no_code = no_code.split('DOCVALUESKEY').join('DOCVALUESKEY' + code_ids);
                        no_code = no_code.split('GMAILVALUEKEY').join('GMAILVALUEKEY' + code_ids);

                        no_code = no_code.split('FILTERINPKEY').join('FILTERINPKEY' + code_ids);
                        no_code = no_code.split('FILTEROPKEY').join('FILTEROPKEY' + code_ids);
                        no_code = no_code.split('FILTERVALKEY').join('FILTERVALKEY' + code_ids);


                        no_code = no_code.split('SHEETVALUESKEY').join('SHEETVALUESKEY' + code_ids);
                        no_code = no_code.split('SHEETNAMEKEY').join('SHEETNAMEKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKURLKEY').join('WEBHOOKURLKEY' + code_ids);
                        no_code = no_code.split('WEBHOOKDATAKEY').join('WEBHOOKDATAKEY' + code_ids);
                        no_code = no_code.split('CSVURLKEY').join('CSVURLKEY' + code_ids);
                        no_code = no_code.split('RIKUNAME').join('RIKUNAME' + code_ids);
                        no_code = no_code.split('RIKUAPIKEY').join('RIKUAPIKEY' + code_ids);
                        no_code = no_code.split('PROMPTKEY').join('PROMPTKEY' + code_ids);
                        no_code = no_code.split('GPT3KEY').join('GPT3KEY' + code_ids);

                        no_code = no_code.split('RIKUINPUT5KEY').join('RIKUINPUT5KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT4KEY').join('RIKUINPUT4KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT1KEY').join('RIKUINPUT1KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT2KEY').join('RIKUINPUT2KEY' + code_ids);
                        no_code = no_code.split('RIKUINPUT3KEY').join('RIKUINPUT3KEY' + code_ids);
                        no_code = no_code.split('TIMEOUTKEY').join('TIMEOUTKEY' + code_ids);
                        no_code = no_code.split('TABIDKEY').join('TABIDKEY' + code_ids);
                        no_code = no_code.split('NEWWINDOWKEY').join('NEWWINDOWKEY' + code_ids);
                        no_code = no_code.split('RUNONVARSKEY').join('RUNONVARSKEY' + code_ids);
                        no_code = no_code.split('PAGINATIONKEY').join('PAGINATIONKEY' + code_ids);

                        no_code_container.push({ selector: selector_type, options: options_array, code_ids: code_ids, variablenames: no_code_variable_names, variables: no_code_variables.join(','), style: event.data.style, id: code_ids, no_code: no_code });


                        //document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
                        //document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
                        //document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;
                        drawNoCodeContainer();

                        //googleSignIn


                        window.editor.setValue(old_code + "\n//Generated Script id=" + code_ids + "\n" + new_code + "\n//endcode\n");
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        $(document).on('click', '#googleSignIn', function () {
                            SendMessage("GoogleSignIn", "GoogleSignIn", "event.data");


                        });
                        if (typeof window.editor != 'undefined') {
                            var added_code = "//Generated Script id=" + code_ids;
                            added_code += code;
                            window.editor.setValue(old_code + added_code + "\n//endcode");
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                            document.getElementById('cheatmenu').style.display = 'block';

                        }
                        window.editor.resize();
                        code_ids += 1;
                        currentDelay = 3;

                    };



                } else if (event.data.style == "sentiment") {
                    //                sendAjax('WEBHOOK_URL',{data: element.innerText},'POST');       
                    currentDelay = 10;

                    new_code = `
var delayKey = 1000;
var  sentiment = ml5.sentiment('movieReviews', modelReady);
var sentiments = [];
var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
function modelReady() {

setTimeout(function(){
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
    
    
    
                // model is ready
               var prediction = sentiment.predict(elements[kk].innerText);]);
               var output = parseFloat(prediction.score) > 0.5 ? 'positive' : 'negative';
               //console.log(prediction.score + ' ' + output);
               sentiments.push(prediction.score + ' ' + output);
               
                  
              
              
              
        }
    }},/*delay*/` + currentDelay + `*delayKey);
}

`;
                    text = `
Start Code
Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
ID:<br>
<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='SHEETIDKEY' value='GOOGLE_SHEETS_ID'></input><br>
Sheet Name:<br>
<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='SHEETNAMEKEY'  value='Sheet1'></input><br>
Sheet Values:<br>
<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='SHEETVALUESKEY' value='element.innerText` + no_code_variables_string + `'></input><br>
Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
<hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
End Code
var delayKey = 1000;
var  sentiment = ml5.sentiment('movieReviews', modelReady);
var sentiments = [];
var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
function modelReady() {

setTimeout(function(){
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
    
    
    
                // model is ready
               var prediction = sentiment.predict(elements[kk].innerText);
               var output = parseFloat(prediction.score) > 0.5 ? 'positive' : 'negative';
               //console.log(prediction.score + ' ' + output);
               sentiments.push(prediction.score + ' ' + output);
              
              
        }
    }},/*delay*/` + currentDelay + `*delayKey);
}
`;
                } else if (event.data.style == "riku") {
                    currentDelay = 5;
                    no_code_variables.push(`riku[riku.length -1]`);
                    no_code_variable_names.push("Riku.AI Last Output ")

                    riku_variables++;

                    var options_string1 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT1KEY'>
    `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string1 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }

                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string1 += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string1 += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string1 += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string1 += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }

                    options_string1 += `<option selected="selected" value="">None</option>`;

                    options_string1 += `<option value="Custom">Custom Input</option>`;
                    options_string1 += `</select>`;

                    var options_string2 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT2KEY'>
      `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string2 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string2 += `<option selected="selected" value="">None</option>`;

                    options_string2 += `<option value="Custom">Custom Input</option>`;
                    options_string2 += `</select>`;


                    var options_string3 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT3KEY'>
        `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string3 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string3 += `<option selected="selected" value="">None</option>`;

                    options_string3 += `<option value="Custom">Custom Input</option>`;
                    options_string3 += `</select>`;


                    var options_string4 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT4KEY'>
          `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string4 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string4 += `<option selected="selected" value="">None</option>`;

                    options_string4 += `<option value="Custom">Custom Input</option>`;
                    options_string4 += `</select>`;


                    var options_string5 = `<select class='selectCheat selectBox  select' name="vars" id='RIKUINPUT5KEY'>
            `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string5 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string5 += `<option selected="selected" value="">None</option>`;

                    options_string5 += `<option value="Custom">Custom Input</option>`;
                    options_string5 += `</select>`;


                    new_code = `
    
    var delayKey = 1000;
    setTimeout(function(){
        var elements = document.getElementsByTagName('` + event.data.setNoCode + `');

        for(var kk = 0; kk < elements.length; kk++){
            if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
                elements[kk].click();
                elements[kk].focus();

                rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");       
            }
        }  
    },/*delay*/` + currentDelay + `*delayKey);


    `;
                    text = `
    Start Code
    Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
    Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
    Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
   Endpoint : Riku.ai<br> 
    Account Holder name:<br>
    <input class='cheatlayer cheat-input' id='RIKUNAME' width='174px' style='background-color:white; color:black;width:174px !important;' value='Account'></input><br>
    
    API KEY:<br>
    <input class='cheatlayer cheat-input' id='RIKUAPIKEY' width='174px' style='background-color:white; color:black;width:174px !important;' value='API_KEY'></input><br>
    Prompt ID:<br>
    <input class='cheatlayer cheat-input' id='PROMPTKEY' width='174px' style='background-color:white; color:black;width:174px !important;' value='PROMPT_ID'></input><br>
   
    Input 1:<br>
    ` + options_string1 + `<br>
    Input 2:<br>
    ` + options_string2 + `<br>
    Input 3:<br>
    ` + options_string3 + `<br>
    Input 4:<br>
    ` + options_string4 + `<br>
    Input 5:<br>
    ` + options_string5 + `<br>

    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
    End Code
    var delayKey = 1000;
    setTimeout(function(){
        var elements = document.getElementsByTagName('` + event.data.setNoCode + `');

        for(var kk = 0; kk < elements.length; kk++){
            if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
                elements[kk].click();
                elements[kk].focus();

                rikuPrompt(/*account name*/"Account", /*api key*/"API_KEY",/*prompt id*/"PROMPT_ID", /*input1*/"", /*input2*/"", /*input3*/"", /*input4*/"", /*input5*/"");       
            }
        } 
    },/*delay*/` + currentDelay + `*delayKey);
    
    `;
                    currentDelay = 5;

                } else if (event.data.style == "object") {

                    total_variables++;
                    no_code_variables.push(`_object` + total_variables);
                    no_code_variable_names.push("Object Detection Output " + total_variables)

                    new_code = `
   
    var _object` + total_variables + ` = 'none';

    var delayKey = 1000;
    var objectkeys = 'none';
    
    setTimeout(function(){
        var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
        const result = document.getElementById('result'); // The result tag in the HTML
        const probability = document.getElementById('probability'); // The probability tag in the HTML
        
        for(var kk = 0; kk < elements.length; kk++){
            if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
                html2canvas(elements[kk].parentNode, { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
                    document.body.appendChild(canvas);
                          canvas.setAttribute("id", "canvas");
                     var link = document.createElement('img');
                  link.src = document.getElementById('canvas').toDataURL()
            // Create a YOLO method
            link.onload = () => {
            const yolo = ml5.YOLO(options= modelLoaded);
            // When the model is loaded
            function modelLoaded() {
            //console.log('Model Loaded!');
            // Detect objects in the video element
            yolo.detect(link, (err, results) => {
            //console.log(results[0]['label']); // Will output bounding boxes of detected objects
            _object` + total_variables + ` =results[0]['label'];
            
            });
            }
            }
            });
    }
}
    },/*delay*/` + currentDelay + `*delayKey);
    `;
                    text = `
    Start Code
    Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
    Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
    Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
    Endpoint: Object Detection<br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
    End Code
    var delayKey = 1000;
    var _object` + total_variables + ` = 'none';

    var objectkeys = 'none';
    setTimeout(function(){
        var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
        const result = document.getElementById('result'); // The result tag in the HTML
        const probability = document.getElementById('probability'); // The probability tag in the HTML
        
        for(var kk = 0; kk < elements.length; kk++){
            if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
        
                html2canvas(elements[kk].parentNode, { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
                    document.body.appendChild(canvas);
                          canvas.setAttribute("id", "canvas");
                     var link = document.createElement('img');
                  link.src = document.getElementById('canvas').toDataURL()
            // Create a YOLO method
            link.onload = () => {
            const yolo = ml5.YOLO(options= modelLoaded);
            // When the model is loaded
            function modelLoaded() {
            //console.log('Model Loaded!');
            // Detect objects in the video element
            yolo.detect(link, (err, results) => {
            //console.log(results[0]['label']); // Will output bounding boxes of detected objects
            _object` + total_variables + ` =results[0]['label'];
            
            });
            }
            }
            });
    }
}
    },/*delay*/` + currentDelay + `*delayKey);
    `;
                    currentDelay = 20;

                } else if (event.data.style == "gcal") {
                    //    alert('Please note that google is still reviewing our direct API request, so you may be blocked until they complete review. Early users are grandfathered in.')

                    new_code = `

var delayKey = 1000;
setTimeout(function(){

    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            google_calendar_append(elements[kk].innerText, window.location.href);       
        }
    }
    
},/*delay*/` + currentDelay + `*delayKey);

`;
                    text = `
Start Code
Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
Endpoint : Google Calendar<br>
Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
<hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
End Code
var delayKey = 1000;
setTimeout(function(){

    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            google_calendar_append(elements[kk].innerText, window.location.href);       
        }
    }
    
},/*delay*/` + currentDelay + `*delayKey);

`;
                } else if (event.data.style == "gdocs") {
                    //alert('Please note that google is still reviewing our direct API request, so you may be blocked until they complete review. Early users are grandfathered in.')

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='DOCVALUESKEY'>
    `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }
                    options_string += `<option selected="selected" value="element.innerText">Inner Text</option>`;

                    options_string += `<option value="` + no_code_variables_string + `">` + no_code_variables_string + `</option>`;
                    options_string += `</select>`;
                    new_code = `

var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
for(var kk = 0; kk < elements.length; kk++){
    if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
        google_docs_append('GOOGLE_DOCS_ID',elements[kk].innerText);       
    }
}

`;
                    text = `
Start Code
Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
ID:<br>
<input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='DOCIDKEY' value='GOOGLE_DOCS_ID'></input><br>
Sheet Values:<br>
` + options_string + `<br>
Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
<hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
End Code
var delayKey = 1000;
setTimeout(function(){

var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
for(var kk = 0; kk < elements.length; kk++){
if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
    google_docs_append('GOOGLE_DOCS_ID',elements[kk].innerText);       
}
}},/*delay*/` + currentDelay + `*delayKey);

`;
                } else if (event.data.style == "print") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='PRINTKEY'>
    `;
                    options_string += `<option value="href">Link Destination .href</option>`;
                    options_string += `<option value="src">Image source .src</option>`;
                    options_string += `<option value="innerText">Inner Text .innerText</option>`;
                    options_string += `<option selected="selected" value="Custom Attribute">Custom Attribute</option>`;

                    options_string += `</select>`;

                    new_code = `

    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            //console.log(elements[kk].innerText);
        }
    }
    
    `;
                    text = `
    Start Code
    Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
    Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
    Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
    Endpoint : Web Console<br>
    Attribute: <br>
    ` + options_string + `<br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
    End Code
    var delayKey = 1000;
    setTimeout(function(){
    
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            //console.log(elements[kk].innerText);
        }
    }
    },/*delay*/` + currentDelay + `*delayKey);
    `;
                } else if (event.data.style == "script") {

                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='CODEKEY'>
      `;
                    for (var jj = 0; jj < scripts.length; jj++) {
                        if (scripts[jj]["name"] && scripts[jj]["name"].length > 0 && scripts[jj]["deleted"] != "true") {
                            options_string += `<option value="` + scripts[jj]["name"] + `">` + scripts[jj]["name"] + `</option>`;
                        }
                    }
                    options_string += `</select>`;

                    var options_string2 = `<select class='selectCheat selectBox  select' name="vars" id='RUNONVARSKEY'>
        `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string2 += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                        }
                    }
                    options_string2 += `<option selected='selected' value="none">None</option>`;

                    options_string2 += `</select>`;


                    var options_string3 = `<select class='selectCheat selectBox  select' name="vars" id='TABIDKEY'>
        `;
                    if (typeof window.tabs != "undefined") {
                        for (var jj = 0; jj < window.tabs.length; jj++) {

                            options_string3 += `<option value="` + window.tabs[jj]["id"] + `">` + window.tabs[jj]["id"] + ` ( ` + window.tabs[jj]["url"] + `)</option>`;

                        }
                    }
                    options_string3 += `<option selected='selected' value="-1">None</option>`;

                    options_string3 += `</select>`;


                    var options_string4 = `<select class='selectCheat selectBox  select' name="vars" id='TIMEOUTKEY'>
          `;

                    options_string4 += `<option value="30">30 seconds</option>`;
                    options_string4 += `<option value="60">60 seconds</option>`;
                    options_string4 += `<option value="120">120 seconds</option>`;
                    options_string4 += `<option value="300">300 seconds</option>`;
                    options_string4 += `<option value="1500">1500 seconds</option>`;
                    options_string4 += `<option value="300000">300000 seconds</option>`;


                    options_string4 += `</select>`;

                    new_code = `

    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    function slow(kk){
        if(typeof elements[kk] != 'undefined' && elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
               runOnTab(elements[kk].innerText,'SCRIPT_NAME');
               if(kk < elements.length){
                   setTimeout(function(){slow(kk+1)},10000);
               }
           }else{
               if(kk < elements.length){
               setTimeout(function(){slow(kk+1)},1);
               }
           }
       }
       slow(0);
    
    `;
                    text = `
    Start Code
    Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
    Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
    Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
    Code:<br>
    ` + options_string + `
    <br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    Timeout: <br>
    ` + options_string4 + `
    <br>
    Tab ID: <br>
    ` + options_string3 + `
    <br>
    New Window: <br><select class='selectCheat selectBox  select'  id='NEWWINDOWKEY' ><option selected='selected' value="false">False</option><option value="true">True</option></select><br>
   
    Pagination URL:<br> <input class='cheatlayer cheat-input' id='PAGINATIONKEY' type="text" value=""></input><br>

    Custom Data: <br>` + options_string2 + `<br>

    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
    End Code
    var delayKey = 1000;
    setTimeout(function(){
    
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    function slow(kk){
     if(typeof elements[kk] != 'undefined' && elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
        runOnTab(elements[kk].href,/*script*/'SCRIPT_NAME',/*timeout*/30,/*options*/{/*id*/id:-1, /*newWindow*/newWindow:false,/*custom1*/data1:"none",/*custom2*/data2:"none",/*custom3*/data3:"none"});
        if(kk < elements.length){
                setTimeout(function(){slow(kk+1)},10000);
            }
        }else{
            if(kk < elements.length){
            setTimeout(function(){slow(kk+1)},1);
            }
        }
    }
    slow(0);
    },/*delay*/` + currentDelay + `*delayKey);
    `;

                } else if (event.data.style == "click") {
                    new_code = `
    var delayKey = 1000;
    setTimeout(function(){
    
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    function slow(kk){
     if(typeof elements[kk] != 'undefined' && elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            elements[kk].click();
            if(kk < elements.length){
                setTimeout(function(){slow(kk+1)},10000);
            }
        }else{
            if(kk < elements.length){
                setTimeout(function(){slow(kk+1)},1);
            }
        }
    }
    slow(0);
    },/*delay*/` + currentDelay + `*delayKey);
    
    `;
                    text = `
    Start Code
    Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
    Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
    Endpoint : Click Element<br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
    End Code
    var delayKey = 1000;
    setTimeout(function(){
    
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    function slow(kk){
     if(typeof elements[kk] != 'undefined' && elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            elements[kk].click();
            if(kk < elements.length){
                setTimeout(function(){slow(kk+1)},10000);
            }
        }else{
            if(kk < elements.length){
                setTimeout(function(){slow(kk+1)},1);
            }
        }
    }
    slow(0);
    },/*delay*/` + currentDelay + `*delayKey);
    `;
                } else if (event.data.style == "variable") {
                    total_variables++;
                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='VARIABLEATTRKEY'>
    `;
                    options_string += `<option value="innerText">Inner Text .innerText</option>`;
                    options_string += `<option value="href">Link Destination .href</option>`;
                    options_string += `<option value="URL">Page URL</option>`;

                    options_string += `<option value="src">Image source .src</option>`;
                    options_string += `<option value="Custom Attribute">Custom Attribute</option>`;

                    options_string += `</select>`;

                    var elements = document.getElementsByTagName(event.data.setNoCode);
                    var var_counter = 0;
                    for (var kk = 0; kk < elements.length; kk++) {
                        if (elements[kk].getAttribute(selected_attribute) && elements[kk].getAttribute(selected_attribute).indexOf(selected_attribute_val) >= 0) {

                            no_code_variables.push(`_variable` + total_variables + `[` + var_counter + `]`);
                            no_code_variable_names.push("Saved Variable " + total_variables + " array index " + kk)

                            var_counter++;
                        }
                    }
                    no_code_variable_names.push("Saved Variable " + total_variables)

                    new_code = `
    var _variable` + total_variables + ` = 'none';

    var delayKey = 1000;
    setTimeout(function(){
    
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            _variable` + total_variables + `.push(elements[kk].innerText);
        }
    }
    },/*delay*/` + currentDelay + `*delayKey);
    
    `;
                    text = `
    Start Code
    Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
    Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
    Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
    Variable Name: <br>_variable` + total_variables + `<br>
    Endpoint : Variable<br>
    ` + options_string + `<br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
    End Code
    var _variable` + total_variables + ` = [];
    var delayKey = 1000;
    setTimeout(function(){
    
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            _variable` + total_variables + `.push(/*attribute*/elements[kk].innerText);
            if(typeof cheat_data == 'undefined'){
                cheat_data = {}
            }
  
            if("_variable` + total_variables + `"  + "_" + window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"") in cheat_data){
                cheat_data["_variable` + total_variables + `"  + "_" + window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"")].push(elements[kk].innerText);

            }else{
            cheat_data["_variable` + total_variables + `"   + "_" + window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"")] = /*attribute*/[elements[kk].innerText];
            }
            
            
            //console.log(cheat_data)
            //console.log(tab_id)
            //console.log(cheat_data["_variable` + total_variables + `" + "_" + currentRun  + "_" + window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"")])
            function storeUserPrefs() {
                var key = "cheatlayer"
                 //console.log(cheat_data)

                 var out_obj = JSON.parse(\`` + JSON.stringify(storage_json) + `\`);
                 out_obj[window.location.href.split('/').join('').split(':').join('').split('.').join('').split('#').join('').replace(/[^0-9A-Z]+/gi,"")] = cheat_data;
                 var testPrefs = JSON.stringify(out_obj);                
                 var jsonfile = {};
                jsonfile[key] = testPrefs;
                chrome.storage.sync.set(jsonfile, function () {
                    //console.log('Saved', key, testPrefs);
                });
            
            }
            storeUserPrefs();


        }
    }
    },/*delay*/` + currentDelay + `*delayKey);
    
    `;
                } else if (event.data.style == "cloud") {
                    new_code = `
    var delayKey = 1000;
    setTimeout(function(){
    
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    var ` + selected_attribute_val.split(' ')[0].toLowerCase().replace(/\W/g, '') + ` = 'none';
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            window.` + selected_attribute_val.split(' ')[0].toLowerCase().replace(/\W/g, '') + ` = elements[kk].innerText;
        }
    }
    },/*delay*/` + currentDelay + `*delayKey);
    
    `;
                    text = `
    Start Code
    Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
    Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
    Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
    Endpoint : Cloud<br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
    End Code
    var delayKey = 1000;
    setTimeout(function(){
    
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            sendAjax('https://cheatlayer.com/user/saveTemp',{link: elements[kk].href, index: kk, text: elements[kk].innerText},'post');
        }
    }
    },/*delay*/` + currentDelay + `*delayKey);
    
    `;
                } else if (event.data.style == "input") {
                    var input_val = 'TEST_VALUE';
                    if (typeof window.data != 'undefined' && window.data && window.data.length > 0) {
                        input_val = window.data[inputCounter++];
                    }
                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='INPUTKEY'>
    `;


                    if (selected_element.nodeName == 'SELECT') {
                        for (var kk = 0; kk < selected_element.options.length; kk++) {

                            options_string += `<option value="` + selected_element.options[kk].value + `">` + selected_element.options[kk].text + `</option>`;

                        }
                    }
                    if (typeof window.API != 'undefined') {
                        //console.log('window.API')

                        //console.log(window.API)
                        //console.log(JSON.flatten(window.API))
                        var flat = JSON.flatten(window.API);

                        for (var key in flat) {
                            if (flat.hasOwnProperty(key)) {
                                //console.log(key + " -> " + flat[key]);
                                options_string += `<option value="'` + flat[key] + `'">` + key + ` : ` + flat[key] + `</option>`;

                            }
                        }

                    }
                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }
                    options_string += `<option selected="selected" value="">None</option>`;

                    options_string += `<option value="Custom">Custom</option>`;

                    options_string += `</select>`;
                    new_code = `

    var delayKey = 1000;
    setTimeout(function(){
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            elements[kk].value = '` + input_val + `';
        }
    }
    }, /*delay*/` + currentDelay + `*delayKey);
    
    
    `;
                    text = `
    Start Code
    Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
    Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
    Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
    Endpoint : Input<br>
    ` + options_string + `
    <br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
    End Code

    var delayKey = 1000;
    setTimeout(function(){
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            elements[kk].value = 'TEST_VALUE';
        }
    }
    }, /*delay*/` + currentDelay + `*delayKey);
    
    `;
                } else if (event.data.style == "download") {
                    new_code = `
    var delayKey = 1000;
    setTimeout(function(){
    
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
           if(elements[kk].src){
            downloadFile(elements[kk].src);
           }else{
            downloadFile(elements[kk].href);
           }
        }
    }
    }, /*delay*/` + currentDelay + `*delayKey);
    
    
    `;
                    text = `
    Start Code
    Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
    Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
    Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
    Endpoint : Download File<br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
    End Code
    var delayKey = 1000;
    setTimeout(function(){
    
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
           if(elements[kk].src){
            downloadFile(elements[kk].src);
           }else{
            downloadFile(elements[kk].href);
           }
        }
    }
    }, /*delay*/` + currentDelay + `*delayKey);
    
    `;
                } else if (event.data.style == "innerText") {
                    var options_string = `<select class='selectCheat selectBox  select' name="vars" id='INNERTEXTKEY'>
    `;
                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }
                    options_string += `<option value="` + no_code_variables_string + `">` + no_code_variables_string + `</option>`;
                    options_string += `</select>`;



                    new_code = `
    var delayKey = 1000;
    setTimeout(function(){
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            elements[kk].innerText = 'TEST_VALUE';
        }
    }
    }, /*delay*/` + currentDelay + `*delayKey);
    `;
                    text = `
    Start Code
    Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
    Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
    Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
    Endpoint : Inner Text<br> <input class='cheatlayer cheat-input' id='INNERTEXTKEY' type="text" value="TEST_VALUE"></input><br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
    End Code
    var delayKey = 1000;
    setTimeout(function(){
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            elements[kk].innerText = 'TEST_VALUE';
        }
    }
    }, /*delay*/` + currentDelay + `*delayKey);
    
    `;
                } else if (event.data.style == "keypress") {
                    //console.log("try storage");

                    //console.log(storage_vars);
                    var options_string = `<select  class='selectCheat selectBox  select' name="vars" id='KEYPRESSKEY'>
    `;

                    if (typeof window.API != 'undefined') {
                        //console.log('window.API')

                        //console.log(window.API)
                        //console.log(JSON.flatten(window.API))
                        var flat = JSON.flatten(window.API);

                        for (var key in flat) {
                            if (flat.hasOwnProperty(key)) {
                                //console.log(key + " -> " + flat[key]);
                                options_string += `<option value="'` + flat[key] + `'">` + key + ` : ` + flat[key] + `</option>`;

                            }
                        }

                    }


                    if (typeof window.data != 'undefined' && window.data.length > 0) {
                        var newData = CSVToArray(window.data);

                        //console.log(window.data);
                        if (true) {
                            for (var jj = 0; jj < newData.length; jj++) {
                                for (var kk = 0; kk < newData[jj].length; kk++) {
                                    if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                        options_string += `<option value="CSVToArray(window.data)[` + jj + `][` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                    }
                                }
                            }
                            for (var jj = 0; jj < input_vars.length; jj++) {
                                if (input_vars[jj].length > 0) {
                                    //      //console.log(no_code_container[jj]["variables"])

                                    options_string += `<option value="` + input_vars[jj] + `">` + input_vars[jj] + `</option>`;
                                }
                            }
                            if (true) {
                                var script_num = 0;
                                //   //console.log('extra')
                                for (var jj = 0; jj < newData.length; jj++) {
                                    for (var kk = 0; kk < newData[jj].length; kk++) {
                                        if (newData[jj][kk] && newData[jj][kk].length > 0) {
                                            options_string += `<option value="newData[currentRun%newData.length][` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % newData.length + ` Column ` + kk + `( ` + newData[jj][kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        } else {
                            for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                    if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                        options_string += `<option value="window.data.split('\\\\n')[` + jj + `].split(',')[` + kk + `]">Google Sheets Data Row ` + jj + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                    }
                                }
                            }
                            if (true) {
                                //          //console.log('extra')

                                for (var jj = 0; jj < window.data.split('\\n').length; jj++) {
                                    for (var kk = 0; kk < window.data.split('\\n')[jj].split(',').length; kk++) {
                                        if (window.data.split('\\n')[jj].split(',')[kk] && window.data.split('\\n')[jj].split(',')[kk].length > 0) {
                                            options_string += `<option value="window.data.split('\\\\n')[currentRun%window.data.split('\\\\n').length].split(',')[` + kk + `]">Google Sheets Data Row Based On Total Runs ` + currentRun % window.data.split('\\n').length + ` Column ` + kk + `( ` + window.data.split('\\n')[jj].split(',')[kk] + ` )</option>`;
                                        }
                                    }
                                }
                            }
                        }
                    }


                    for (var jj = 0; jj < no_code_container.length; jj++) {
                        if (no_code_container[jj]["variables"].length > 0) {
                            //  //console.log(no_code_container[jj]["variables"])
                            options_string += `<option value="` + no_code_container[jj]["variables"] + `">` + no_code_container[jj]["variables"] + `</option>`;
                            no_code_variables_string += ',' + no_code_container[jj]["variables"];
                        }
                    }

                    for (var jj = 0; jj < storage_vars.length; jj++) {
                        if (storage_vars[jj].length > 0) {
                            //      //console.log(no_code_container[jj]["variables"])

                            options_string += `<option value="` + storage_vars[jj] + `">` + storage_vars[jj] + `</option>`;
                            no_code_variables_string += ',' + storage_vars[jj];
                        }
                    }
                    options_string += `<option selected="selected" value="">None</option>`;

                    options_string += `<option value="Custom">Custom</option>`;
                    options_string += `<option value="Webhook">Webhook</option>`;

                    options_string += `</select>`;


                    new_code = `
    var delayKey = 1000;
    setTimeout(function(){
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            elements[kk].click();

            elements[kk].dispatchEvent(new Event('focus'));
            elements[kk].focus();
            simulateKey('a');
        }
    }
    }, /*delay*/` + currentDelay + `*delayKey);
    `;
                    text = `
    Start Code
    Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
    Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
    Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    Endpoint : Keypress<br>
    ` + options_string + `<br>
    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
    End Code
    var delayKey = 1000;
    setTimeout(function(){
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            elements[kk].click();
            var newData = CSVToArray(window.data);
            elements[kk].dispatchEvent(new Event('focus'));
            elements[kk].focus();
            simulateKey('a');
        }
    }
    }, /*delay*/` + currentDelay + `*delayKey);
    
    `;
                } else if (event.data.style == "hover") {
                    new_code = `
    var delayKey = 1000;
    setTimeout(function(){
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            elements[kk].dispatchEvent(new MouseEvent('mouseover', { 'view': window, 'bubbles': true, 'cancelable': true }));
        }
    }
    }, /*delay*/` + currentDelay + `*delayKey);
    `;
                    text = `
    Start Code
    Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
    Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
    Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
    Endpoint : Hover<br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
    End Code
    var delayKey = 1000;
    setTimeout(function(){
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            elements[kk].dispatchEvent(new MouseEvent('mouseover', { 'view': window, 'bubbles': true, 'cancelable': true }));
        }
    }
    }, /*delay*/` + currentDelay + `*delayKey);
    
    `;
                } else if (event.data.style == "screenshot") {
                    new_code = `
    var delayKey = 1000;
    setTimeout(function(){
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
   
            html2canvas(elements[kk], { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
                document.body.appendChild(canvas);
                      canvas.setAttribute("id", "canvas");
                 var link = document.createElement('a');
              link.download = 'webpage.png';
              link.href = document.getElementById('canvas').toDataURL()
              link.click();
            
            });
                    }
    }
    }, /*delay*/` + currentDelay + `*delayKey);
    `;
                    text = `
    Start Code
    Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
    Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
    Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
    Endpoint : Screenshot<br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
    End Code
    var delayKey = 1000;
    setTimeout(function(){
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){

            html2canvas(elements[kk], { logging: true, letterRendering: 1, useCORS: true }).then(canvas => {
                document.body.appendChild(canvas);
                      canvas.setAttribute("id", "canvas");
                 var link = document.createElement('a');
              link.download = 'webpage.png';
              link.href = document.getElementById('canvas').toDataURL()
              link.click();
            
            });
                }
    }
    }, /*delay*/` + currentDelay + `*delayKey);
    
    `;
                } else if (event.data.style == "forward") {
                    new_code = `
    var delayKey = 1000;
    setTimeout(function(){
        window.history.forward();
    }, /*delay*/` + currentDelay + `*delayKey);
    `;
                    text = `
    Start Code
    Endpoint : Go Forward<br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
    End Code
    var delayKey = 1000;
    setTimeout(function(){
        window.history.forward();
    }, /*delay*/` + currentDelay + `*delayKey);
    
    `;
                } else if (event.data.style == "back") {
                    new_code = `
    var delayKey = 1000;
    setTimeout(function(){
        window.history.back()
        }, /*delay*/` + currentDelay + `*delayKey);
    `;
                    text = `
    Start Code
    Endpoint : Go Back<br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
    End Code
    var delayKey = 1000;
    setTimeout(function(){
        window.history.back()
      }, /*delay*/` + currentDelay + `*delayKey);
    
    `;
                } else if (event.data.style == "scroll") {
                    new_code = `
    var delayKey = 1000;
    setTimeout(function(){
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            elements[kk].scrollTop = elements[kk].scrollHeight;
        }
    }
    }, /*delay*/` + currentDelay + `*delayKey);
    `;
                    text = `
    Start Code
    Element:<br> <input class='cheatlayer cheat-input' id='ELEMENTKEY' type="text" value="` + event.data.setNoCode + `"></input><br>
    Selector:<br> <input class='cheatlayer cheat-input' id='SELECTORKEY' type="text" value="` + selected_attribute + `"></input><br>
    Value:<br> <input class='cheatlayer cheat-input' id='VALUEKEY' type="text" value="` + selected_attribute_val.split("'").join("\'") + `"></input><br>
    Endpoint : Scroll<br>
    Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
    <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
    End Code
    var delayKey = 1000;
    setTimeout(function(){
    var elements = document.getElementsByTagName('` + event.data.setNoCode + `');
    for(var kk = 0; kk < elements.length; kk++){
        if(elements[kk].getAttribute('` + selected_attribute + `') && elements[kk].getAttribute('` + selected_attribute + `').indexOf(\`` + selected_attribute_val + `\`) >= 0){
            elements[kk].scrollTop = elements[kk].scrollHeight;
        }
    }
    }, /*delay*/` + currentDelay + `*delayKey);
    
    `;
                }
            }
            var icon_code = '';
            old_code = window.editor.getValue();

            if (text.includes("End Code")) {
                code = text.split("End Code")[1];
                no_code = text.split("End Code")[0];
            } else {
                code = text;
            }





            var img_src = "https://cheatlayer.com/icon2.png";
            var Title = "";
            //Tesseract

            if (no_code.includes("SHEETURLKEY")) {
                img_src = "https://cheatlayer.com/images/textarea/text1.png";
                Title += "Google Sheets</h2>";
            }
            if (no_code.includes("SHEETIDKEY")) {
                img_src = "https://cheatlayer.com/images/textarea/text1.png";
                Title += "Google Sheets</h2>";
            }

            if (no_code.includes("CSV")) {
                img_src = "https://cheatlayer.com/images/textarea/text1.png";
                Title += "Get Data GSheets</h2>";
            }
            if (no_code.includes("WEBHOOK")) {
                img_src = "https://cheatlayer.com/webhook.png";
                Title += "Send To Webhook</h2>";
            }
            if (no_code.includes("Object Detection")) {
                img_src = "https://cheatlayer.com/images/textarea/text5.png";
                Title += "Object Detection ML</h2>";
            }


            if (no_code.includes("PDF")) {
                img_src = chrome.runtime.getURL("pdf.png");
                Title += "PDF To Text</h2>";
            }
            if (no_code.includes("OCR Image")) {
                img_src = "https://cheatlayer.com/images/textarea/text5.png";
                Title += "OCR Image To Text</h2>";
            }

            if (no_code.includes("Sentiment")) {
                img_src = "https://cheatlayer.com/images/textarea/text6.png";
                Title += "Sentiment Analysis ML</h2>";
            }
            if (no_code.includes("Calendar")) {
                img_src = "https://cheatlayer.com/images/textarea/text3.png";
                Title += "Create Event(Soon)</h2>";
            }

            if (no_code.includes("Console")) {
                img_src = "https://cheatlayer.com/images/textarea/text4.png";
                Title += "Print To Console</h2>";
            }

            if (no_code.includes("Push") || no_code.includes("Click")) {// Local Variable
                img_src = "https://cheatlayer.com/images/textarea/text8.png";
                Title += "Click Link</h2>";
            }
            if (no_code.includes("Variable")) {// Temp
                img_src = "https://cheatlayer.com/images/textarea/text10.png";
                Title += "Save To Variable</h2>";
            }

            if (no_code.includes("Temp")) {// Temp
                img_src = "https://cheatlayer.com/images/textarea/text9.png";
                Title += "Save To Cloud </h2>";
            }
            if (no_code.includes("Cloud")) {// Temp
                img_src = "https://cheatlayer.com/images/textarea/text9.png";
                Title += "Save To Cloud</h2>";
            }
            if (no_code.includes("Endpoint : Input")) {// Temp
                img_src = "https://cheatlayer.com/images/textarea/text11.png";
                Title += "Set Input Value</h2>";
            }

            if (no_code.includes("DOCIDKEY")) {
                img_src = "https://cheatlayer.com/images/textarea/text2.png";
                Title += "Google Docs</h2>";
            }
            if (no_code.includes("Download File")) {// Temp
                img_src = "https://cheatlayer.com/images/textarea/text12.png";
                Title += "Download File</h2>";
            }
            if (no_code.includes("Set Inner Text")) {// Temp
                img_src = "https://cheatlayer.com/images/textarea/text13.png";
                Title += "Set Inner Text</h2>";
            }
            if (no_code.includes("Scroll")) {// Temp
                img_src = "https://cheatlayer.com/scroll.png";
                Title += "Scroll</h2>";
            }

            if (no_code.includes("Keypress")) {// Temp
                img_src = "https://cheatlayer.com/images/textarea/text14.png";
                Title += "Keypress</h2>";
            }
            if (no_code.includes("Hover")) {// Temp
                img_src = "https://cheatlayer.com/images/textarea/text15.png";
                Title += "Hover</h2>";
            }

            if (no_code.includes("Endpoint : Screenshot")) {// Temp
                img_src = "https://cheatlayer.com/images/textarea/text16.png";
                Title += "Screenshot</h2>";
            }


            if (no_code.includes("Back")) {// Temp
                img_src = "https://cheatlayer.com/goback.png";
                Title += "Go Back</h2>";
            }


            if (no_code.includes("Forward")) {// Temp
                img_src = "https://cheatlayer.com/goforward.png";
                Title += "Go Forward</h2>";
            }


            if (no_code.includes("Riku")) {// Temp
                img_src = "https://cheatlayer.com/Riku-logo.png";
                Title += "<a href='https://appsumo.8odi.net/P0ZXVq'>Riku.ai Prompt</a></h2>";
            }

            if (no_code.includes("CODEKEY")) {
                img_src = "https://cheatlayer.com/images/textarea/text7.png";
                Title += "Run Code On Tab</h2>";
            }




            if (no_code.includes("GPT")) {
                img_src = chrome.runtime.getURL("openai.png");
                Title += "GPT-3 Prompt</h2>";
            }



            if (no_code.includes("Filter")) {
                img_src = chrome.runtime.getURL("filter.png");
                Title += "Filter</h2>";
            }


            if (no_code.includes("Gmail")) {
                img_src = chrome.runtime.getURL("gmail.png");
                Title += "Gmail</h2>";
            }


            if (no_code.includes("RSS")) {
                img_src = chrome.runtime.getURL("rss.png");
                Title += "RSS</h2>";
            }

            if (no_code.includes("Excel")) {
                img_src = chrome.runtime.getURL("excel.png");
                Title += "Excel</h2>";
            }


            if (no_code.includes("Project")) {
                img_src = chrome.runtime.getURL("atlas.gif");
                Title += "Project Atlas</h2>";
            }

            no_code = no_code.split("textarea").join("textarea style='width:100%'");
            no_code = no_code.split(".getAttribute('innerText')").join(".innerText");


            icon_code += '<h2 class="cheatlayer"style="color:black;"><img style="margin:20px;pointer-events: none;background-color:#FFFFFF;width:50px;height:50px;border-radius:10px;border:1px solid black;padding:5px;margin:5px;" src=\"';
            icon_code += img_src;
            icon_code += '\"></img> ' + Title;

            no_code = icon_code + "" + no_code + "";
            (no_code.split('SELECTORKEY'));
            no_code = no_code.split('SELECTORKEY').join('SELECTORKEY' + code_ids);
            no_code = no_code.split('XPATHKEY').join('XPATHKEY' + code_ids);
            no_code = no_code.split('CSSKEY').join('CSSKEY' + code_ids);
            no_code = no_code.split('ELEMENTSELECTKEY').join('ELEMENTSELECTKEY' + code_ids);

            no_code = no_code.split('DELAYKEY').join('DELAYKEY' + code_ids);
            no_code = no_code.split('KEYPRESSKEY').join('KEYPRESSKEY' + code_ids);
            no_code = no_code.split('PRINTKEY').join('PRINTKEY' + code_ids);
            no_code = no_code.split('VARIABLEATTRKEY').join('VARIABLEATTRKEY' + code_ids);

            no_code = no_code.split('REMOVEKEY').join('REMOVEKEY' + code_ids);
            no_code = no_code.split('VARIABLEKEY').join('VARIABLEKEY' + code_ids);

            no_code = no_code.split('VALUEKEY').join('VALUEKEY' + code_ids);
            no_code = no_code.split('INPUTKEY').join('INPUTKEY' + code_ids);
            no_code = no_code.split('INNERTEXTKEY').join('INNERTEXTKEY' + code_ids);

            no_code = no_code.split('TIMERKEY').join('TIMERKEY' + code_ids);
            no_code = no_code.split('LOCATIONKEY').join('LOCATIONKEY' + code_ids);
            no_code = no_code.split('ELEMENTKEY').join('ELEMENTKEY' + code_ids);
            no_code = no_code.split('CODEKEY').join('CODEKEY' + code_ids);
            no_code = no_code.split('CODEGETDATA').join('CODEGETDATA' + code_ids);

            no_code = no_code.split('Start Code').join('');
            //  no_code = no_code.split('//').join('');
            no_code = no_code.split('SHEETURLKEY').join('SHEETKEY' + code_ids);
            no_code = no_code.split('SHEETIDKEY').join('SHEETIDKEY' + code_ids);
            no_code = no_code.split('DOCIDKEY').join('DOCIDKEY' + code_ids);
            no_code = no_code.split('DOCVALUESKEY').join('DOCVALUESKEY' + code_ids);

            no_code = no_code.split('SHEETVALUESKEY').join('SHEETVALUESKEY' + code_ids);
            no_code = no_code.split('SHEETNAMEKEY').join('SHEETNAMEKEY' + code_ids);
            no_code = no_code.split('WEBHOOKURLKEY').join('WEBHOOKURLKEY' + code_ids);


            no_code = no_code.split('FILTERINPKEY').join('FILTERINPKEY' + code_ids);
            no_code = no_code.split('FILTEROPKEY').join('FILTEROPKEY' + code_ids);
            no_code = no_code.split('FILTERVALKEY').join('FILTERVALKEY' + code_ids);


            no_code = no_code.split('WEBHOOKDATAKEY').join('WEBHOOKDATAKEY' + code_ids);
            no_code = no_code.split('CSVURLKEY').join('CSVURLKEY' + code_ids);
            no_code = no_code.split('RIKUNAME').join('RIKUNAME' + code_ids);
            no_code = no_code.split('RIKUAPIKEY').join('RIKUAPIKEY' + code_ids);
            no_code = no_code.split('PROMPTKEY').join('PROMPTKEY' + code_ids);
            no_code = no_code.split('GPT3KEY').join('GPT3KEY' + code_ids);

            no_code = no_code.split('RIKUINPUT5KEY').join('RIKUINPUT5KEY' + code_ids);
            no_code = no_code.split('RIKUINPUT4KEY').join('RIKUINPUT4KEY' + code_ids);
            no_code = no_code.split('RIKUINPUT1KEY').join('RIKUINPUT1KEY' + code_ids);
            no_code = no_code.split('RIKUINPUT2KEY').join('RIKUINPUT2KEY' + code_ids);
            no_code = no_code.split('RIKUINPUT3KEY').join('RIKUINPUT3KEY' + code_ids);
            no_code = no_code.split('TIMEOUTKEY').join('TIMEOUTKEY' + code_ids);
            no_code = no_code.split('TABIDKEY').join('TABIDKEY' + code_ids);
            no_code = no_code.split('NEWWINDOWKEY').join('NEWWINDOWKEY' + code_ids);
            no_code = no_code.split('RUNONVARSKEY').join('RUNONVARSKEY' + code_ids);
            no_code = no_code.split('PAGINATIONKEY').join('PAGINATIONKEY' + code_ids);


            //

            //  no_code = no_code.split('//').join('');

            (no_code);
            //document.getElementById('script').zzstyle.width = "49.5%";

            //document.getElementById('console').style.width = "49.5%";
            if (event.data.style != "webhook" && event.data.style != "getdata" && event.data.style != "rss") {
                no_code_container.push({ selector: selector_type, options: options_array, code_ids: code_ids, variablenames: no_code_variable_names, variables: no_code_variables.join(','), style: event.data.style, id: code_ids, no_code: no_code });


                //document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
                //document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
                //document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;
                drawNoCodeContainer();

                //googleSignIn


                window.editor.setValue(old_code + "\n//Generated Script id=" + code_ids + "\n" + new_code + "\n//endcode\n");
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                $(document).on('click', '#googleSignIn', function () {
                    SendMessage("GoogleSignIn", "GoogleSignIn", "event.data");


                });
                if (typeof window.editor != 'undefined') {
                    var added_code = "//Generated Script id=" + code_ids;
                    added_code += code;
                    window.editor.setValue(old_code + added_code + "\n//endcode");
                    window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                    document.getElementById('cheatmenu').style.display = 'block';

                }
                window.editor.resize();
            }
            /*    for(var kk = 0; kk <=code_ids; kk++){
                    $("#TIMERKEY" + kk).on('focusin', function () {
                        
                        $(this).data('val', $(this).val());
                    });
            
                    $("#CODEKEY" + kk).on('focusin', function () {
                        
                        $(this).data('val', $(this).val());
                    });
            
                    $("#ELEMENTKEY" + kk).on('focusin', function () {
                        
                        $(this).data('val', $(this).val());
                    });
            
                    $("#SELECTORKEY" + kk).on('focusin', function () {
                        
                        $(this).data('val', $(this).val());
                    });
                    $("#KEYPRESSKEY" + kk).on('focusin', function () {
                        
                        $(this).data('val', $(this).val());
                    });
                    $("#DELAYKEY" + kk).on('focusin', function () {
                        
                        $(this).data('val', $(this).val());
                    });
    
                    $("#INPUTKEY" + kk).on('focusin', function () {
                        
                        $(this).data('val', $(this).val());
                    });
    
                    $("#INNERTEXTKEY" + kk).on('focusin', function () {
                        
                        $(this).data('val', $(this).val());
                    });
    
                    $("#VALUEKEY" + kk).on('focusin', function () {
                        
                        $(this).data('val', $(this).val());
                    });
                    $("#LOCATIONKEY" + kk).on('focusin', function () {
                        
                        $(this).data('val', $(this).val());
                    });
            
                    $("#SHEETKEY" + kk).on('focusin', function () {
                        
                        $(this).data('val', $(this).val());
                    });
                    $("#TIMERKEY" + kk).on('change', function () {
            
                        var prev =$(this).data('val') ;
                        var id = this.id.split("TIMERKEY").join("") ;
                        var newVal =  this.value ;
            
                        var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                        var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                        var after_code =  window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                        prev = editor_code.split('},')[1].split('*1000')[0];
            
            
                        editor_code = editor_code.split('},' + prev + '*1000);').join('},' + newVal + '*1000);');
            
            
                        window.editor.setValue( before_code + "Generated Script id=" + id + editor_code  + "\n//endcode" + after_code,1);
                        window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
            
            
            
                    });
                    $("#ELEMENTKEY" + kk).on('change', function () {
            
                        var id = this.id.split("ELEMENTKEY").join("") ;
            
                    var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                    var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                    var after_code =  window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
            
                   var prev = editor_code.split('.getElementsByTagName(')[1].split(")")[0];
                    var newVal =  this.value;
            
                    editor_code = editor_code.split(prev).join("\'" + newVal + "\'");
            
            
                    window.editor.setValue(  before_code + "Generated Script id=" + id + editor_code  + "\n//endcode" + after_code ,1);
                    window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
            
            
                    });
                    $("#CODEKEY" + kk).on('change', function () {
            
                var prev = $(this).data('val') ;
                var newVal =  this.value ;
            
                var id = this.id.split("CODEKEY").join("") ;
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code =  window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                prev = editor_code.split(".href,'")[1].split("');")[0];
            
            
                editor_code = editor_code.split(prev).join(newVal);
            
                window.editor.setValue(  before_code + "Generated Script id=" + id + editor_code  + "\n//endcode" + after_code ,1);
                window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
            
            
                    });
            
            
                    $("#LOCATIONKEY" + kk).on('change', function () {
            
            
                var prev = $(this).data('val') ;
                var newVal =  this.value;
            
                var id = this.id.split("LOCATIONKEY").join("");
                var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                var after_code =  window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
            
                prev = editor_code.split(',{')[1].split(":")[0];
            
                editor_code = editor_code.split(prev).join(newVal);
            
                window.editor.setValue(  before_code + "Generated Script id=" + id + editor_code  + "\n//endcode" + after_code ,1);
                window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
            
            
            
                    });
            
                    $("#DELAYKEY" + kk).on('change', function () {
            
                        var prev = $(this).data('val');
            
                        var id =this.id.split("DELAYKEY").join("");
                        var newVal = this.value;
            
                        var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                        var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                        var after_code =  window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
            
                        prev = editor_code.split('*delayKey);')[0].split("},")[1];
            
            
            
                        editor_code = editor_code.split(prev).join("\'" + newVal + "\'");
            
                        window.editor.setValue(  before_code + "Generated Script id=" + id + editor_code  + "\n//endcode" + after_code,1);
                        window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                    });
                    $("#KEYPRESSKEY" + kk).on('change', function () {
            
                        var prev = $(this).data('val');
            
                        var id =this.id.split("KEYPRESSKEY").join("");
                        var newVal = this.value;
            
                        var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                        var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                        var after_code =  window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
            
                        prev = editor_code.split("'keypress',{'key':'")[1].split("'}")[0];
            
            
            
                        editor_code = editor_code.split(prev).join("\'" + newVal + "\'");
            
                        window.editor.setValue(  before_code + "Generated Script id=" + id + editor_code  + "\n//endcode" + after_code,1);
                        window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                    });
                    $("#INPUTKEY" + kk).on('change', function () {
            
                        var prev = $(this).data('val');
            
                        var id =this.id.split("INPUTKEY").join("");
                        var newVal = this.value;
            
                        var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                        var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                        var after_code =  window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
            
                        prev = editor_code.split(".value = '")[1].split("'")[0];
            
            
            
                        editor_code = editor_code.split(prev).join("\'" + newVal + "\'");
            
                        window.editor.setValue(  before_code + "Generated Script id=" + id + editor_code  + "\n//endcode" + after_code,1);
                        window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                    });
                    $("#INNERTEXTKEY" + kk).on('change', function () {
            
                        var prev = $(this).data('val');
            
                        var id =this.id.split("INNERTEXTKEY").join("");
                        var newVal = this.value;
            
                        var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                        var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                        var after_code =  window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
            
                        prev = editor_code.split(".innerText = '")[1].split("'")[0];
            
            
            
                        editor_code = editor_code.split(prev).join("\'" + newVal + "\'");
            
                        window.editor.setValue(  before_code + "Generated Script id=" + id + editor_code  + "\n//endcode" + after_code,1);
                        window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                    });
                    $("#VALUEKEY" + kk).on('change', function () {
            
                        var prev = $(this).data('val');
            
                        var id =this.id.split("VALUEKEY").join("");
                        var newVal = this.value;
                     //   //console.log(id);
    
                        var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                        var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                        var after_code =  window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
            
                        prev = editor_code.split(".indexOf('")[1].split("')")[0];
                        //console.log(prev);
            
            
                        editor_code = editor_code.split(prev).join("\'" + newVal + "\'");
            
                        window.editor.setValue(  before_code + "Generated Script id=" + id + editor_code  + "\n//endcode" + after_code,1);
                        window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                    });
            
                    $("#SHEETKEY" + kk).on('change', function () {
            
            
                        var prev = $(this).val();
                        var newVal = this.value;
            
                        var id = this.id.split("SHEETKEY").join("");
                        var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                        var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                        var after_code =  window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                        prev = editor_code.split('sendAjax(')[1].split(',')[0];
            
                    editor_code = editor_code.split( prev).join("\'" + newVal + "\'");
            
            
                        window.editor.setValue( before_code + "Generated Script id=" + id + editor_code  + "\n//endcode" + after_code,1);
                        window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
            
                    });
            
                }*/



            code_ids += 1;

        }
    } else if (event.data.selected_attribute) {

        selected_attribute = event.data.selected_attribute;
        (selected_attribute_val);
        (selected_attribute);

        var test = selected_element.getAttribute(selected_attribute);
        (test);

        window.postMessage({ selected_attribute_val: selected_element.getAttribute(selected_attribute) }, '*');

    } else if (event.data.opened_selector) {
        opened_selector = false;

    } else if (event.data.script) {
        /*    last_run = event.data.index;v
            (last_run);
    
            var script_html = "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' ><center><div style='font-size:34px;color:black;padding:10px;'><a href='#' id='editorOpen' style='font-size:32px;background-color:#FFFFFF; border:1px solid #FFFFFF; border-radius:0px; color:#000000; margin-right:10px; padding:0px 10px 0px 0px;z-index:1000000000000000000;'>📝 <img class='cheatlayer' width='100%' src=\'https://cheatlayer.com/images/logo.png\' class='cheatlayer img-fluid'> </a>   </div></center></div><div id='no_code_parameters' class='cheatlayer cheatlayer rowt' style='display:none;margin:5px;background-color:white;color:black; width:100%;' ></div><div id='newonboard' class='cheatlayer cheatlayer rowt' style='margin:5px;background-color:white;color:black; width:100%;' ></div>";
    
            for (var kk = 0; kk < scripts.length; kk++) {
                if (scripts[kk].start.includes("*")) {
                    scripts[kk].start = "cheatlayer.com";
                }
                var final_start = scripts[kk].start
                if(scripts[kk].start.includes('/')){
                final_start = scripts[kk].start.split("/")[2];
                }
                script_html += "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' ><div><div class='cheatlayer cheatlayer dropdown' > <button class='cheatlayer cheatlayer dropbtn'><img  style='width:32px; height:32px; margin-right:10px;' onerror=\"this.src='https://cheatlayer.com/favicon.ico';\"   class='cheatlayer cheatlayer runscript'  src='https://" + final_start + "/favicon.ico'></img></button> <div class='cheatlayer cheatlayer dropdown-content' style='z-index:10000000000000;'> <a style='margin-left:0px'  class='cheatlayer cheatlayer runscript runcheat' type='button' aria-label='` + kk + `' id='run` + kk + `' data-dismiss='alert' aria-label='Play'>Run</a> <a   style='margin-left:10px;margin-right:10px;' class='cheatlayer cheatlayer runscript'   aria-label='` + kk + `' type='button' id='edit" + kk + "' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>Edit</a> <a   style='margin-left:10px;margin-right:10px;' class='cheatlayer cheatlayer runscript removecheat'   aria-label='` + kk + `' type='button' id='remove` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>Remove</a> <a   style='margin-left:10px;margin-right:10px;' class='cheatlayer cheatlayer runscript whitecheat'   aria-label='` + kk + `' type='button' id='whitelabel` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>White Label</a>  <a   style='margin-left:10px;margin-right:10px;' class='cheatlayer cheatlayer runscript schedulecheat'   aria-label='` + kk + `' type='button' id='schedule` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>Schedule</a> </div> </div> " + scripts[kk].name + "</div></div>";
    
            }
    
            $("#scriptlist").html(script_html);
            var script_listen = "setTimeout(function(){";
         
    
            //                  script_listen += "document.getElementById('remove').onclick =  function(){('editscript');var num = scriptID; scripts.splice(num,1);  window.postMessage({scripts: scripts } , '*'); };";
                   script_listen += " var opened_editor = false; var layer = 0;    document.getElementById('editorOpen').onclick = function(){ layer++; if(layer%2 == 0){document.getElementById('scriptlist').style.height='10%';}else{document.getElementById('scriptlist').style.height='100%';}};document.getElementById('generate').onclick= function(){  window.postMessage({generate: 'input'} , '*');} ;";
    
            script_listen += "},1000);"
    
            var script = document.createElement("script");
            script.innerHTML = script_listen;
            document.body.appendChild(script);
    
    
            if(onboard == 0){
                //startOnboard(0);
            }
    
            var script_html = "";
            var counter = 0;
            (community_scripts);
            var script_listen = " setTimeout(function(){";
    
            for (var kk = 0; kk < community_scripts.length; kk++) {
                if (community_scripts[kk].start) {
                    if (community_scripts[kk].start.includes("*")) {
                        community_scripts[kk].start = "cheatlayer.com";
                    }
                    //   community_scripts.push({name:  e[kk].name, start: e[kk].start, script: e[kk].script});
                    script_html += "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' ><button id='closeNoCode' style='position:absolute;top:35.5px; left:78%;z-index:100000000000000000000000'>X</button><div><img  style='width:32px; height:32px; margin-right:10px;' onerror=\"this.src='https://cheatlayer.com/favicon.ico';\"   class='cheatlayer cheatlayer runscript'  src='https://" + community_scripts[kk].start + "/favicon.ico'></img><div class='cheatlayer cheatlayer dropdown' > <button class='cheatlayer cheatlayer dropbtn'>File</button> <div class='cheatlayer cheatlayer dropdown-content' style='z-index:10000000000000;'> <a  style='margin-left:0px' class='cheatlayer cheatlayer runscript' type='button' aria-label='" + (counter) + "' id='runC" + (counter) + "' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>Run</a> <a  style='margin-left:10px;margin-right:10px;' class='cheatlayer cheatlayer runscript'   aria-label='" + (counter) + "' type='button' id='editC" + (counter) + "' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>Edit</a><a  style='margin-left:10px;margin-right:10px;' class='cheatlayer cheatlayer runscript'   aria-label='" + (counter) + "' type='button' id='removeC" + (counter) + "' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>Remove</a> <a  style='margin-left:10px;margin-right:10px;' class='cheatlayer cheatlayer runscript whitecheat'   aria-label='` + kk + `' type='button' id='whitelabelC" + kk + "' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>White Label</a>  <a  style='margin-left:10px;margin-right:10px;' class='cheatlayer cheatlayer runscript schedulecheat'   aria-label='` + kk + `' type='button' id='scheduleC" + kk + "' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>Schedule</a></div> </div>" + community_scripts[kk].name + "</div></div>";
                    script_listen += "community_scripts.push({name: '" + community_scripts[kk].name + "', start: '" + community_scripts[kk].start + "', script: `" + community_scripts[kk].script + "`});";
    
                    script_listen += "document.getElementById('editC" + (counter) + "').onclick = function(){    document.getElementById('script').style.display = 'block';document.getElementById('console').style.display = 'block';document.getElementById('schedulerblock').style.display = 'none';    ('editscript');var num = parseInt(this.getAttribute('aria-label')); window.editor.setValue(community_scripts[num].script,1);(num);window.postMessage({removeLine: 'test' } , '*');} ;";
    
                    script_listen += "document.getElementById('removeC" + (counter) + "').onclick = function(){('remove');var num = parseInt(this.getAttribute('aria-label')); community_scripts.splice(num,1);  (community_scripts); window.postMessage({community_scripts: community_scripts } , '*'); } ;";
                    script_listen += "document.getElementById('runC" + (counter) + "').onclick = function(){('run');var num = parseInt(this.getAttribute('aria-label')); (community_scripts[num].script);window.postMessage({script: community_scripts[num].script , start: community_scripts[num].start , index: num} , '*');};";
                    script_listen += "document.getElementById('whitelabelC" + kk + "').onclick = function(){('whitelabel');var num = parseInt(this.getAttribute('aria-label')); (community_scripts[num].script);window.postMessage({whitelabel: community_scripts[num].script , start: community_scripts[num].start, index: num} , '*');};";
                    script_listen += "document.getElementById('scheduleC" + kk + "').onclick = function(){document.getElementById('scheduler').style.display = 'block';('schedule');var num = parseInt(this.getAttribute('aria-label')); (community_scripts[num].script);window.postMessage({schedule: community_scripts[num].script , start: community_scripts[num].start, index: num} , '*');document.getElementById('scriptschedule').value = community_scripts[num].name; document.getElementById('websiteschedule').value = community_scripts[num].start; };";
    
                    counter++;
                }
    
            }
            script_html += "<center><a href='#' id='reportBug' style='background-color:#FFFFFF; border:1px solid #FFFFFF; border-radius:0px; color:#000000; margin-right:10px; padding:0px 10px 0px 0px;font-size:12px;'>Report</a></center>";
            script_html += "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' > <center><h2 class="cheatlayer"style='color:black;font-size:12px;'>Schedule</h2></center></div><hr>";
    
            for (var kk = 0; kk < schedule.length; kk++) {
                script_html += "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' ><div></div> " + schedule[kk].formschedule + " " + schedule[kk].frequency + "<br> " + schedule[kk].hours + " " + schedule[kk].start + " <br><a href='#' id='removeSchedule" + kk + "' aria-label='" + schedule[kk].formschedule + "," + schedule[kk].frequency + "," + schedule[kk].hours + "," + schedule[kk].start + "'>Remove</a> </div></div><hr>";
                script_listen += "document.getElementById('removeSchedule" + kk + "').onclick = function(){var scheduleDetails = this.getAttribute('aria-label');window.postMessage({removeSchedule: scheduleDetails} , '*'); };";
    
            }
            //          SendMessage("Community", "scripts", "", community_scripts);
    
            script_listen += "},2000);"
            $("#scriptlist").append(script_html);
    
    
            var scheduler_html = "<div id='scheduler' style='display:none;position:fixed;background-color:white;color:black;z-index:100000000000; width:50%;left:25%;top:20%;height:50%;'><center><form id='submitScheduleForm' class='cheatlayer cheatlayer form-horizontal'>Automation Frequency:<select style='color:black' name='frequency' id='frequency'><option  value='hourly'>Hourly</option><option value='daily'>Daily</option><option value='Monday'>Monday</option><option value='Tuesday'>Tuesday</option><option value='Wednesday'>Wednesday</option><option value='Thursday'>Thursday</option><option value='Friday'>Friday</option><option value='Saturday'>Saturday</option><option value='Sunday'>Sunday</option><option value='1'>Day 1</option><option value='2'>Day 2</option><option value='3'>Day 3</option><option value='4'>Day 4</option><option value='5'>Day 5</option><option value='6'>Day 6</option><option value='7'>Day 7</option><option value='8'>Day 8</option><option value='9'>Day 9</option><option value='10'>Day 10</option><option value='11'>Day 11</option><option value='12'>Day 12</option><option value='13'>Day 13</option><option value='14'>Day 14</option><option value='15'>Day 15</option><option value='16'>Day 16</option><option value='17'>Day 17</option><option value='18'>Day 18</option><option value='19'>Day 19</option><option value='20'>Day 20</option><option value='21'>Day 21</option><option value='22'>Day 22</option><option value='23'>Day 23</option><option value='24'>Day 24</option><option value='25'>Day 25</option><option value='26'>Day 26</option><option value='27'>Day 27</option><option value='28'>Day 28</option><option value='29'>Day 29</option><option value='30'>Day 30</option><option value='31'>Day 31</option></select><br>Hour(only for Daily+):<select style='color:black' name='hour' id='hour'><option value='1'>1</option><option value='2'>2</option><option value='3'>3</option><option value='4'>4</option><option value='5'>5</option><option value='6'>6</option><option value='7'>7</option><option value='8'>8</option><option value='9'>9</option><option value='10'>10</option><option value='11'>11</option><option value='12'>12</option><option value='13'>13</option><option value='14'>14</option><option value='15'>15</option><option value='16'>16</option><option value='17'>17</option><option value='18'>18</option><option value='19'>19</option><option value='20'>20</option><option value='21'>21</option><option value='22'>22</option><option value='23'>23</option><option value='24'>24</option></select><br><input class='cheatlayer' type='text' id='scriptschedule' name='script' disabled><br><input class='cheatlayer' type='text' id='websiteschedule' name='website' disabled><br><button type='submit' id='submitSchedule' class='cheatlayer cheatlayer dropbtn'>Schedule</button><button onclick='document.getElementById('scheduler').style.display=\"none\"' id='cancelSchedule' class='cheatlayer cheatlayer dropbtn'>Cancel</button></form><center> </div>";
            script_listen += "function processForm(e) { if (e.preventDefault) e.preventDefault(); (e); document.getElementById('scheduler').style.display = 'none'; var name = document.getElementById('scriptschedule').value;  var frequency = document.getElementById('frequency').value; var hour = document.getElementById('hour').value;  var start = document.getElementById('websiteschedule').value;  window.postMessage({formschedule: name , start: start, frequency: frequency, hours: hour} , '*');  setTimeout(function(){},2000);   return false; } var form = document.getElementById('submitScheduleForm'); if (form.attachEvent) { form.attachEvent('submit', processForm); } else { form.addEventListener('submit', processForm); document.getElementById('scheduler').style.display = 'none';}"
            $("body").append(scheduler_html);
            var script = document.createElement("script");
            script.innerHTML = script_listen;
            document.body.appendChild(script);
            var start = window.location.href.split('/')[2];
    
    */

        if (!event.data.script.includes("[Tab Recording]")) {
            //console.log("Running Script!");
            eval( event.data.script);
        } else {
            //console.log("Running Recording!");

            SendMessage("playRecording", "recording", event.data.script);

        }

        var datascript = event.data.script;





    } else if (event.data.evalScript) {
        runScriptEval();

    } else if (event.data.newScript) {
        last_saved = 'new';
        last_recorder_delay = 0;
        $('#no_code_parameters').html('');
        error_log = '';
        document.getElementById('console').value = "";

        window.editor.setValue('');
        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

        no_code_container = [];
        drawNoCodeContainer();
        if (no_code_container.length > 0) {
            for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                    leader_lines[kk].remove();
                    leader_lines[kk] = null;
                }

            }
        }

        for (var kk = 0; kk < leader_lines.length; kk++) {
            if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                leader_lines[kk].remove();
                leader_lines[kk] = null;
            }

        }

        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

    } else if (event.data.scripts) {

        SendMessage("Scripts", "target", event.data);
        //  SendMessage("GetScripts", "target", window.location.href);

    } else if (event.data.scriptsNewAs) {

        if (false) {
            alert("You have reached the maximum number of scripts the free version. Please upgrade at cheatlayer.com/billing.");
            window.location.href = "https://cheatlayer.com/billing";
        } else {

            for (var kk = 0; kk < leader_lines.length; kk++) {
                if (leader_lines[kk] && typeof leader_lines[kk] !== 'undefined') {
                    leader_lines[kk].remove();
                    leader_lines[kk] = null;
                }
            }
            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

            scripts = event.data.scriptsNewAs;
            if (!(document.getElementById('saveMenu'))) {
                var options_string = `<select class='selectCheat selectCheat selectBox  select' name="vars" id='folderSelection'>
            `;
                for (var jj = 0; jj < folders.length; jj++) {
                    if (folders[jj].split(" ").join("").length == 0) {
                        continue;
                    }
                    options_string += `<option value="` + folders[jj] + `">` + folders[jj] + `</option>`;

                }
                options_string += `<option selected='selected' value="">None</option>`;

                options_string += `</select>`;
                $('HTML').append(`
    
    <div id="saveMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
    
    <div  class='modalcheat-content' style='overflow:auto;border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:50%;height:80%;z-index:100000000000;position:fixed;top:5%;left:25%;background-color:white;color:black !important;'>
    <center><h1 style="color:black !important;">Save Script</h1><br>
    
    Script Name:<br>
    <input value='` + last_saved + `' style='border:1px solid !important;background-color:white;color:black;color:black;z-index:1000000000000000000;' type='text' id='nameSave' name='name'><br>
    Website:<br>
    <input style='border:1px solid !important;background-color:white;color:black;color:black;z-index:1000000000000000000;' type='text' id='websiteSave' name='website'><br>
    Time Saved(minutes):<br>
    <input value="5" style='background-color:white;color:black;color:black;z-index:1000000000000000000;' type='text' id='timeSave' name='time'><br>
    <br>Folder: 
    ` + options_string + `<br><br>
    
    <button style='background-color:white;color:black;' id='saveScript'>Save</button>
    <button style='background-color:white;color:black;' id='cancelsaveScript'>Cancel</button>
    <div id='interfaceCanvas' style='height:50%;width:100%;position:relative;overflow-y:hidden;'>
    </div><br>
    <a href='#' id='addInterfaceInput'>+Add Input</a><br>

    </center>
    </div>
    
    
    </div>
    `);
            } else {
                document.getElementById('saveMenu').style.display = "block";

            }
            $("#nameSave").keypress(function (event) {
                if (event.keyCode === 13) {
                    $("#saveScript").click();
                }
            });
            $("#websiteSave").keypress(function (event) {
                if (event.keyCode === 13) {
                    $("#saveScript").click();
                }
            });
            document.getElementById('addInterfaceInput').onclick = function () {
                //  document.getElementById('saveMenu').style.display = "none";
                var inputName = prompt('Enter Input Name');
                var name = inputName;
                interface.push({ type: "text", value: "default", name: name });
                var interface_html = "";
                for (var kk = 0; kk < interface.length; kk++) {
                    interface_html += interface[kk].name + ' : <input id="' + interface[kk].name + '" type="text" value="' + interface[kk].value + '"></input><br>';
                }

                input_vars.push(`inputs['` + inputName + `']`);

                document.getElementById('interfaceCanvas').innerHTML = interface_html + "<br>";

            };

            document.getElementById('cancelsaveScript').onclick = function () {
                document.getElementById('saveMenu').style.display = "none";
                $('#loadingCheat').hide();
            };
            document.getElementById('saveScript').onclick = function () {

                if (!document.getElementById('loadingCheat')) {
                    $('HTML').append(`<div id='loadingCheat' style='width: calc(100% - 270px);height:90%;left:0%;top:64.5px;position:fixed;background-color:white;z-index:1000000;'><img style='position:fixed;left:25%; top:30%;' src='` + chrome.runtime.getURL("logo.gif") + `'></img></div>`);
                } else {
                    $('#loadingCheat').show();
                }


                document.getElementById('saveMenu').style.display = "none";
                var name = last_saved;
                var time = document.getElementById('timeSave').value;
                var folder = document.getElementById('folderSelection').value;

                if (true) {


                    //name = document.getElementById('nameSave').value;
                    //var start = document.getElementById('websiteSave').value;

                    name = document.getElementById('nameSave').value;
                    var start = document.getElementById('websiteSave').value;
                }
                if (!name) {
                    name = 'null';
                }
                if (!start) {
                    start = 'www.cheatlayer.com';
                }
                old = window.editor.getValue();


                for (var kk = 0; kk < interface.length; kk++) {

                    interface[kk].value = document.getElementById(interface[kk].name).value;
                    //  interface[kk].name = document.getElementById('input' + kk).name;

                }

                var saved_script = window.editor.getValue();

                if (saved_script.includes("[stop interface code]")) {

                    saved_script = saved_script.split('[stop interface code]')[1].split('//[start interface code]')[0];
                }

                if (interface.length > 0) {


                    var options_html = "var inputs = {";
                    for (var kk = 0; kk < interface.length; kk++) {
                        options_html += '"' + interface[kk].name + '":"' + interface[kk].value + '",';
                    }
                    options_html += `};
    function start(){
    `;
                    saved_script = options_html + `
    //[stop interface code]
    ` + saved_script + `
    //[start interface code]
    }
    $("body").append(\`<div id='cheatInterface' style='overflow:auto;position:fixed;top:0;left:25%;width:50%;height:50%;background-color:white;opacity:1.0;z-index:10000000000;'>
    <center><h1>` + name + `</h1>
    <br>
    `
                    for (var kk = 0; kk < interface.length; kk++) {
                        saved_script += 'input ' + kk + ' : <input class="interfaceCheatInput" id="input' + kk + '" type="text" value="' + interface[kk].value + '"></input><br>';
                    }

                    saved_script += `<button id='startCheat'>Start</button><br><button id='cancelCheat'>Cancel</button></center></div>
    \`);
`;
                    for (var kk = 0; kk < interface.length; kk++) {

                        saved_script += `
$('#input` + kk + `').on('keyup', function(e) {

    inputs['input` + kk + `'] = e.target.value;
});
`;

                    }

                    saved_script += `
    document.getElementById('startCheat').onclick = function(){
        start();
        document.getElementById('cheatInterface').style.display = "none";

    };
    document.getElementById('cancelCheat').onclick = function(){
        document.getElementById('cheatInterface').style.display = "none";
    };
    
    `;
                }
                old_code = saved_script;
                old = saved_script;

                window.editor.setValue(saved_script);
                window.editor.renderer.updateFull(); window.editor.resize();
                //setTimeout(function(){window.editor.renderer.updateFull(); window.editor.resize();},2000);

                var found = false;
                for (var kk = 0; kk < scripts.length; kk++) {
                    if (scripts[kk].name == name) {
                        found = true;
                        scripts[kk].start = start;
                        scripts[kk].script = saved_script;
                        scripts[kk].deleted = false;
                        scripts[kk].time = time;
                        scripts[kk].folder = folder;

                    }
                }


                if (found == false) {
                    scripts.push({
                        name: name,
                        start: start,
                        time: time,
                        folder: folder,
                        interface: interface,
                        script: saved_script,
                        no_code_container: no_code_container,
                        inputs: input_vars
                    });
                }
                interface = [];
                last_saved = name;
                SendMessage("Scripts", "target", { scripts: scripts });

                //window.editor.renderer.updateFull(); window.editor.resize();setTimeout(function(){window.editor.renderer.updateFull(); window.editor.resize();},2000);

            }
        }
    } else if(event.data.genChat){

        //console.log(event.data.genChat)
        
        var firebaseConfig = {
            apiKey: "AIzaSyApJsRNWHtr06MPLh2NJaLmW1fcG8W5XLk",
            authDomain: "cheat-layer.firebaseapp.com",
            projectId: "cheat-layer",
            databaseURL: "https://cheat-layer-default-rtdb.firebaseio.com",
            storageBucket: "cheat-layer.appspot.com",
            messagingSenderId: "964029954703",
            appId: "1:964029954703:web:836e0dec49ad6e60214efa",
            measurementId: "G-T21Y70F57D"
        };
          // Initialize Firebase
          const app = firebase.initializeApp(firebaseConfig);
        var context_aware_cheats = "";
        var starCountRef = firebase.database().ref('cheats');
        starCountRef.once('value', (snapshot) => {
          const data = snapshot.val();
          var codes_html = "";
          cloud_cheats = [];
           var counter = 0;
        snapshot.forEach((child) => {

if(event.data.genChat.includes(child.val().promptChain)){
        runOnTab(child.val().site,`genAtlas("` + event.data.genChat+ `")`);
}

        });
    })




    } if (event.data.scriptsNew) {

        if (!document.getElementById('loadingCheat')) {
            $('HTML').append(`<div id='loadingCheat' style='width: calc(100% - 270px);height:90%;left:0%;top:64.5px;position:fixed;background-color:white;z-index:1000000;'><img style='position:fixed;left:25%; top:30%;' src='` + chrome.runtime.getURL("logo.gif") + `'></img></div>`);
        } else {
            $('#loadingCheat').show();
        }

        for (var kk = 0; kk < leader_lines.length; kk++) {
            if (leader_lines[kk] && typeof leader_lines[kk] !== 'undefined') {
                leader_lines[kk].remove();
                leader_lines[kk] = null;
            }
        }
        old = window.editor.getValue();

        saveScript();
        setTimeout(function () { $('#loadingCheat').hide(); }, 200 * 1000);

    } else
        if (event.data.generate) {
            if (user_plan == "free") {
                this.alert("GPT-3 is a paid feature. Please upgrade at CheatLayer.com/billing.");

                // window.location.href = "https://www.cheatlayer.com/billing";
            } else {

                if (window.location.href.includes('cheatlayer')) {

                    if (last_complete == 10) {
                        setTimeout(function () {
                            introJs().setOptions({
                                steps: [
                                    {
                                        element: document.querySelector('#gptInput'),
                                        intro: "Paste in the quote we copied earlier 'Slowly, collect all the rows on the page and send them to Google Sheets'"
                                    }]
                            }).start();
                        }, 1000);
                        //startOnboard(0);
                    }
                }
                document.getElementById('cheatmenu').style.display = 'block';
                document.getElementById('script').style.display = 'block';
                if (document.getElementById('newnocode')) { document.getElementById('newnocode').style.display = 'none'; }
                document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
                if (document.getElementById('nocode')) { document.getElementById('nocode').style.display = 'block'; }

                if (no_code_container.length > 0) {
                    for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                        if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                            leader_lines[kk].remove();
                            leader_lines[kk] = null;
                        }

                    }
                }
                if (!document.getElementById('cancelGPTButton')) {
                    $('HTML').append(`
    <div id="generateMenu"  class="cheatlayer modalcheat" style='position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000;' >

        <div class='modalcheat-content' style='border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:33%;z-index:10000000;position:fixed;top:5px;left:33%;background-color:white;color:black !important;'>
        <center><h1 style="color:black !important;">GPT-3 Code Generator</h1><br>

        <h1 style="color:black !important;">Describe the automation you<br> want in natural language:</h1><br>
        <input style='border:1px solid !important;background-color:white;width:90%;color:black;z-index:1000000000000000000;' type='text' id='gptInput' name='gptInput'>
    <br><br>
        <button style='background-color:white;color:black;z-index:1000000000000000000;'  id='sendGPTButton'>Generate</button>
        <button style='background-color:white;color:black;z-index:1000000000000000000;'  id='cancelGPTButton'>Cancel</button>
            <br><br>
        </center>
        </div>
        </div>
        `);
                } else {
                    document.getElementById('generateMenu').style.display = 'block';

                }
                if (event.data.generate != 'input') {
                    document.getElementById('gptInput').value = event.data.generate;
                }


                $("#gptInput").keypress(function (event) {
                    if (event.keyCode === 13) {
                        $("#sendGPTButton").click();
                    }
                });
                document.getElementById('cancelGPTButton').onclick = function () {
                    document.getElementById('generateMenu').style.display = 'none';

                };

                document.getElementById('sendGPTButton').onclick = function () {


                    if (!document.getElementById('loadingCheat')) {
                        $('HTML').append(`<div id='loadingCheat' style='width: calc(100% - 270px);height:90%;left:0%;top:64.5px;position:fixed;background-color:white;z-index:1000000;'><img style='position:fixed;left:25%; top:30%;' src='` + chrome.runtime.getURL("logo.gif") + `'></img></div>`);
                    } else {
                        $('#loadingCheat').show();
                    }



                    document.getElementById('generateMenu').style.display = 'none';
                    var input = document.getElementById('gptInput').value;




                    if (input.length > 2) {
                        last_gpt = input;

                        SendMessage("Generate", "data", input);
                        window.editor.setValue(window.editor.getValue() + "//Generating GPT-3 code.. Please wait up to 20 seconds", 1);
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                    }
                };
                //  (event.data.generate);
            }
        } else
            if (event.data.reportBug) {
                SendMessage("reportBug", "data", event.data.reportBug + " " + window.location.href);

                window.editor.setValue(window.editor.getValue() + "//Bug Reported!", 1);
                window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                exportObj = scripts;
                exportName = 'cheatlayer';

                var dataStr = "data:text/json;charset=utf-8," + encodeURIComponent(JSON.stringify(exportObj));
                var downloadAnchorNode = document.createElement('a');
                downloadAnchorNode.setAttribute("href", dataStr);
                downloadAnchorNode.setAttribute("download", exportName + ".json");
                document.body.appendChild(downloadAnchorNode); // required for firefox
                downloadAnchorNode.click();
                downloadAnchorNode.remove();


            } else
                if (event.data.whitelabel) {
                    //console.log(bootcampS2);
              
                    var splitcodes = codes[0].split(",");

                    if ((splitcodes.length >= 10 && refunded == "false") || user_plan == "Product Builder" || user_plan == "subAccountWhite" || bootcampS2 == "yes") {
                        event.data.extensionName = event.data.name;
                        // event.data.author = prompt("Enter the email address of the author please:");
                        event.data.logo = "https://cheatlayer.com/icon2.png";

                        SendMessage("GenerateWhitelabel", "whitelabel", event.data);
                        alert('White label generating! Please wait 30 seconds.');
                    } else {
                        alert("Your plan doesn't support White Labels. White labels enable turning any automation into a chrome extension. Please upgrade on the billing page.");
                        window.location.href = "https://cheatlayer.com/billing";
                    }
                } else if (event.data.community_scripts) { //removeSchedule
                    SendMessage("community_scripts", "target", event.data);
                } else if (event.data.community_scripts) {
                    SendMessage("community_scripts", "target", event.data);
                } else if (event.data.runChat) {

                    runOnTab(event.data.runChat.split(";:;")[1], "genAtlas(\`"+ event.data.runChat.split(";:;")[0] +"\`);",1520);

                } else  if (event.data.submitAgent) {
                    //console.log("SUBMIT AGENT")

                    SendMessage("submitAgent", "data", {goal: event.data.submitAgent, url: event.data.start});
                } else  if (event.data.removeSchedule) {
                    SendMessage("removeSchedule", "data", event.data.removeSchedule);
                    document.getElementById('newnocode').style.display = 'none';
                    document.getElementById('script').style.display = 'none';

                } else if (event.data.formschedule) {
                    (event.data);
                    SendMessage("formschedule", "data", event.data);

                } else
                    if (event.data.edit) {

                    } else if (event.data.publish) {
                        if (true) {

                            sendAjax('https://cheatlayer.com/user/publishScript', {
                                script: event.data.publish,
                                name: event.data.name,
                                username: event.data.username,
                                start: event.data.start
                            }, 'post', function (dataobj) {
                                (dataobj);
                                SendMessage("gotAjax", "dataobj", dataobj, ComPortTikTok);


                            });
                        }
                    }

}, false);

function OnMessageReceive(msg) {
    ////console.log(msg);
    //            SendMessage("callback", "data", {callback: msg.data.callback, data: dataobj}, ComPortTikTok);
    if (msg.Tag == "zillowScrapper") {
        resultPageParse(msg.data);
    }else if (msg.Tag == "UpdateTikTok") {

        //getEmails(sheets_url, sheet_name = "Sheet1")

    } else  if (msg.Tag == "createdSheet") {
        //console.log(msg.data);
        last_created_sheet_name = msg.data.sheets[0].properties.title;
        last_created_sheet_url = msg.data.spreadsheetUrl;
        //getEmails(sheets_url, sheet_name = "Sheet1")
        runOnTab(last_created_sheet_url,"",1520);
    } else if (msg.Tag == "runScript") {//whitelabelresultgotGoogleAPI //errorLognavigateClick
        //console.log("Run Script")

        eval( msg.script);


    } else if (msg.Tag == "callback") {//whitelabelresultgotGoogleAPI //errorLog//scrollbottom
        //console.log(msg.data);
        var data = msg.data.data;

        eval( msg.data.callback);


    } else if (msg.Tag == "launchAtlas") {//whitelabelresultgotGoogleAPI //errorLog//scrollbottom
   launchAtlas();

    } else if (msg.Tag == "fillform") {//whitelabelresultgotGoogleAPI //errorLog//scrollbottom
        //console.log(msg.data);




    } else if (msg.Tag == "googleMaps") {//whitelabelresultgotGoogleAPI //errorLog//scrollbottom
        //Generated Script id=0


        var inputs = { "input0": "https://docs.google.com/spreadsheets/d/188O0cj_I1ftCph8y7nIvYVHCjEmWlpbcktJ70PjFskk/edit#gid=0", "input1": "", "input2": "1", };

        window.urls = [];
        window.companies = [];



        function saveExcel() {


            //console.log("Downloading Excel File.")


            setTimeout(function () {
                //console.log("create workbook");
                //endcode
                const workbook = new ExcelJS.Workbook();


                const worksheet = workbook.addWorksheet('New Sheet');
                //console.log()
                var columns = [{ header: "Company Name", key: "Company Name" }, { header: "Company Natural", key: "Company Natural" }, { header: "Originator", key: "Originator" }, { header: "City", key: "City" }, { header: "State", key: "State" }, { header: "Description", key: "Description" }, { header: "Website", key: "Website" }, { header: "Phone", key: "Phone" }, { header: "Owner First Name", key: "Own Last Name" }, { header: "Owner Contact", key: "Owner Contact" }
                ];
                //console.log("COMPANIES")
                //console.log(JSON.stringify(window.companies))
                worksheet.columns = columns;
                //console.log("Rows")
                for (var kk = 0; kk < window.companies.length; kk++) {

                    var row = worksheet.addRow(window.companies[kk]);

                    runOnTab('https://' + window.companies[kk]["Website"], '//console.log("test")', 10, { newWindow: true, id: -1 });
                }

                workbook.xlsx.writeBuffer().then((data) => {
                    const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8' });
                    saveAs(blob, 'test.xlsx');
                });//Generated Script id=1//Generated Script id=

            },/*delay*/3 * 1000);
        }

        function start() {


            var sheetinput = "";
            var search_term = msg.data.term;
            var search_pages = 1;
            var keywords = [];
            var delay = 15;
            keywords.push(search_term)

            /*curl --location --request POST 'https://api.dataforseo.com/v3/keywords_data/google_ads/keywords_for_keywords/live' \
            --header 'Authorization: Basic bG9naW46cGFzc3dvcmQ=' \
            --header 'Content-Type: application/json' \
            --data-raw '[{"search_partners":false, "keywords":["weather forecast"], "location_code":2826, "language_code":"en", "sort_by":"relevance", "include_adult_keywords":false}]'*/

            //console.log("Starting keyword search: " + search_term);
            sendAjax('https://api.dataforseo.com/v3/keywords_data/google_ads/keywords_for_keywords/live', '[{"search_partners":false, "keywords":["' + search_term + '"], "location_code":2826, "language_code":"en", "sort_by":"relevance", "include_adult_keywords":false}]', 'POST', `
       window.keywords = [];
       if(typeof data.tasks[0].result != 'undefined'){
           for(var kk = 0; kk < data.tasks[0].result.length; kk++){
               window.keywords.push(data.tasks[0].result[kk]["keyword"])
           }
           
       }
       //console.log(window.keywords)
       $('#cheatInterfaceLog').append(window.keywords);

       `, { 'Authorization': 'Basic cm9oYW5hcnVuQGdtYWlsLmNvbTo1OTZkOGI5NjYzZjllMDRk', 'Content-Type': 'application/json' })



            setTimeout(function () {

                for (var kk = 0; kk < search_pages; kk++) {
                    //https://maps.googleapis.com/maps/api/place/textsearch/json?query=plumbing&key=AIzaSyAUlwFydFEp8w-1e6AQPfs9sLlZkapDHq8&cx=20b7f898385ab43bb
                    //var searchAPI = "https://www.googleapis.com/customsearch/v1?key=AIzaSyAUlwFydFEp8w-1e6AQPfs9sLlZkapDHq8&cx=20b7f898385ab43bb&q=" + search_term + "&start=";
                    var searchAPI = "https://maps.googleapis.com/maps/api/place/textsearch/json?query=" + window.keywords[kk].split(" ").join("+") + "&key=AIzaSyAUlwFydFEp8w-1e6AQPfs9sLlZkapDHq8&cx=20b7f898385ab43bb";

                    //curl 'https://company.bigpicture.io/v1/companies/find?domain=bigpicture.io' -H 'Authorization: 4xMCoeWaPvFNur4ZN1oOtg:5Wb2HN2GLugzij6P0He4T0'
                    sendAjax(searchAPI, null, "GET", `
           for(var jj = 0; jj < data.results.length;jj++){
           window.urls.push(data.results[jj].place_id)
               
           }
           
           `)
                }

                if (true) {
                    setTimeout(function () {
                        window.result = [];
                        function slow2(kk) {
                            var phone = '';
                            sendAjax("https://maps.googleapis.com/maps/api/place/details/json?fields=name%2Cwebsite%2Cformatted_phone_number&place_id=" + window.urls[kk] + "&key=AIzaSyAUlwFydFEp8w-1e6AQPfs9sLlZkapDHq8&cx=20b7f898385ab43bb", null, "GET", `//console.log(data.result)
                   if(typeof data.result.website != 'undefined'){
                 if(typeof data.result.formatted_phone_number != 'undefined'){
                     phone = data.result.formatted_phone_number;
                 }
                       sendAjax("https://company.bigpicture.io/v1/companies/find?domain=" + data.result.website.split('https://').join('').split('http://').join('').split('/').join('').split('-').join('').split('_').join('').split('?')[0],null ,"GET",\`
                   //console.log('big pic')
       result = []
       for(var i in data)
           result.push(JSON.stringify(data [i]));
       //console.log(JSON.stringify(result))
       $('#cheatInterfaceLog').append(JSON.stringify(result));

       window.companies.push({"Company Name": data["legalName"],"Company Natural": data["name"],"Originator":"Rohan","City":data["location"].split(',')[0], "State": data["location"].split(',')[1], "Description": data["description"], "Website":data["domain"],"Owner Contact":phone})
                   
       \`,{"Authorization":"4xMCoeWaPvFNur4ZN1oOtg:5Wb2HN2GLugzij6P0He4T0"});
                       
                       
                   }
                   
       `, { "Authorization": "4xMCoeWaPvFNur4ZN1oOtg:5Wb2HN2GLugzij6P0He4T0" });

                            if (kk < window.urls.length) {
                                setTimeout(function () { slow2(kk + 1) }, 100);
                            } else {
                                //console.log("Downloading Excel File.")


                                setTimeout(function () {
                                    //console.log("create workbook");
                                    //endcode
                                    const workbook = new ExcelJS.Workbook();


                                    const worksheet = workbook.addWorksheet('New Sheet');
                                    //console.log()
                                    var columns = [{ header: "Company Name", key: "Company Name" }, { header: "Company Natural", key: "Company Natural" }, { header: "Originator", key: "Originator" }, { header: "City", key: "City" }, { header: "State", key: "State" }, { header: "Description", key: "Description" }, { header: "Website", key: "Website" }, { header: "Phone", key: "Phone" }, { header: "Owner First Name", key: "Own Last Name" }, { header: "Owner Contact", key: "Owner Contact" }
                                    ];
                                    //console.log("COMPANIES")
                                    //console.log(JSON.stringify(window.companies))
                                    $('#cheatInterfaceLog').append(JSON.stringify(window.companies));

                                    worksheet.columns = columns;
                                    //console.log("Rows")
                                    for (var kk = 0; kk < window.companies.length; kk++) {

                                        var row = worksheet.addRow(window.companies[kk]);

                                        runOnTab('https://' + window.companies[kk]["Website"], '//console.log("test")', 10, { newWindow: true, id: -1 });
                                    }

                                    workbook.xlsx.writeBuffer().then((data) => {
                                        const blob = new Blob([data], { type: 'application/vnd.openxmlformats-officedocument.spreadsheetml.sheet;charset=utf-8' });
                                        saveAs(blob, 'test.xlsx');
                                    });//Generated Script id=1//Generated Script id=

                                },/*delay*/3 * 1000);
                            }

                        }

                        slow2(0);
                    }, 5000);


                }

                if (true) {
                    setTimeout(function () {
                        window.result = [];
                        function slow2(kk) {
                            var phone = '';
                            sendAjax("https://maps.googleapis.com/maps/api/place/details/json?fields=name%2Cwebsite%2Cformatted_phone_number&place_id=" + window.urls[kk] + "&key=AIzaSyAUlwFydFEp8w-1e6AQPfs9sLlZkapDHq8&cx=20b7f898385ab43bb", null, "GET", `//console.log(data.result)
                   if(typeof data.result.website != 'undefined'){
                 if(typeof data.result.formatted_phone_number != 'undefined'){
                     phone = data.result.formatted_phone_number;
                 }
                       sendAjax("https://company.bigpicture.io/v1/companies/find?domain=" + data.result.website.split('https://').join('').split('http://').join('').split('/').join('').split('-').join('').split('_').join('').split('?')[0],null ,"GET",\`
                   //console.log('big pic')
       result = []
       for(var i in data)
           result.push(JSON.stringify(data [i]));
       //console.log(JSON.stringify(result))
       $('#cheatInterfaceLog').append(JSON.stringify(result));

       window.companies.push({"Company Name": data["legalName"],"Company Natural": data["name"],"Originator":"Rohan","City":data["location"].split(',')[0], "State": data["location"].split(',')[1], "Description": data["description"], "Website":data["domain"],"Owner Contact":phone})
                   
       \`,{"Authorization":"4xMCoeWaPvFNur4ZN1oOtg:5Wb2HN2GLugzij6P0He4T0"});
                       
                       
                   }
                   
       `, { "Authorization": "4xMCoeWaPvFNur4ZN1oOtg:5Wb2HN2GLugzij6P0He4T0" });

                            if (kk < window.urls.length) {
                                setTimeout(function () { slow2(kk + 1) }, 100);
                            } else {


                                function slow3(jj) {

                                    //console.log(JSON.stringify(window.companies[jj]))
                                    $('#cheatInterfaceLog').append(JSON.stringify(window.companies[jj]));
                                    //console.log(window.companies[jj]["Website"]);
                                    sendAjax('https://api.apollo.io/v1/mixed_people/search', { "api_key": "PE1G3gKBPIRtQ2jst6v3fQ", "q_organization_domains": window.companies[jj]["Website"], "page": 1, "person_titles": ["owner"] }, 'POST', `//console.log('apollo:');//console.log(data)`, `{"Content-Type":"application/json", "Cache-Control":"no-cache"}`)





                                    if (jj < window.companies.length) {
                                        setTimeout(function () { slow3(jj + 1) }, 100);
                                    } else {
                                        saveExcel();

                                    }

                                }
                                slow3(0);







                            }

                        }

                        slow2(0);
                    }, 30000);


                }
                //endcode
                if (false) {


                }

            }, delay * 1000)


        }
        if (!document.getElementById('cheatInterface')) {
            $("body").append(`<div class="cheatInterface" id='cheatInterface' style='overflow:auto;position:fixed;top:20%;left:25%;width:30%;height:30%;background-color:white;opacity:1.0;z-index:10000000000;'>
           <center><h1>Google Maps Lead Generator</h1>
           <br>
       Search Term : <input class="interfaceCheatInput" id="input1" type="text" value=""></input><br>Search Pages : <input class="interfaceCheatInput" id="input2" type="text" value="1"></input><br>Min Reviews: <input class="interfaceCheatInput" id="input2" type="text" value="1"></input><br>Max Reviews : <input class="interfaceCheatInput" id="input2" type="text" value="1000"></input><br><button class='startCheat'>Start</button><br><button class='cancelCheat'>Cancel</button>
       <br>
       <div id='cheatInterfaceLog'></div>
       
       </center></div>
           `);

            $('#input1').on('keyup', function (e) {

                inputs['input1'] = e.target.value;
            });

            $('#input2').on('keyup', function (e) {

                inputs['input2'] = e.target.value;
            });

            $(document).on('click', '.startCheat', function () {

                start();
                document.getElementById('cheatInterface').style.display = "none";

                var elemnts = document.getElementsByClassName('cheatInterface')

                for (var kk = 0; kk < elemnts.length; kk++) {
                    elemnts[0].style.display = "none";
                }

            });
            $(document).on('click', '.cancelCheat', function () {

                document.getElementById('cheatInterface').style.display = "none";
                var elemnts = document.getElementsByClassName('cheatInterface')

                for (var kk = 0; kk < elemnts.length; kk++) {
                    elemnts[0].style.display = "none";
                }

            });

        } else {
            document.getElementById('cheatInterface').style.display = 'block';
        }

        //endcode

        start();


    } else if (msg.Tag == "postbasicIMG") {//whitelabelresultgotGoogleAPI //errorLog//scrollbottom
        //console.log(msg.data);
        if (window.location.href.includes('twitter')) {
            var delayKey = 1000;
            setTimeout(function () {
                var element = document.querySelector('div > div > div:nth-of-type(2) > main > div > div > div > div > div > div:nth-of-type(3) > div > div:nth-of-type(2) > div > div > div > div > div:nth-of-type(2) > div > div > div > div > div > div > div > div > div > div > div > label > div > div > div > div > div > div > div:nth-of-type(2) > div > div > div > div');
                element.click();
                var newData = CSVToArray(window.data);
                element.dispatchEvent(new Event('focus'));
                element.focus();
                simulateKey(msg.data.post);
            }, /*delay*/1 * delayKey);


            //endcode//Generated Script id=1
            var delayKey = 1000;
            setTimeout(function () {

                var element = document.querySelector('div > div > div:nth-of-type(2) > main > div > div > div > div > div > div:nth-of-type(3) > div > div:nth-of-type(2) > div > div > div > div > div:nth-of-type(2) > div:nth-of-type(3) > div > div > div:nth-of-type(2) > div:nth-of-type(3) > div > span > span');
                element.click();

            },/*delay*/3 * delayKey);
        }

        if (window.location.href.includes('facebook')) {
            //Generating GPT-3 code.. Please wait up to 20 seconds//Generated Script id=0
            var spans = document.getElementsByTagName('span');
            for (var kk = 0; kk < spans.length; kk++) {
                if (spans[kk].innerText && (spans[kk].innerText.includes('Write something') || spans[kk].innerText.includes('your mind'))) {
                    spans[kk].click();

                }
            }


            setTimeout(function () {

                simulateKey(msg.data.post + " ")

                simulateKey(" .")


            }, 5000);




            //Generating GPT-3 code.. Please wait up to 20 seconds//Generated Script id=0



            setTimeout(function () {


                var divs = document.getElementsByTagName('div');
                for (var kk = 0; kk < divs.length; kk++) {
                    if (divs[kk].getAttribute('aria-label') && divs[kk].getAttribute('aria-label').indexOf('Photo/Video') >= 0) {
                        divs[kk].click();
                        setTimeout(function () {

                            var spans2 = document.getElementsByTagName('span');
                            for (var kk = 0; kk < spans2.length; kk++) {
                                if (spans2[kk].innerText && spans2[kk].innerText.includes('drag and drop')) {
                                    spans2[kk].click();
                                    spans2[kk].click();
                                    spans2[kk].parentNode.click();
                                    spans2[kk].parentNode.parentNode.click();

                                    spans2[kk].parentNode.parentNode.parentNode.click();
                                    spans2[kk].parentNode.parentNode.parentNode.parentNode.click();
                                    const evt = new Event('click', { bubbles: true });
                                    spans2[kk].dispatchEvent(evt);

                                    //console.log("FOUND")
                                    //console.log(spans2[kk])
                                    break;
                                }
                            }
                        }, 2000);


                    }
                }
            }, 7000);


            setTimeout(function () {
                //console.log('try photos')
                //Generating GPT-3 code.. Please wait up to 20 seconds//Generated Script id=0
                var spans2 = document.getElementsByTagName('span');
                for (var kk = 0; kk < spans2.length; kk++) {
                    if (spans2[kk].innerText && spans2[kk].innerText.includes('drag and drop')) {
                        spans2[kk].click();
                        spans2[kk].click();
                        spans2[kk].parentNode.click();
                        spans2[kk].parentNode.parentNode.click();

                        spans2[kk].parentNode.parentNode.parentNode.click();
                        spans2[kk].parentNode.parentNode.parentNode.parentNode.click();
                        const evt = new Event('click', { bubbles: true });
                        spans2[kk].dispatchEvent(evt);

                        //console.log("FOUND")
                        //console.log(spans2[kk])
                        break;
                    }
                }
            }, 15000);

            //endcode GPT Prompt: collect all the span on the page with inner text that includes Add Photos/Videos and click them. 


            setTimeout(function () {


                var divs = document.getElementsByTagName('div');
                for (var kk = 0; kk < divs.length; kk++) {
                    if (divs[kk].getAttribute('aria-label') && divs[kk].getAttribute('aria-label').indexOf('Post') >= 0) {
                        divs[kk].click();

                    }
                }
            }, 40000);

            //endcode GPT Prompt: Collect all the div with an aria-label that includes Post and click them. 



            //endcode GPT Prompt: Collect all the span on the page with inner text that includes write and click it. 

        }

    } else if (msg.Tag == "postbasic") {//whitelabelresultgotGoogleAPI //errorLog//scrollbottom
        //console.log(msg.data);
        //console.log(user_plan)
        var promo = "";

        if(user_plan == "free"){
            promo = " @cheatlayer #chatgpt";
            $(".chat__main").append(`
            <div class="chat__bubble bubble__answer"  id="messageAnswer">
                        <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                        <div class="text__wrap">
                        <p><pre  style="margin: 0px; font-size: 16px; line-height: 18px; color: #3D2070;display: inline-block; white-space: pre-line;" class='answerCheats' disabled>Please note that free accounts add #cheatlayer and #chatgpt to their automated social posts. Upgrade on the <a href='https://cheatlayer.com/billing'>billing page</a> to remove the hashtags.</pre></p>
                        </div>
                    </div>`);
        }
        if (window.location.href.includes('twitter')) {
            var delayKey = 1000;
            setTimeout(function () {
                var element = document.querySelector('div > div > div:nth-of-type(2) > main > div > div > div > div > div > div:nth-of-type(3) > div > div:nth-of-type(2) > div > div > div > div > div:nth-of-type(2) > div > div > div > div > div > div > div > div > div > div > div > label > div > div > div > div > div > div > div:nth-of-type(2) > div > div > div > div');
                element.click();
                var newData = CSVToArray(window.data);
                element.dispatchEvent(new Event('focus'));
                element.focus();
                simulateKey(msg.data.post);
            }, /*delay*/1 * delayKey);


            //endcode//Generated Script id=1
            var delayKey = 1000;
            setTimeout(function () {


                var divs = document.getElementsByTagName('div');
                for(var kk = 0; kk < divs.length; kk++){
                if(divs[kk].getAttribute('data-testid') && divs[kk].getAttribute('data-testid').indexOf('tweetButtonInline') >= 0){
                divs[kk].click();
                }
                }

            },/*delay*/3 * delayKey);
        }

        if (window.location.href.includes('facebook')) {
            //Generating GPT-3 code.. Please wait up to 20 seconds//Generated Script id=0
            var spans = document.getElementsByTagName('span');
            for (var kk = 0; kk < spans.length; kk++) {
                if (spans[kk].innerText && (spans[kk].innerText.includes('Write something') || spans[kk].innerText.includes('your mind'))) {
                    spans[kk].click();

                }
            }


            setTimeout(function () {

                simulateKey(msg.data.post + " " + promo)

                simulateKey(" ." )


            }, 5000);




            //Generating GPT-3 code.. Please wait up to 20 seconds//Generated Script id=0


            setTimeout(function () {


                var divs = document.getElementsByTagName('div');
                for (var kk = 0; kk < divs.length; kk++) {
                    if (divs[kk].getAttribute('aria-label') && divs[kk].getAttribute('aria-label').indexOf('Post') >= 0) {
                        divs[kk].click();
                    }
                }
            }, 9000);
            //endcode GPT Prompt: collect all the span on the page with inner text that includes Add Photos/Videos and click them. 



            //endcode GPT Prompt: Collect all the div with an aria-label that includes Post and click them. 



            //endcode GPT Prompt: Collect all the span on the page with inner text that includes write and click it. 

        }

    } else if (msg.Tag == "blogbasic") {//whitelabelresultgotGoogleAPI //errorLog//scrollbottom
        //console.log(msg.data);


    } else if (msg.Tag == "runOnTab") {//whitelabelresultgotGoogleAPI //errorLog//scrollbottom
        var data = msg.data.data;
        if (msg.data.parameters.includes('innerText')) {
            var elements = document.getElementsByTagName(secondary);
            for (var i = 0; i < elements.length; i++) {
                if (elements[i].innerText.includes(msg.data.parameters.split(':')[1])) {
                    //  elements[i].click();
                    runOnTab(element.href, '')
                }
            }


        } else {
            var elements = document.getElementsByTagName(secondary);
            for (var i = 0; i < elements.length; i++) {
                if (elements[i].getAttribute(msg.data.parameters.split(':')[0]).includes(msg.data.parameters.split(':')[1])) {
                    //  elements[i].click();
                    runOnTab(element.href, '')

                }
            }

        }

    } else if (msg.Tag == "navigateSearch") {//whitelabelresultgotGoogleAPI //errorLog//scrollbottom runOnTab fillform

        //Generating GPT-3 code.. Please wait up to 20 seconds//Generated Script id=0
        var inputs = document.getElementsByTagName('input');
        //console.log(inputs);
        //endcode GPT Prompt: collect all the input on the page and print them. 
        //Generating GPT-3 code.. Please wait up to 20 seconds//Generated Script id=1
        var inputs = document.getElementsByTagName('input');
        for (var kk = 0; kk < inputs.length; kk++) {
            if (inputs[kk].type == "text" && !inputs[kk].className.includes('cheatlayer')) {
                //console.log(inputs[kk]);
                inputs[kk].click();

                inputs[kk].dispatchEvent(new Event('focus'));
                inputs[kk].focus();
                simulateKey(msg.data.parameters[0]);
                setTimeout(function () {

                    var inputs = document.getElementsByTagName('input');
                    for (var kk = 0; kk < inputs.length; kk++) {
                        if (inputs[kk].type == "text" && !inputs[kk].className.includes('cheatlayer')) {
                            inputs[kk].form.submit();
                        }
                    }

                }, 5000)

            }
        }
        //endcode GPT Prompt: collect all the input on the page and loop through them and print them. 
        //Generated Script id=0



    } else if (msg.Tag == "navigateClick") {//whitelabelresultgotGoogleAPI //errorLog//scrollbottomnavigateSearch
        //console.log(msg.data);
        var data = msg.data.data;
        if (msg.data.parameters.includes('innerText')) {
            var elements = document.getElementsByTagName(secondary);
            for (var i = 0; i < elements.length; i++) {
                if (elements[i].innerText.includes(msg.data.parameters.split(':')[1])) {
                    elements[i].click();
                }
            }


        } else {
            var elements = document.getElementsByTagName(secondary);
            for (var i = 0; i < elements.length; i++) {
                if (elements[i].getAttribute(msg.data.parameters.split(':')[0]).includes(msg.data.parameters.split(':')[1])) {
                    elements[i].click();

                }
            }

        }

    } else if (msg.Tag == "scrollbottom") {//whitelabelresultgotGoogleAPI //errorLog//scrollbottom
        //console.log('TRY SCROLL')
        window.scrollTo(0, document.body.scrollHeight);

    } else if (msg.Tag == "gotGoogleAPI") {//whitelabelresultgotGoogleAPI
        $("#googleSignIn").hide();

    } else if (msg.Tag == "scrapeBasic") {//whitelabelresult
        // //console.log("GET Emails!")
        scrapeBasic(msg.data.sheet_url, msg.data.sheet_name = "Sheet1", msg.data.options)
        //console.log(msg.data)
    } else if (msg.Tag == "errorLog") {//whitelabelresult
        //console.log(JSON.stringify(msg.data));
        //console.log(msg.data);
    } else if (msg.Tag == "rikuOutput") {//whitelabelresult
        (msg.data);
        var output = msg.data;

        //console.log("Riku Output");
        //console.log(msg.data);
        $('HTML').append(`<script>var _riku` + total_variables + ` =  "` + msg.data + `";</script>`);
        no_code_container[no_code_container.length - 1]["variables"] += `_riku` + total_variables + `,`;

        no_code_container[no_code_container.length - 1]["variables"] += `"` + msg.data + `",`;
        eval(`var _riku` + total_variables + ` =  "` + msg.data + `";`);
        total_variables++;
        
        riku.push(msg.data);

        // no_code_variables.push(`riku[` + riku.length +`]`);
        //riku.push(msg.data);

    } else if (msg.Tag == "gpt3Output") {//whitelabelresult
        var output = msg.data;

        //console.log("GPT Output");

        //console.log(msg.data);
        total_variables++;
        gpt.push(msg.data);
        $(".chat__main").append(`
        <div class="chat__bubble bubble__answer"  id="messageAnswer">
                    <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                    <div class="text__wrap">
                    <p><pre  style="margin: 0px; font-size: 16px; line-height: 18px; color: #3D2070;display: inline-block; white-space: pre-line;" class='answerCheats' disabled>GPT3 Output:` + msg.data + `</pre></p>
                    </div>
                </div>`);

        // no_code_variables.push(`riku[` + riku.length +`]`);
        //riku.push(msg.data);

    } else   if (msg.Tag == "chatOutputPartial") {//whitelabelresult
        //var output = msg.data;
        prompt_chain += lastInput;
        last_result = "chat"  ;
        var ms =  msg.data;


        
   


        $(".text__wrap:last").text(ms.split("undefined").join("").split("NaN").join(""));
        if(last_partial == ""){
                $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);
                $('.answerCheats').animate({ scrollTop: $('.answerCheats').prop('scrollHeight') }, 30);
        }
                last_partial = ms;
    
   // gpt.push(msg.data);
    
    // no_code_variables.push(`riku[` + riku.length +`]`);
    //riku.push(msg.data);

    project_atlas_output.push(msg.data);


  

        //console.log("Chat GPT Output");
    //    chat_log.push({"role": "assistant", "content": msg.data})

        //console.log(msg.data);
        total_variables++;
        if(msg.data.includes("<html")){
            document.body.innerHTML = '';
            document.body.innerHTML = msg.data.split("undefined").join("");
       //     downloadData(msg.data.split("[start HTML]")[1].split("[end HTML]")[0], "website.html");
 

        }
       
     
    
         

    } else  if (msg.Tag == "agentOutputPartial") {//whitelabelresult
        //var output = msg.data;
        launchAtlas();
        if(startAgent == false){
            
     
            $(".chat__main").append(`
            <div class="chat__bubble bubble__user"  id="messageUser">
            <div class="text__wrap">
                <p>Deploy new agent.</p>
            </div>
            <span></span>
        </div>
    `);
    
    var  messages = document.getElementById('messagesCheat');
    const chatWrapper = document.getElementById('chatWrapper');

    
            if (!messages.classList.contains('active')) {
                messages.classList.add('active');
                chatWrapper.classList.add('expanded');
                setTimeout(() => {
                    chatWrapper.style.transition = 'none';
                    }, 2000);
            }

        $(".chat__main").append(`
        <div class="chat__bubble bubble__answer"  id="messageAnswer">
                    <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                    <div class="text__wrap">
                    <p><pre  style="margin: 0px; font-size: 16px; line-height: 18px; color: #3D2070;display: inline-block; white-space: pre-line;" class='answerCheats' disabled>Generating a custom solution. Please wait up to 1 minute.</pre></p>
                    </div>
                </div>`);

                $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);
            startAgent = true;
        }

        last_result = "chat"  ;
        var ms =  msg.data;
   


        $(".answerCheats:last").text(ms.split("undefined").join(""));
    
                $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);
                $('.answerCheats').animate({ scrollTop: $('.answerCheats').prop('scrollHeight') }, 30);

    
   // gpt.push(msg.data);
    
    // no_code_variables.push(`riku[` + riku.length +`]`);
    //riku.push(msg.data);

    project_atlas_output.push(msg.data);


  

        //console.log("Chat GPT Output");
    //    chat_log.push({"role": "assistant", "content": msg.data})

        //console.log(msg.data);
        total_variables++;
        if(msg.data.includes("<html")){
            document.body.innerHTML = '';
            document.body.innerHTML = msg.data.split("undefined").join(""); 
        }
       
     
    
         

    } else  if (msg.Tag == "agentOutput") {
        var ms =  msg.data;
var tasks = JSON.parse(msg.data.results.split("[start tasks]")[1].split("[end tasks]")[0]);
        //console.log(tasks)
        for(var i = 0; i < tasks.length; i++){
            tasks[i].completed = false;
            tasks[i].tabid = -1;
            tasks[i].taskid = i;
            tasks[i].logs = "";
            tasks[i].data = {};
            tasks[i].preview = "";
        }

        var agentUrl = "https://cheatlayer.com";
        if(typeof msg.data.url != "undefined"){
            agentUrl = msg.data.url;
        }

        SendMessage("setupAgent","data", {tasks:tasks, url:agentUrl, goal: msg.data.goal, completed: false, tabid: -1, taskid:-1, logs: "", data:{}, context: ""});
        
        $(".chat__main").append(`
        <div class="chat__bubble bubble__answer"  id="messageAnswer">
                    <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                    <div class="text__wrap">
                    <p><pre  style="margin: 0px; font-size: 16px; line-height: 18px; color: #3D2070;display: inline-block; white-space: pre-line;" class='answerCheats' disabled>Agent submitted!Refreshing the page... </pre></p>
                    </div>
                </div>`);
                setTimeout(() => {
                    window.location.reload();
                }, 5000);

    }else if (msg.Tag == "chatOutput") {//whitelabelresult
        //var output = msg.data;
        prompt_chain += lastInput;
        last_result = "chat"  ;
        var ms =  msg.data;
        if(msg.data.includes("[start javascript]")){
            //console.log("RUNNING THE CODE")
            var code = msg.data.split("[start javascript]")[1].split("[end javascript]")[0];
            //console.log(code);
            eval(code);
            last_code = code;

        }


        var firebaseConfig = {
            apiKey: "AIzaSyApJsRNWHtr06MPLh2NJaLmW1fcG8W5XLk",
            authDomain: "cheat-layer.firebaseapp.com",
            projectId: "cheat-layer",
            databaseURL: "https://cheat-layer-default-rtdb.firebaseio.com",
            storageBucket: "cheat-layer.appspot.com",
            messagingSenderId: "964029954703",
            appId: "1:964029954703:web:836e0dec49ad6e60214efa",
            measurementId: "G-T21Y70F57D"
        };
          // Initialize Firebase
          const app = firebase.initializeApp(firebaseConfig);
        var context_aware_cheats = "";
        var starCountRef = firebase.database().ref('cheats');
        starCountRef.once('value', (snapshot) => {
          const data = snapshot.val();
          var codes_html = "";
          cloud_cheats = [];
           var counter = 0;
        snapshot.forEach((child) => {
        //console.log(child.val());
        var obj = child.val();
        if("tags" in obj){ 
        //console.log(obj.tags)
        //console.log(window.location.hostname.split(".")[0]);
        }
        if("tags" in obj && (obj.tags.includes(window.location.hostname.split(".")[0]) || obj.tags.includes("all"))){
            context_aware_cheats = context_aware_cheats + "<img src='https://" + window.location.hostname + "/favicon.ico'></img><a href='#' id='context" +counter + "' class='context' >" + obj.promptChain.split("You are a professional engineer who can generate website html. Only genreate robust and completely HTML using the latest modern libraries like tailwindcss. Do not explain the code, and only generating working HTML/CSS/JS.").join("")+ "</a><br><br>";
            counter++;
        }
        });
        $(document).on('click', '.context', function (event) {

            //console.log(event.target.innerText)
            genAtlas(event.target.innerText);

        });
        if(context_aware_cheats.length > 0){
        $(".chat__main").append(`
        <div class="chat__bubble bubble__answer"  id="messageAnswer">
                    <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                    <div class="text__wrap">
                        <p>Since we're on ` + window.location.hostname.split(".")[0]  + `, I recommend these automations: <br><br>` + context_aware_cheats + `</p>
                    </div>
                </div>`);

                $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);
                $('.answerCheats').animate({ scrollTop: $('.answerCheats').prop('scrollHeight') }, 30);
                    }
        });


                $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);

    
   // gpt.push(msg.data);
    
    // no_code_variables.push(`riku[` + riku.length +`]`);
    //riku.push(msg.data);

    project_atlas_output.push(msg.data);

   
    $(".chat__main").append(`
    <div class="chat__bubble bubble__answer"  id="messageAnswer">
                <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                <div class="text__wrap">
                <p><pre  style="margin: 0px; font-size: 16px; line-height: 18px; color: #3D2070;display: inline-block; white-space: pre-line;" class='answerCheats' disabled>Please wait up to 5 seconds for the custom solution to execute. If this automation worked, click "Submit New Cheat Code" to join our community and discover new automations and tools using simple language! Your submission will be published at cheatlayer.com/codes.html, and you'll instantly earn +1000 Cloud Tasks per month! In the future, we also plan to pay creators per run for publishing codes! </pre></p>
                </div>
            </div>`);
    if(!$('.buttons__controls').html().includes("submitChat")){
        $('.buttons__controls').append('<button class="submitChat">Submit New Cheat Code</button>');

        }
        if(!added_save){                
                        
            $('.buttons__controls').append('<button class="saveChat">Save Prompt</button><button class="savePrompt">Save Code</button><button class="stopChat">Stop</button>');
            $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);
            added_save = true;
           }
      
           $(document).on('click', '.submitChat', function () {
            $('.submitChat').remove();
            //create a modal to submit the cheat code that includes the Name, Description, Prompt Chain, and youtube video link 
    
            
            $('#modalCheat').remove();
            $('#modalForm').remove();
            $('#modalFormName').remove();
            $('#modalFormDescription').remove();
            $('#modalFormPromptChain').remove();
            $('#modalFormVideoLink').remove();
            $('#modalFormSubmit').remove();
            $('#modalFormCancel').remove();
    
            var modal = document.createElement('div');
            modal.className = 'modal';
            modal.id = 'modalCheat';
            modal.style.display = 'block';
            modal.style.position = 'fixed';
            modal.style.zIndex = '9999999';
            modal.style.left = '0';
            modal.style.top = '0';
            modal.style.width = '100%';
            modal.style.height = '100%';
            modal.style.overflow = 'auto';
            modal.style.backgroundColor = 'rgb(0,0,0)';
            modal.style.backgroundColor = 'rgba(0,0,0,0.4)';
            modal.style.paddingTop = '60px';
            document.body.appendChild(modal);
            //style the modal to look fancy
            
    
            var modalContent = document.createElement('div');
            modalContent.className = 'modal-content';
            modalContent.style.backgroundColor = '#fefefe';
    
            modalContent.style.margin = 'auto';
    
            modalContent.style.padding = '20px';
            modalContent.style.border = '1px solid #888';
            modalContent.style.width = '80%';
            modal.appendChild(modalContent);
    
            var span = document.createElement('span');
            span.className = 'close';
            span.innerHTML = '&times;';
            modalContent.appendChild(span);
    
            var modalHeader = document.createElement('h2');
            modalHeader.innerHTML = 'Submit Cheat Code';
            modalContent.appendChild(modalHeader);
    
            var modalDescription = document.createElement('p');
            modalDescription.innerHTML = 'Please fill out the form below to submit your cheat code. We will review it and add it to the cheat code database if it is approved.';
            modalContent.appendChild(modalDescription);
    
            var modalForm = document.createElement('div');
            modalForm.id = 'modalForm';
            modalContent.appendChild(modalForm);
    
            var modalFormName = document.createElement('input');
            modalFormName.type = 'text';
            modalFormName.id = 'modalFormName';
            modalFormName.placeholder = 'User Name or Company Name';
            modalForm.appendChild(modalFormName);
    
            var modalFormTags = document.createElement('input');
            modalFormTags.type = 'text';
            modalFormTags.value = window.location.hostname  + ",";
            modalFormTags.id = 'modalFormTags';
            modalFormTags.placeholder = 'Descriptive Tags (comma or space separated)';
            modalForm.appendChild(modalFormTags);
    
    
            var modalFormSite = document.createElement('input');
            modalFormSite.type = 'text';
            modalFormSite.value = window.location.href;
            modalFormSite.id = 'modalFormSite';
            modalFormSite.placeholder = 'Website URL';
            modalForm.appendChild(modalFormSite);
    
            var modalFormDescription = document.createElement('input');
    
            modalFormDescription.type = 'text';
            modalFormDescription.id = 'modalFormDescription';
            modalFormDescription.placeholder = 'Short Description(1 sentence)';
            modalForm.appendChild(modalFormDescription);
    
            var modalFormPromptChain = document.createElement('input');
            modalFormPromptChain.type = 'text';
            modalFormPromptChain.id = 'modalFormPromptChain';
            modalFormPromptChain.placeholder = 'Prompt Chain';
            modalFormPromptChain.value = lastInput.split("website context:")[0].split("");
            modalForm.appendChild(modalFormPromptChain);
    
            var modalFormVideoLink = document.createElement('input');
            modalFormVideoLink.type = 'text';
            modalFormVideoLink.id = 'modalFormVideoLink';
            modalFormVideoLink.placeholder = 'Youtube/Loom Video Link(please only use Youtube or Loom)';
            modalForm.appendChild(modalFormVideoLink);
    
            
            var modalFormBusinessLink = document.createElement('input');
            modalFormBusinessLink.type = 'text';
            modalFormBusinessLink.id = 'modalFormBusinessLink';
            modalFormBusinessLink.placeholder = 'Business URL or Linkedin Profile';
            modalForm.appendChild(modalFormBusinessLink);
    
    
            var modalFormSubmit = document.createElement('button');
            modalFormSubmit.id = 'modalFormSubmit';
            modalFormSubmit.value = 'Submit';
            modalFormSubmit.style.width = '100%';
            modalFormSubmit.style.padding = '14px 20px';
            modalFormSubmit.style.margin = '8px 0';
            modalFormSubmit.style.display = 'inline-block';
            modalFormSubmit.style.border = 'none';
            modalFormSubmit.style.fontColor = 'white';
            modalFormSubmit.style.backgroundColor = '#4CAF50';
            modalFormSubmit.className = "submitChat";
            
            modalFormSubmit.textContent = "Submit";
            modalForm.appendChild(modalFormSubmit);
    
            var modalFormCancel = document.createElement('input');
    
            modalFormCancel.type = 'button';
            modalFormCancel.id = 'modalFormCancel';
            modalFormCancel.value = 'Cancel';
            modalForm.appendChild(modalFormCancel);
            //MAKE ALL THE FORM INPUTS REQUIRED
            modalFormName.required = true;
            modalFormDescription.required = true;
            modalFormPromptChain.required = true;
            modalFormVideoLink.required = true;
    
           
    
            $(document).on('click', '#modalFormCancel', function () {
                $('#modalCheat').remove();
    
            });
    
            modalFormSubmit.onclick = function () {
    
                var name = document.getElementById('modalFormName').value;
                var description = document.getElementById('modalFormDescription').value;
                var promptChain = document.getElementById('modalFormPromptChain').value;
                var tags = document.getElementById('modalFormTags').value;
                var site = document.getElementById('modalFormSite').value;
                var videoLink = document.getElementById('modalFormVideoLink').value;
                
                var businessLink = $('#modalFormBusinessLink').val();
                
                //console.log(name);
                //console.log(description);
                //console.log(promptChain);
                //console.log(videoLink);
    
                if(name == "" || description == "" || promptChain == "" || videoLink == ""){
                    alert("Please fill out all the fields");
                    document.getElementById('modalCheat').style.display = 'none';
    
                    return;
                }
    
    
                var data = {
                    name: name,
                    description: description,
                    promptChain: promptChain,
                    videoLink: videoLink,
                    email: user_email,
                    businessLink: businessLink, 
                    tags: tags,
                    site: site,
                    comments: "",
                    views: 0,
                    votes: 0
    
                };
                document.getElementById('modalCheat').style.display = 'none';
                SendMessage("submitCheatCode", 'data',data)
    
            };
            $(document).on('click', '.submitChat', function () {
                $('#modalCheat').remove();
            });
    
            $(document).on('click', '.close', function () {
                $('#modalCheat').remove();
            });
    
           
    
    
        });
        //console.log("Chat GPT Output");
        chat_log.push({"role": "assistant", "content": msg.data})

        //console.log(msg.data);
        total_variables++;
        if(msg.data.includes("<html")){
            document.body.innerHTML = '';
            document.body.innerHTML = msg.data;
            downloadData(msg.data.split("undefined").join(""), "website.html");
 

        }
         

         if(msg.data.includes("[start context]")){
            
            var context = msg.data.split("[start context]")[1].split("[end context]")[0];
            //console.log(context)
            context = JSON.parse(context);
            var website = context.website;
            var question = context.question;
            sendAjax(website,{},"GET",`//console.log(data)
            
            var doc = new DOMParser().parseFromString(data, "text/xml");
//console.log(doc);
document.body.innerHTML = data;
//console.log(document.body.innerText);

lastInput += " using this website text to answer:" + document.body.innerText.substring(0,7500).split("\\n").join(" ").split('"').join('').split("[start context]").join("").split("[end context]").join("");
//console.log("FAQ")
//console.log(lastInput)
chat_log.push({"role": "user", "content": lastInput})
//console.log(lastInput);

var currentTab_id = 0;

//console.log(currentTab_id)
//console.log(chat_log)
//console.log("genChatGPT5")
SendMessage("genChatGPT", "data", {tab: currentTab_id, chat_log: chat_log, url: window.location.href, lastInput: lastInput, mode: "regular generator"});


            `, {})
            
            
        }
        
        


         

    } else if (msg.Tag == "loginError") {

        if(loginError == false){
        var code =
        runOnTab("https://cheatlayer.com/signin",`
        //Generated Script id=0
    var delayKey = 1000;
    setTimeout(function(){
    
    var elements = document.getElementsByTagName('BUTTON');
    function slow(kk){
     if(typeof elements[kk] != 'undefined' && elements[kk].innerText && elements[kk].innerText.indexOf("Login") >= 0){
            elements[kk].click();
            if(kk < elements.length){
                setTimeout(function(){slow(kk+1)},10000);
            }
        }else{
            if(kk < elements.length){
                setTimeout(function(){slow(kk+1)},1);
            }
        }
    }
    slow(0);
    },/*delay*/0*delayKey);
    
//endcode
        `, 1, {newWindow: true, id:-1, minimized: true})
setTimeout(function(){
        SendMessage("getPrompts", "target", {  });
        setTimeout(function(){

        genAtlas(lastInput)
    },2000);

},2000);
        loginError= true;
}else{

    
         
    $(".chat__main").append(`
    <div class="chat__bubble bubble__answer"  id="messageAnswer">
                <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                <div class="text__wrap">
                <p><pre  style="margin: 0px; font-size: 16px; line-height: 18px; color: #3D2070;display: inline-block; white-space: pre-line;" class='answerCheats' disabled>Authentication or connection error! Please log in or sign up at Cheatlayer.com first, then re-open the extension. Please contact the live chat or support@cheatlayer.com if you need further help. </pre></p>
                </div>
            </div>`);
    
}
     //   runOnTab("https://www.cheatlayer.com/signin","",3000);
        
        
    }else if (msg.Tag == "atlasOutput") {//whitelabelresult
        var output = msg.data;
launchAtlas();
        //console.log("Atlas Output");
        atlas_output += "setTimeout(function(){genAtlas('" + lastInput + "')}," + (atlas_output.split("gen").length - 1) + "*10000);\n";
        if(output.includes("I support") && false){

            
            $(".chat__main").append(`
            <div class="chat__bubble bubble__answer"  id="messageAnswer">
						<span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
						<div class="text__wrap">
                        <p><pre  style="margin: 0px; font-size: 16px; line-height: 18px; color: #3D2070;display: inline-block; white-space: pre-line;" class='answerCheats' disabled>` + output + `</pre></p>
						</div>
					</div>`);

        }
        //console.log(msg.data);
        if(msg.data.includes("not supported")  || msg.data.includes("This is not a valid input") || msg.data.includes("I support")){
//https://sharding.vercel.app/
            //console.log(user_plan)

            


            var firebaseConfig = {
                apiKey: "AIzaSyApJsRNWHtr06MPLh2NJaLmW1fcG8W5XLk",
                authDomain: "cheat-layer.firebaseapp.com",
                projectId: "cheat-layer",
                databaseURL: "https://cheat-layer-default-rtdb.firebaseio.com",
                storageBucket: "cheat-layer.appspot.com",
                messagingSenderId: "964029954703",
                appId: "1:964029954703:web:836e0dec49ad6e60214efa",
                measurementId: "G-T21Y70F57D"
            };
              // Initialize Firebase
              const app = firebase.initializeApp(firebaseConfig);
            var context_aware_cheats = "";
            var starCountRef = firebase.database().ref('cheats');
            starCountRef.once('value', (snapshot) => {
              const data = snapshot.val();
              var codes_html = "";
              cloud_cheats = [];
               var counter = 0;
            snapshot.forEach((child) => {
            //console.log(child.val());
            var obj = child.val();
            if("tags" in obj){ 
            //console.log(obj.tags)
            //console.log(window.location.hostname.split(".")[0]);
            }
            if("tags" in obj && (obj.tags.includes(window.location.hostname.split(".")[0]) || obj.tags.includes("all"))){
                context_aware_cheats = context_aware_cheats + "<img src='https://" + window.location.hostname + "/favicon.ico'></img><a href='#' id='context" +counter + "' class='context' >" + obj.promptChain+ "</a><br><br>";
                counter++;
            }
            });
            $(document).on('click', '.context', function (event) {

                //console.log(event.target.innerText)
                genAtlas(event.target.innerText);

            });
            if(context_aware_cheats.length > 0){
            $(".chat__main").append(`
            <div class="chat__bubble bubble__answer"  id="messageAnswer">
                        <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                        <div class="text__wrap">
                            <p>Since we're on ` + window.location.hostname.split(".")[0]  + `, I recommend these automations: <br><br>` + context_aware_cheats + `</p>
                        </div>
                    </div>`);

                    $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);
                    $('.answerCheats').animate({ scrollTop: $('.answerCheats').prop('scrollHeight') }, 30);
                        }
            });


            if(true){
       
            
                $(".chat__main").append(`
            <div class="chat__bubble bubble__answer"  id="messageAnswer">
						<span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
						<div class="text__wrap">
                        <p><pre  style="margin: 0px; font-size: 16px; line-height: 18px; color: #3D2070;display: inline-block; white-space: pre-line;" class='answerCheats' disabled>Generating a custom solution. Please wait up to 1 minute.</pre></p>
						</div>
					</div>`);

                    $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);

                    if(window.location.href.includes(".pdf")){
                        var pdf = window.location.href;

                        function gettext(pdfUrl){
                            var pdf = pdfjsLib.getDocument(pdfUrl);
                            //console.log(pdf);
                            return pdf.promise.then(function(pdf) { // get all pages text
                              //console.log(pdf)
                              var maxPages = pdf._pdfInfo.numPages;
                              var countPromises = []; // collecting all page promises
                              for (var j = 1; j <= maxPages; j++) {
                                var page = pdf.getPage(j);
                          
                                var txt = "";
                                countPromises.push(page.then(function(page) { // add page promise
                                  var textContent = page.getTextContent();
                                  return textContent.then(function(text){ // return content promise
                                    return text.items.map(function (s) { return s.str; }).join(''); // value page text 
                                  });
                                }));
                              }
                              // Wait for all pages and join text
                              return Promise.all(countPromises).then(function (texts) {
                                return texts.join('');
                              });
                            });
                          }
                              pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.15.349/build/pdf.worker.js';
                           
                          // waiting on gettext to finish completion, or error
                          gettext(window.location.href).then(function (text) {
                            //console.log('parse ' + text); 
                            window.pdf = text; 
                            lastInput = "Question:" + lastInput + "\nPDF article text:" + text.substring(0,6000).split("\n").join(" ").split('"').join('') + "###\n";
                            //console.log("FAQ")
                            //console.log(lastInput)
                            if(new RegExp("([a-zA-Z0-9]+://)?([a-zA-Z0-9_]+:[a-zA-Z0-9_]+@)?([a-zA-Z0-9.-]+\\.[A-Za-z]{2,4})(:[0-9]+)?(/.*)?").test(lastInput)){

                        }
                        if(lastInput.toLowerCase().includes('current page') || lastInput.toLowerCase().includes('current site') || lastInput.toLowerCase().includes('this page') || lastInput.toLowerCase().includes('this website') || lastInput.toLowerCase().includes('current website')){
                            lastInput += "\n website text:" + document.body.innerText.substring(0,6000).split("\n").join(" ").split('"').join('');
                            //console.log("FAQ")
                            //console.log(lastInput)
                        }
                            chat_log.push({"role": "user", "content": lastInput})
                        //console.log(lastInput);
            
                                 //     drawNoCodeContainer();
            
                                // drawNoCodeContainer();
                                if(!added_save){                
                                    
                                    $('.buttons__controls').append('<button class="saveChat">Save Prompt</button><button class="savePrompt">Save Code</button><button class="stopChat">Stop</button>');
                                    $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);
                                 added_save = true;
                                }
            
                                 $(document).on('click', '.stopChat', function () {
                                    $('.stopChat').remove();
                                    SendMessage("stopAtlas", "data", {});
                                    window.location.reload();
                                 });
                                 $(document).on('click', '.savePrompt', function () {
                                    $('.saveChat').remove();
                                    $('.savePrompt').remove();

                                    if(!window.location.href.includes("spreadsheets")){
            
                                        SendMessage("show_cheatlayer", "data", "");
                                        setTimeout(function(){
                                            if(atlas_output.includes("genAtlas"))
                                            {
                                            window.editor.setValue(old_code +  "\n//Generated Script id="  + code_ids  + "\n"+ last_code + "\n//endcode\n");
                                            var no_code_code = `  Start Code
                                            Endpoint : Project Atlas<br> 
                                            Prompt:<br>
                                            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PAPROMPTKEY'  value='` + lastInput + `'></input><br>
                                            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                                            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                                            End Code`;
                                no_code_container.push({ selector: "", options: [], code_ids: code_ids, variablenames: [], variables: "", style: "projectatlas", id: code_ids, no_code:no_code_code });
                                code_ids++;
                                    saveScript();
                                    atlas_output = "";
                                            }
                                        }, 500);
                                    }                        
                                 });
                                 $(document).on('click', '.saveChat', function () {
                                    $('.saveChat').remove();
                                    $('.savePrompt').remove();
                                    if(!window.location.href.includes("spreadsheets")){
            
                                        SendMessage("show_cheatlayer", "data", "");
                                        setTimeout(function(){
                                            if(atlas_output.includes("genAtlas"))
                                            {
                                            window.editor.setValue(old_code +  "\n//Generated Script id="  + code_ids  + "\n"+ atlas_output + "\n//endcode\n");
                                            var no_code_code = `  Start Code
                                            Endpoint : Project Atlas<br> 
                                            Prompt:<br>
                                            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PAPROMPTKEY'  value='` + lastInput + `'></input><br>
                                            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                                            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                                            End Code`;
                                no_code_container.push({ selector: "", options: [], code_ids: code_ids, variablenames: [], variables: "", style: "projectatlas", id: code_ids, no_code:no_code_code });
                                code_ids++;
                                    saveScript();
                                    atlas_output = "";
                                            }
                                        }, 500);
                                    }                        
                                 });
                                 
                                 var currentTab_id = 0;
                        
                                 //console.log(currentTab_id)
                                 //console.log(chat_log)
                                 //console.log("genChatGPT6")
                        SendMessage("genChatGPT", "data",  {tab: currentTab_id, chat_log: chat_log, url: window.location.href, lastInput: lastInput, mode: "automation generator"});

                          }, 
                          function (reason) {
                            console.error(reason);
                          });


                    }else{
                        
                        if(lastInput.toLowerCase().includes('current page') || lastInput.toLowerCase().includes('current site') || lastInput.toLowerCase().includes('this page') || lastInput.toLowerCase().includes('this website') || lastInput.toLowerCase().includes('current website')){
                            lastInput += "\n website text:" + document.body.innerText.substring(0,6000).split("\n").join(" ").split('"').join('');
                            //console.log("FAQ")
                            //console.log(lastInput)
                        }
                var all = document.getElementsByTagName("*");
                        //console.log(all)
                    HtmlSanitizer.AllowedTags['CODE'] = false;
                        HtmlSanitizer.AllowedTags['MAIN'] = true;
                        HtmlSanitizer.AllowedTags['IMG'] = false;

                 html = HtmlSanitizer.SanitizeHtml(document.documentElement.innerHTML);
                 var htmlObject = document.createElement('div');
                 htmlObject.innerHTML = html;

                 var newElems = document.getElementsByTagName("*");


                 for (var i=0, max=newElems.length; i < max; i++) {
                      // Do something with the element here
                      if(typeof newElems[i] != "undefined" && typeof newElems[i].innerText != "undefined" && newElems[i].innerText.replace(/\s/g, "").replace(/\r?\n|\r/g, " ").replace((/  |\r\n|\n|\r/gm),"").replace(/\s/g,'').length <= 2){
                     //   newElems[i].remove();
                      }
                 }


                var html_formatted_string = "";

                for(var kk = 0; kk < newElems.length; kk++){
                    if(typeof newElems[kk].className == "string" && newElems[kk].nodeName != "SCRIPT" && newElems[kk].nodeName != "META" && newElems[kk].nodeName!= "STYLE" && (newElems[kk].className.length > 2 || newElems[kk].id.length > 2)){
                        //console.log(newElems[kk].className)
                        html_formatted_string += newElems[kk].nodeName + ";" + newElems[kk].className.substring(0,20) + ";" + newElems[kk].id + ";" + newElems[kk].innerText.replace(/\s/g, "").replace(/\r?\n|\r/g, " ").replace((/  |\r\n|\n|\r/gm),"").replace(/\s/g,'').substring(0,25) + "\n";
                        }
                    if(typeof newElems[kk].innerText != "undefined" && newElems[kk].innerText.replace(/\s/g, "").replace(/\r?\n|\r/g, " ").replace((/  |\r\n|\n|\r/gm),"").replace(/\s/g,'').substring(0,100).length > 2 && newElems[kk].innerText.replace(/\s/g, "").replace(/\r?\n|\r/g, " ").replace((/  |\r\n|\n|\r/gm),"").replace(/\s/g,'').substring(0,25)  != "Facebook" && newElems[kk].innerText.replace(/\s/g, "").replace(/\r?\n|\r/g, " ").replace((/  |\r\n|\n|\r/gm),"").replace(/\s/g,'').substring(0,25)  != "Seemore" && newElems[kk].innerText.replace(/\s/g, "").replace(/\r?\n|\r/g, " ").replace((/  |\r\n|\n|\r/gm),"").replace(/\s/g,'').substring(0,25)  != "Marketplace" && newElems[kk].innerText.replace(/\s/g, "").replace(/\r?\n|\r/g, " ").replace((/  |\r\n|\n|\r/gm),"").replace(/\s/g,'').substring(0,25)  != "Groups"){
                }
            }
            var selector_context = "";

                for(var kk = 0; kk < context_array.length; kk++){
                    for(var jj = 0; jj < context_array[kk].keywords.length; jj++){
                        if(window.location.href.toLowerCase().includes(context_array[kk].keywords[jj].toLowerCase())){

                            selector_context = context_array[kk].context;

                        }
                    }
                }
                
                console.log(context_array)
                console.log(window.location.href)
                console.log("selector context3:" + selector_context)

                lastInput += "\nselector context:" + selector_context;

                lastInput += "\nwebsite HTML:" + html.substring(0,6000).split("\n").join(" ").split('"').join('');

            

        
            if(lastInput.toLowerCase().includes("fail") ||lastInput.toLowerCase().includes("didn't work") || lastInput.toLowerCase().includes("did not work") || lastInput.toLowerCase().includes("doesn't work") || lastInput.toLowerCase().includes("does not work") || lastInput.toLowerCase().includes("failed") || lastInput.toLowerCase().includes("not working") || lastInput.toLowerCase().includes("not work")){
                chat_log.pop();
                chat_log.pop();
            }

            if(new RegExp("([a-zA-Z0-9]+://)?([a-zA-Z0-9_]+:[a-zA-Z0-9_]+@)?([a-zA-Z0-9.-]+\\.[A-Za-z]{2,4})(:[0-9]+)?(/.*)?").test(lastInput)){

            }
         

                chat_log.push({"role": "user", "content": lastInput})
            //console.log(lastInput);

                     //     drawNoCodeContainer();

                    // drawNoCodeContainer();
                    if(!added_save){                
                        
                        $('.buttons__controls').append('<button class="saveChat">Save Prompt</button><button class="savePrompt">Save Code</button><button class="stopChat">Stop</button>');
                        $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);
                     added_save = true;
                    }

                     $(document).on('click', '.stopChat', function () {
                        $('.stopChat').remove();
                        SendMessage("stopAtlas", "data", {});
                        window.location.reload();
                     });
                     $(document).on('click', '.savePrompt', function () {
                        $('.saveChat').remove();
                        $('.savePrompt').remove();
            if(!window.location.href.includes("spreadsheets")){

                            SendMessage("show_cheatlayer", "data", "");
                            setTimeout(function(){
                                if(atlas_output.includes("genAtlas"))
                                {
                                window.editor.setValue(old_code +  "\n//Generated Script id="  + code_ids  + "\n"+ last_code + "\n//endcode\n");
                                var no_code_code = `  Start Code
                                Endpoint : Project Atlas<br> 
                                Prompt:<br>
                                <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PAPROMPTKEY'  value='` + lastInput + `'></input><br>
                                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                                End Code`;
                    no_code_container.push({ selector: "", options: [], code_ids: code_ids, variablenames: [], variables: "", style: "projectatlas", id: code_ids, no_code:no_code_code });
                    code_ids++;
                        saveScript();
                        atlas_output = "";
                                }
                            }, 500);
                        }                        
                     });
                     $(document).on('click', '.saveChat', function () {
                        $('.saveChat').remove();
                        $('.savePrompt').remove();
            if(!window.location.href.includes("spreadsheets")){

                            SendMessage("show_cheatlayer", "data", "");
                            setTimeout(function(){
                                if(atlas_output.includes("genAtlas"))
                                {
                                window.editor.setValue(old_code +  "\n//Generated Script id="  + code_ids  + "\n"+ atlas_output + "\n//endcode\n");
                                var no_code_code = `  Start Code
                                Endpoint : Project Atlas<br> 
                                Prompt:<br>
                                <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PAPROMPTKEY'  value='` + lastInput + `'></input><br>
                                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                                End Code`;
                    no_code_container.push({ selector: "", options: [], code_ids: code_ids, variablenames: [], variables: "", style: "projectatlas", id: code_ids, no_code:no_code_code });
                    code_ids++;
                        saveScript();
                        atlas_output = "";
                                }
                            }, 500);
                        }                        
                     });
                     
                     var currentTab_id = 0;
             
                     //console.log(chat_log)
                     //console.log("genChatGPT7")
                     //console.log(currentTab_id)
            SendMessage("genChatGPT", "data", {tab: currentTab_id, chat_log: chat_log, url: window.location.href, lastInput: lastInput, mode: "automation generator"});


                    }
        }else {

            var ms = "This request is not supported by Project Atlas yet. Upgrade on the billing page to enable chatGPT to generate custom automations, websites, and apps for you. Please upgrade on the billing page at cheatlayer.com/billing";
        


    $(".chat__main").append(`
    <div class="chat__bubble bubble__answer"  id="messageAnswer">
                <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                <div class="text__wrap">
                    <p>` + ms + `</p>
                </div>
            </div>`);



            
        }
        }else{
            if(msg.data.includes("You have run out of machine learning credits!")){
                

                
            $(".chat__main").append(`
            <div class="chat__bubble bubble__answer"  id="messageAnswer">
						<span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
						<div class="text__wrap">
							<p>You have run out of cheat cloud tasks! Please upgrade your account or wait till your tasks reset to continue using Project Atlas. Tasks reset monthly on the 1st.</p>
						</div>
					</div>`);




            }else{
                


                
            $(".chat__main").append(`
            <div class="chat__bubble bubble__answer"  id="messageAnswer">
						<span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
						<div class="text__wrap">
							<p>Ok I've built it for you!</p>
						</div>
					</div>`);



                    var firebaseConfig = {
                        apiKey: "AIzaSyApJsRNWHtr06MPLh2NJaLmW1fcG8W5XLk",
                        authDomain: "cheat-layer.firebaseapp.com",
                        projectId: "cheat-layer",
                        databaseURL: "https://cheat-layer-default-rtdb.firebaseio.com",
                        storageBucket: "cheat-layer.appspot.com",
                        messagingSenderId: "964029954703",
                        appId: "1:964029954703:web:836e0dec49ad6e60214efa",
                        measurementId: "G-T21Y70F57D"
                    };
                      // Initialize Firebase
                      const app = firebase.initializeApp(firebaseConfig);
                    var context_aware_cheats = "";
                    var starCountRef = firebase.database().ref('cheats');
                    starCountRef.on('value', (snapshot) => {
                      const data = snapshot.val();
                      var codes_html = "";
                      cloud_cheats = [];
                       var counter = 0;
                    snapshot.forEach((child) => {
                    //console.log(child.val());
                    var obj = child.val();
                    if("tags" in obj){ 
                    //console.log(obj.tags)
                    //console.log(window.location.hostname.split(".")[0]);
                    }
                    if("tags" in obj && (obj.tags.includes(window.location.hostname.split(".")[0]) || obj.tags.includes("all"))){
                        context_aware_cheats = context_aware_cheats + "<img src='https://" + window.location.hostname + "/favicon.ico'></img><a href='#' id='context" +counter + "' class='context' >" + obj.promptChain+ "</a><br><br>";
                        counter++;
                    }
                    });
                    $(document).on('click', '.context', function (event) {
        
                        //console.log(event.target.innerText)
                        genAtlas(event.target.innerText);
        
                    });
                    if(context_aware_cheats.length > 0){
             
                            $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);
                            $('.answerCheats').animate({ scrollTop: $('.answerCheats').prop('scrollHeight') }, 30);
                                }
                    });
                          
                if(!added_save){                
                        
                    $('.buttons__controls').append('<button class="saveChat">Save Prompt</button><button class="savePrompt">Save Code</button><button class="stopChat">Stop</button>');
                    $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);
                    added_save = true;
                   }


                $(document).on('click', '.stopChat', function () {
                    $('.stopChat').remove();
                    SendMessage("stopAtlas", "data", {});
                    window.location.reload();

                 });
                 $(document).on('click', '.savePrompt', function () {
                    $('.saveChat').remove();
                    $('.savePrompt').remove();
    if(!window.location.href.includes("spreadsheets")){

                        SendMessage("show_cheatlayer", "data", "");
                        setTimeout(function(){
                            if(atlas_output.includes("genAtlas"))
                            {
                            window.editor.setValue(old_code +  "\n//Generated Script id="  + code_ids  + "\n"+ last_code + "\n//endcode\n");
                            var no_code_code = `  Start Code
                            Endpoint : Project Atlas<br> 
                            Prompt:<br>
                            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PAPROMPTKEY'  value='` + lastInput + `'></input><br>
                            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                            End Code`;
                no_code_container.push({ selector: "", options: [], code_ids: code_ids, variablenames: [], variables: "", style: "projectatlas", id: code_ids, no_code:no_code_code });
                code_ids++;
                    saveScript();
                    atlas_output = "";
                            }
                        }, 500);
                    }                        
                 });
                 $(document).on('click', '.saveChat', function () {
                    $('.saveChat').remove();
                    $('.savePrompt').remove();
    if(!window.location.href.includes("spreadsheets")){

                        SendMessage("show_cheatlayer", "data", "");
                        setTimeout(function(){
                            if(atlas_output.includes("genAtlas"))
                            {
                                window.editor.setValue(old_code +  "\n//Generated Script id="  + code_ids  + "\n"+ atlas_output + "\n//endcode\n");
                            var no_code_code = `  Start Code
                            Endpoint : Project Atlas<br> 
                            Prompt:<br>
                            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PAPROMPTKEY'  value='` + lastInput + `'></input><br>
                            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                            End Code`;
                no_code_container.push({ selector: "", options: [], code_ids: code_ids, variablenames: [], variables: "", style: "projectatlas", id: code_ids, no_code:no_code_code });
                code_ids++;
                    saveScript();
                    atlas_output = "";
                            }
                        }, 500);
                    }
                    
                 });
            }






            var obj = JSON.parse(msg.data);
            //console.log(obj);
            text_output = msg.data;
            var inputs = [];
            //convert the following python to javascript
            for(var kk = 0; kk < obj["inputs"].length; kk++){
                 atlas_inputs.push(obj["inputs"][kk]);
            }

                //console.log(text_output);

            obj = JSON.parse(text_output);

            //console.log(obj)
          


            if(atlas_inputs.length > 0){

                if(atlas_inputs[0].includes("SHEET_URL") && window.location.href.includes("spreadsheets")){
                    
                        text_output = text_output.split(atlas_inputs[0]).join("\'" + window.location.href + "\'" );
                        //console.log(text_output)
                        atlas_inputs.shift();
                        //console.log("result")
                        //console.log(atlas_inputs)
                        var language = window.navigator.userLanguage || window.navigator.language;

                        if(language.includes("en")){
                        
                        
                            text_output = text_output.split(atlas_inputs[0]).join("\'Sheet1\'" );
                            //console.log(text_output)
                            atlas_inputs.shift();
                            //console.log("result")
                            //console.log(atlas_inputs)
                            if(atlas_inputs.length == 0){
                                //console.log('EVAL');
                                var atlas_obj = JSON.parse(text_output);
                                //console.log(atlas_obj);
                                //console.log(atlas_obj['nodes'])
                
                                for(var kk = 0; kk < atlas_obj['nodes'].length; kk++){
                                    var node = atlas_obj['nodes'][kk];
                                    //console.log(node);
                                    if(node['type'] == 'runOnCheatLayer'){
                                            SendMessage("processAtlas", "data", { script:node['script'] });
                                    }
                                }

                            }
                        }else{

                    var  messages = document.getElementById('messagesCheat');

                     var ms = "Please enter the following input:" + atlas_inputs[0]  ;
                 

                
                     $(".chat__main").append(`
                     <div class="chat__bubble bubble__answer"  id="messageAnswer">
                                 <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                                 <div class="text__wrap">
                                     <p>` + ms + `</p>
                                 </div>
                             </div>`);
         

                        }
    
    
                }else if(atlas_inputs[0].includes("SHEET_URL")){
                    runOnTab('https://sheets.new','',20000)
                    getTabs();
                    setTimeout(function(){
                        var final_sheet = "";
                    for(var kk = 0; kk < tabs.length; kk++){
    
                        //console.log(tabs[kk].url)
                        if(tabs[kk].url.includes("docs.google.com/spreadsheets/")){
                            final_sheet = tabs[kk].url;
    
                        }
                    }

                    text_output = text_output.split(atlas_inputs[0]).join("\'" + final_sheet + "\'" );
                    //console.log(text_output)
                    atlas_inputs.shift();
                    //console.log("result")
                    //console.log(atlas_inputs)
                    var language = window.navigator.userLanguage || window.navigator.language;


                        if(language.includes("en")){


                            text_output = text_output.split(atlas_inputs[0]).join("\'Sheet1\'" );
                            //console.log(text_output)
                            atlas_inputs.shift();
                            //console.log("result")
                            //console.log(atlas_inputs)
                            if(atlas_inputs.length == 0){
                                //console.log('EVAL');
                                var atlas_obj = JSON.parse(text_output);
                                //console.log(atlas_obj);
                                //console.log(atlas_obj['nodes'])
                
                                for(var kk = 0; kk < atlas_obj['nodes'].length; kk++){
                                    var node = atlas_obj['nodes'][kk];
                                    //console.log(node);
                                    if(node['type'] == 'runOnCheatLayer'){
                                            SendMessage("processAtlas", "data", { script:node['script'] });
                                    }
                                    }
                    
                            }

                        }else{

                  
                            var  messages = document.getElementById('messagesCheat');

                            var ms = "Please enter the following input:" + atlas_inputs[0]  ;
                        
       
                       
                            $(".chat__main").append(`
                            <div class="chat__bubble bubble__answer"  id="messageAnswer">
                                        <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                                        <div class="text__wrap">
                                            <p>` + ms + `</p>
                                        </div>
                                    </div>`);
                        }

                    }, 10000);
                    
                }else{
                    
                    var  messages = document.getElementById('messagesCheat');
    
                var ms =  "Please enter the following input:" + atlas_inputs[0]  ;
              


    $(".chat__main").append(`
    <div class="chat__bubble bubble__answer"  id="messageAnswer">
                <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                <div class="text__wrap">
                    <p>` + ms + `</p>
                </div>
            </div>`);

                }
    
            }

            if(atlas_inputs.length == 0){
                //console.log("RUNNING ATLAS")
                var atlas_obj = JSON.parse(text_output);
                //console.log(atlas_obj);
                //console.log(atlas_obj['nodes'])

                for(var kk = 0; kk < atlas_obj['nodes'].length; kk++){
                    var node = atlas_obj['nodes'][kk];
                    //console.log(node);

                    //node['script'] 

                     //     drawNoCodeContainer();
        
             
             
        //drawNoCodeContainer();


                    if(node['type'] == 'runOnCheatLayer'){
                            SendMessage("processAtlas", "data", { script:node['script'] });
                    }
                    if( "schedule" in obj){
                        var schedule = obj["schedule"];
                        //console.log(node["script"])
                        SendMessage("setSchedule", "data", {cron: schedule, script: node["script"]});
        
                    }
                }

            }


        }
    
            
            
    $(document).on('click', '.submitChat', function () {
        $('.submitChat').remove();
        //create a modal to submit the cheat code that includes the Name, Description, Prompt Chain, and youtube video link 

        
        $('#modalCheat').remove();
        $('#modalForm').remove();
        $('#modalFormName').remove();
        $('#modalFormDescription').remove();
        $('#modalFormPromptChain').remove();
        $('#modalFormVideoLink').remove();
        $('#modalFormSubmit').remove();
        $('#modalFormCancel').remove();

        var modal = document.createElement('div');
        modal.className = 'modal';
        modal.id = 'modalCheat';
        modal.style.display = 'block';
        modal.style.position = 'fixed';
        modal.style.zIndex = '9999999';
        modal.style.left = '0';
        modal.style.top = '0';
        modal.style.width = '100%';
        modal.style.height = '100%';
        modal.style.overflow = 'auto';
        modal.style.backgroundColor = 'rgb(0,0,0)';
        modal.style.backgroundColor = 'rgba(0,0,0,0.4)';
        modal.style.paddingTop = '60px';
        document.body.appendChild(modal);
        //style the modal to look fancy
        

        var modalContent = document.createElement('div');
        modalContent.className = 'modal-content';
        modalContent.style.backgroundColor = '#fefefe';

        modalContent.style.margin = 'auto';

        modalContent.style.padding = '20px';
        modalContent.style.border = '1px solid #888';
        modalContent.style.width = '80%';
        modal.appendChild(modalContent);

        var span = document.createElement('span');
        span.className = 'close';
        span.innerHTML = '&times;';
        modalContent.appendChild(span);

        var modalHeader = document.createElement('h2');
        modalHeader.innerHTML = 'Submit Cheat Code';
        modalContent.appendChild(modalHeader);

        var modalDescription = document.createElement('p');
        modalDescription.innerHTML = 'Please fill out the form below to submit your cheat code. We will review it and add it to the cheat code database if it is approved.';
        modalContent.appendChild(modalDescription);

        var modalForm = document.createElement('div');
        modalForm.id = 'modalForm';
        modalContent.appendChild(modalForm);

        var modalFormName = document.createElement('input');
        modalFormName.type = 'text';
        modalFormName.id = 'modalFormName';
        modalFormName.placeholder = 'User Name or Company Name';
        modalForm.appendChild(modalFormName);

        var modalFormTags = document.createElement('input');
        modalFormTags.type = 'text';
        modalFormTags.value = window.location.hostname  + ",";
        modalFormTags.id = 'modalFormTags';
        modalFormTags.placeholder = 'Descriptive Tags (comma or space separated)';
        modalForm.appendChild(modalFormTags);


        var modalFormSite = document.createElement('input');
        modalFormSite.type = 'text';
        modalFormSite.value = window.location.href;
        modalFormSite.id = 'modalFormSite';
        modalFormSite.placeholder = 'Website URL';
        modalForm.appendChild(modalFormSite);

        var modalFormDescription = document.createElement('input');

        modalFormDescription.type = 'text';
        modalFormDescription.id = 'modalFormDescription';
        modalFormDescription.placeholder = 'Short Description(1 sentence)';
        modalForm.appendChild(modalFormDescription);

        var modalFormPromptChain = document.createElement('input');
        modalFormPromptChain.type = 'text';
        modalFormPromptChain.id = 'modalFormPromptChain';
        modalFormPromptChain.placeholder = 'Prompt Chain';
        modalFormPromptChain.value = lastInput;
        modalForm.appendChild(modalFormPromptChain);

        var modalFormVideoLink = document.createElement('input');
        modalFormVideoLink.type = 'text';
        modalFormVideoLink.id = 'modalFormVideoLink';
        modalFormVideoLink.placeholder = 'Youtube/Loom Video Link(please only use Youtube or Loom)';
        modalForm.appendChild(modalFormVideoLink);

        
        var modalFormBusinessLink = document.createElement('input');
        modalFormBusinessLink.type = 'text';
        modalFormBusinessLink.id = 'modalFormBusinessLink';
        modalFormBusinessLink.placeholder = 'Business URL or Linkedin Profile';
        modalForm.appendChild(modalFormBusinessLink);


        var modalFormSubmit = document.createElement('button');
        modalFormSubmit.id = 'modalFormSubmit';
        modalFormSubmit.value = 'Submit';
        modalFormSubmit.style.width = '100%';
        modalFormSubmit.style.padding = '14px 20px';
        modalFormSubmit.style.margin = '8px 0';
        modalFormSubmit.style.display = 'inline-block';
        modalFormSubmit.style.border = 'none';
        modalFormSubmit.style.fontColor = 'white';
        modalFormSubmit.style.backgroundColor = '#4CAF50';
        modalFormSubmit.className = "submitChat";
        
        modalFormSubmit.textContent = "Submit";
        modalForm.appendChild(modalFormSubmit);

        var modalFormCancel = document.createElement('input');

        modalFormCancel.type = 'button';
        modalFormCancel.id = 'modalFormCancel';
        modalFormCancel.value = 'Cancel';
        modalForm.appendChild(modalFormCancel);
        //MAKE ALL THE FORM INPUTS REQUIRED
        modalFormName.required = true;
        modalFormDescription.required = true;
        modalFormPromptChain.required = true;
        modalFormVideoLink.required = true;

       

        $(document).on('click', '#modalFormCancel', function () {
            $('#modalCheat').remove();

        });

        modalFormSubmit.onclick = function () {

            var name = document.getElementById('modalFormName').value;
            var description = document.getElementById('modalFormDescription').value;
            var promptChain = document.getElementById('modalFormPromptChain').value;
            var tags = document.getElementById('modalFormTags').value;
            var site = document.getElementById('modalFormSite').value;
            var videoLink = document.getElementById('modalFormVideoLink').value;
            
            var businessLink = $('#modalFormBusinessLink').val();
            
            //console.log(name);
            //console.log(description);
            //console.log(promptChain);
            //console.log(videoLink);

            if(name == "" || description == "" || promptChain == "" || videoLink == ""){
                alert("Please fill out all the fields");
                document.getElementById('modalCheat').style.display = 'none';

                return;
            }


            var data = {
                name: name,
                description: description,
                promptChain: promptChain,
                videoLink: videoLink,
                email: user_email,
                businessLink: businessLink, 
                tags: tags,
                site: site,
                comments: "",
                views: 0,
                votes: 0

            };
            document.getElementById('modalCheat').style.display = 'none';
            SendMessage("submitCheatCode", 'data',data)

        };
        $(document).on('click', '.submitChat', function () {
            $('#modalCheat').remove();
        });

        $(document).on('click', '.close', function () {
            $('#modalCheat').remove();
        });

       


    });
    } else  if (msg.Tag == "useChat") {//whitelabelresult
        var output = msg.data;
       // //console.log("Atlas Output");
      //  atlas_output += "setTimeout(function(){genAtlas('" + lastInput + "')}," + (atlas_output.split("gen").length - 1) + "*10000);\n";

        ////console.log(msg.data);
        if(true){
//https://sharding.vercel.app/
            //console.log(user_plan)
            if(true){
           
                    if(window.location.href.includes(".pdf")){
                        var pdf = window.location.href;

                        function gettext(pdfUrl){
                            var pdf = pdfjsLib.getDocument(pdfUrl);
                            //console.log(pdf);
                            return pdf.promise.then(function(pdf) { // get all pages text
                              //console.log(pdf)
                              var maxPages = pdf._pdfInfo.numPages;
                              var countPromises = []; // collecting all page promises
                              for (var j = 1; j <= maxPages; j++) {
                                var page = pdf.getPage(j);
                          
                                var txt = "";
                                countPromises.push(page.then(function(page) { // add page promise
                                  var textContent = page.getTextContent();
                                  return textContent.then(function(text){ // return content promise
                                    return text.items.map(function (s) { return s.str; }).join(''); // value page text 
                                  });
                                }));
                              }
                              // Wait for all pages and join text
                              return Promise.all(countPromises).then(function (texts) {
                                return texts.join('');
                              });
                            });
                          }
                              pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdn.jsdelivr.net/npm/pdfjs-dist@2.15.349/build/pdf.worker.js';
                           
                          // waiting on gettext to finish completion, or error
                          gettext(window.location.href).then(function (text) {
                            //console.log('parse ' + text); 
                            window.pdf = text; 
                            lastInput = "Question:" + lastInput + "\nPDF article text:" + text.substring(0,6000).split("\n").join(" ").split('"').join('') + "###\n";
                            //console.log("FAQ")
                            //console.log(lastInput)
                            if(new RegExp("([a-zA-Z0-9]+://)?([a-zA-Z0-9_]+:[a-zA-Z0-9_]+@)?([a-zA-Z0-9.-]+\\.[A-Za-z]{2,4})(:[0-9]+)?(/.*)?").test(lastInput)){

                        }
                        if(lastInput.toLowerCase().includes('current page') || lastInput.toLowerCase().includes('current site') || lastInput.toLowerCase().includes('this page') || lastInput.toLowerCase().includes('this website') || lastInput.toLowerCase().includes('current website')){
                            lastInput += "\n website text:" + document.body.innerText.substring(0,6000).split("\n").join(" ").split('"').join('');
                            //console.log("FAQ")
                            //console.log(lastInput)
                        }
            
                            chat_log.push({"role": "user", "content": lastInput})
                        //console.log(lastInput);
            
                                 //     drawNoCodeContainer();
            
                                // drawNoCodeContainer();
                                if(!added_save){                
                                    
                                    $('.buttons__controls').append('<button class="saveChat">Save Prompt</button><button class="savePrompt">Save Code</button><button class="stopChat">Stop</button>');
                                    $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);
                                 added_save = true;
                                }
            
                                 $(document).on('click', '.stopChat', function () {
                                    $('.stopChat').remove();
                                    SendMessage("stopAtlas", "data", {});
                                    window.location.reload();
                                 });
                                 $(document).on('click', '.savePrompt', function () {
                                    $('.saveChat').remove();
                                    $('.savePrompt').remove();
                                    if(!window.location.href.includes("spreadsheets")){
            
                                        SendMessage("show_cheatlayer", "data", "");
                                        setTimeout(function(){
                                            if(atlas_output.includes("genAtlas"))
                                            {
                                            window.editor.setValue(old_code +  "\n//Generated Script id="  + code_ids  + "\n"+ last_code + "\n//endcode\n");
                                            var no_code_code = `  Start Code
                                            Endpoint : Project Atlas<br> 
                                            Prompt:<br>
                                            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PAPROMPTKEY'  value='` + lastInput + `'></input><br>
                                            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                                            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                                            End Code`;
                                no_code_container.push({ selector: "", options: [], code_ids: code_ids, variablenames: [], variables: "", style: "projectatlas", id: code_ids, no_code:no_code_code });
                                code_ids++;
                                    saveScript();
                                    atlas_output = "";
                                            }
                                        }, 500);
                                    }                        
                                 });
                                 $(document).on('click', '.saveChat', function () {
                                    $('.saveChat').remove();
                                    $('.savePrompt').remove();
                                    if(!window.location.href.includes("spreadsheets")){
            
                                        SendMessage("show_cheatlayer", "data", "");
                                        setTimeout(function(){
                                            if(atlas_output.includes("genAtlas"))
                                            {
                                            window.editor.setValue(old_code +  "\n//Generated Script id="  + code_ids  + "\n"+ atlas_output + "\n//endcode\n");
                                            var no_code_code = `  Start Code
                                            Endpoint : Project Atlas<br> 
                                            Prompt:<br>
                                            <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PAPROMPTKEY'  value='` + lastInput + `'></input><br>
                                            Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                                            <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                                            End Code`;
                                no_code_container.push({ selector: "", options: [], code_ids: code_ids, variablenames: [], variables: "", style: "projectatlas", id: code_ids, no_code:no_code_code });
                                code_ids++;
                                    saveScript();
                                    atlas_output = "";
                                            }
                                        }, 500);
                                    }                        
                                 });
                                 
                                 var currentTab_id = 0;
                           
                                 //console.log(currentTab_id)
                                 //console.log(chat_log)
                                 //console.log("genChatGPT8")
                                 SendMessage("genChatGPT", "data", {tab: currentTab_id, chat_log: chat_log, url: window.location.href, lastInput: lastInput, mode: "web answer generator"});


                          }, 
                          function (reason) {
                            console.error(reason);
                          });


                    }else{
                   

            if(new RegExp("([a-zA-Z0-9]+://)?([a-zA-Z0-9_]+:[a-zA-Z0-9_]+@)?([a-zA-Z0-9.-]+\\.[A-Za-z]{2,4})(:[0-9]+)?(/.*)?").test(lastInput)){

            }

            if(msg.data.mode.includes("automation")){
                var all = document.getElementsByTagName("*");

                for (var i=0, max=all.length; i < max; i++) {
                     // Do something with the element here
                     if(typeof all[i] != "undefined" && typeof all[i].innerText != "undefined" && all[i].innerText.replace(/\s/g, "").replace(/\r?\n|\r/g, " ").replace((/  |\r\n|\n|\r/gm),"").replace(/\s/g,'').length == 0){
                         all[i].remove();
                     }
                }
                    HtmlSanitizer.AllowedTags['CODE'] = false;
                        HtmlSanitizer.AllowedTags['MAIN'] = true;
                
                 html = HtmlSanitizer.SanitizeHtml(document.documentElement.innerHTML);
                 var doc = new DOMParser().parseFromString(html, "text/xml");
                 var newElems = doc.getElementsByTagName("*");
                 var html_formatted_string = "";
                 for(var kk = 0; kk < newElems.length; kk++){
                     if(typeof newElems[kk].innerText != "undefined"){
                        html_formatted_string += newElems[kk].nodeName + ";" + newElems[kk].className.substring(0,20) + ";" + newElems[kk].id + ";" + newElems[kk].innerText.replace(/\s/g, "").replace(/\r?\n|\r/g, " ").replace((/  |\r\n|\n|\r/gm),"").replace(/\s/g,'').substring(0,25) + "\n";
                    }
             }
             var selector_context = "";

                 for(var kk = 0; kk < context_array.length; kk++){
                    for(var jj = 0; jj < context_array[kk].keywords.length; jj++){
                        if(window.location.href.toLowerCase().includes(context_array[kk].keywords[jj].toLowerCase())){

                            selector_context = context_array[kk].context;

                        }
                    }
                }
                
                console.log(context_array)
                console.log(window.location.href)
                console.log("selector context1:" + selector_context)
                
                lastInput += "\nselector context:" + selector_context;

                lastInput += "\nwebsite HTML:" + html.substring(0,6000).split("\n").join(" ").split('"').join('');

            }else{
              
            }
     
            if(msg.data.mode.includes("answer") || lastInput.toLowerCase().includes('current page') || lastInput.toLowerCase().includes('current site') || lastInput.toLowerCase().includes('this page') || lastInput.toLowerCase().includes('this website') || lastInput.toLowerCase().includes('current website')){
                lastInput += "\n website text:" + document.body.innerText.substring(0,6000).split("\n").join(" ").split('"').join('');
                //console.log("FAQ")
                //console.log(lastInput)
            }

            if(msg.data.mode.includes("website")){
                lastInput = "You are a professional engineer who can generate website html. Only genreate robust and completely HTML using the latest modern libraries like tailwindcss. Do not explain the code, and only generating working HTML/CSS/JS.\n" + lastInput;


                
            }
      
                chat_log.push({"role": "user", "content": lastInput})
            //console.log(lastInput);

            
            var currentTab_id = 0;
            //console.log(chat_log)
            //console.log("genChatGPT2")
            //console.log(currentTab_id)
            SendMessage("genChatGPT", "data", {tab: currentTab_id, chat_log: chat_log, url: window.location.href, lastInput: lastInput, mode: msg.data.mode});
            launchAtlas();

            
            $(".chat__main").append(`
        <div class="chat__bubble bubble__answer"  id="messageAnswer">
                    <span><img src="` + chrome.runtime.getURL("img/l.svg")  + `" alt="lg"></span>
                    <div class="text__wrap">
                    <p><pre  style="margin: 0px; font-size: 16px; line-height: 18px; color: #3D2070;display: inline-block; white-space: pre-line;" class='answerCheats' disabled>Generating a custom solution. Please wait up to 1 minute.</pre></p>
                    </div>
                </div>`);

                $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);

                     //     drawNoCodeContainer();

                    // drawNoCodeContainer();
                    if(!added_save){                
                        
                        $('.buttons__controls').append('<button class="saveChat">Save Prompt</button><button class="savePrompt">Save Code</button><button class="stopChat">Stop</button>');
                        $('#messagesCheat').animate({ scrollTop: $('#messagesCheat').prop('scrollHeight') }, 30);
                     added_save = true;
                    }

                     $(document).on('click', '.stopChat', function () {
                        $('.stopChat').remove();
                        SendMessage("stopAtlas", "data", {});
                        window.location.reload();
                     });
                     $(document).on('click', '.savePrompt', function () {
                        $('.saveChat').remove();
                        $('.savePrompt').remove();
            if(!window.location.href.includes("spreadsheets")){

                            SendMessage("show_cheatlayer", "data", "");
                            setTimeout(function(){
                                if(atlas_output.includes("genAtlas"))
                                {
                                window.editor.setValue(old_code +  "\n//Generated Script id="  + code_ids  + "\n"+ last_code + "\n//endcode\n");
                                var no_code_code = `  Start Code
                                Endpoint : Project Atlas<br> 
                                Prompt:<br>
                                <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PAPROMPTKEY'  value='` + lastInput + `'></input><br>
                                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                                End Code`;
                    no_code_container.push({ selector: "", options: [], code_ids: code_ids, variablenames: [], variables: "", style: "projectatlas", id: code_ids, no_code:no_code_code });
                    code_ids++;
                        saveScript();
                        atlas_output = "";
                                }
                            }, 500);
                        }                        
                     });
                     $(document).on('click', '.saveChat', function () {
                        $('.saveChat').remove();
                        $('.savePrompt').remove();
            if(!window.location.href.includes("spreadsheets")){

                            SendMessage("show_cheatlayer", "data", "");
                            setTimeout(function(){
                                if(atlas_output.includes("genAtlas"))
                                {
                                window.editor.setValue(old_code +  "\n//Generated Script id="  + code_ids  + "\n"+ atlas_output + "\n//endcode\n");
                                var no_code_code = `  Start Code
                                Endpoint : Project Atlas<br> 
                                Prompt:<br>
                                <input class='cheatlayer cheat-input' width='174px' style='background-color:white; color:black;width:174px !important;' id='PAPROMPTKEY'  value='` + lastInput + `'></input><br>
                                Delay: <br><select class='selectCheat selectBox  select' name="vars" id='DELAYKEY'><option selected='selected' value="1">1</option><option  value="Custom">Custom</option><option value="Random">Random</option></select><br>
                                <hr><a class="cheatlayer object-inner-link" id='REMOVEKEY' style='background-color:white; color:red;'>Remove </a><br>
                                End Code`;
                    no_code_container.push({ selector: "", options: [], code_ids: code_ids, variablenames: [], variables: "", style: "projectatlas", id: code_ids, no_code:no_code_code });
                    code_ids++;
                        saveScript();
                        atlas_output = "";
                                }
                            }, 500);
                        }                        
                     });


                    }
        }
        }

     
    } else  if (msg.Tag == "gotOCR") {//whitelabelresult
        window.ocr = msg.data;
        //console.log(JSON.stringify(msg.data));
        //console.log(msg.data);
        //console.log("OCR data is now stored in the variable window.ocr");

        global_variables.push(msg.data);

        total_variables++;
        no_code_variables.push(`_OCR` + total_variables);
        no_code_variable_names.push("OCR Output " + total_variables)

        $('HTML').append(`<script>var _OCR` + total_variables + ` =  "` + msg.data + `"</script>`);

    } else if (msg.Tag == "gotTabs") {//whitelabelresult

        //  //console.log(JSON.stringify(msg.data));
        window.tabs = msg.data.tabs;



        for (var i = 0; i < window.tabs.length; i++) {
            global_variables.push(window.tabs[i]);
        }

    } else if (msg.Tag == "firebase_data") {//whitelabelresultfree_account_webook
        //console.log("firebase data");
        //console.log(JSON.stringify(msg.data));
        window.firebase_data.push(msg.data);
        //console.log("Firebase data is now stored in the variable window.firebase_data");


    } else if (msg.Tag == "free_account_webook") {//whitelabelresultfree_account_webook
        //  //console.log("firebase data");
        //  //console.log(msg.data);
        //        window.firebase_data.push(msg.data);
        alert("Webhook triggers are a paid feature. Please upgrade at cheatlayer.com/billing.");
        window.location.href = "https://cheatlayer.com/billing";

    } else if (msg.Tag == "sendRecording") {//whitelabelresult
        //document.getElementById('console').style.width = "49.5%";
        ////console.log("SEND RECORDINGIN");
        $('#loadingCheat').hide();

        live_recording = false;
        no_code_container = msg.recording.no_code_container;
        code_ids = no_code_container.length;
        //    document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
        //    document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
        //    document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;
        // drawNoCodeContainer();
        //     drawNoCodeContainer();
        old_code = window.editor.getValue();
        window.editor = ace.edit("script");
        //window.editor.setValue(old_code);
        window.editor.setAutoScrollEditorIntoView(true);
        window.editor.getSession().setMode("ace/mode/javascript");
        window.editor.setTheme("ace/theme/tomorrow");


        //googleSignIn
        //     SendMessage("ShowHideHotkey", "target", "");

        //     document.getElementById('scriptlist').style.display = 'block';

        //
        //
        window.editor.setValue(old_code + msg.recording.recorder_code + "\n//[Tab Recording]");
        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
        if (document.querySelector('#cheatmenu')) {
            document.querySelector('#cheatmenu').style.display = 'block';
            document.querySelector('#script').style.display = 'block';
            document.querySelector('#console').style.display = 'block';
            //document.querySelector('#schedulerblock').style.display = 'block';

        }

    } else if (msg.Tag == "recordTab") {//whitelabelresult
        //console.log("RECORD TAB!");
        if (!document.getElementById('stopRecording')) {

            $('HTML').append("<div class='cheatlayer'><button id='stopRecording'  class='cheatlayer text-area-btn' style=' z-index:1000000000000000000; position: fixed; top:0px; left: 45%;'>Stop Recording</button></div>");
        } else {
            document.getElementById('stopRecording').style.display = 'block';
        }
        $(document).on('click', '#stopRecording', function () {

            stop();
            document.querySelector('#stopRecording').style.display = 'none';

        });
        // record();
    } else if (msg.Tag == "whitelabelresult") {//whitelabelresult

        setTimeout(function () {
            window.open(msg.results.filename, '_blank');

            alert("Your white label package is available at " + msg.results.filename);
        }, 50000);

    } else if (msg.Tag == 'GotGPT' && document.getElementById('script').style.display.includes('block')) {
        $('#loadingCheat').hide();

        if (window.location.href.includes('cheatlayer')) {
            $('#loadingCheat').hide();

            if (last_complete == 11) {
                introJs().setOptions({
                    steps: [
                        {
                            element: document.querySelector('#filemenu'),
                            intro: 'Click File, then Run to download all the images on the page'
                        }]
                }).start();
                //startOnboard(0);

            }
        }

        document.getElementById('script').scrollTop = document.getElementById('script').scrollHeight;
        try {
            (JSON.parse(msg.data).choices);
            var text = JSON.parse(msg.data).choices[0].text;
            text = text.replace(/\r?\n/g, '\n');
            // var code = text;
            var no_code = '';
            var icon_code = '';
            old_code = window.editor.getValue();

            if (text.includes("End Code")) {
                code = text.split("End Code")[1];
                no_code = text.split("End Code")[0];
            } else {
                code = text;
            }
            var img_src = "https://cheatlayer.com/icon2.png";
            var Title = "";
            if (no_code.includes("SHEETURLKEY")) {
                img_src = "https://cheatlayer.com/images/textarea/text1.png";
                Title += "Scrape to GSheets</h2>";
            }

            if (no_code.includes("calendar")) {
                img_src = "https://cheatlayer.com/images/textarea/text3.png";
                Title += "Create Event(Soon)</h2>";
            }
            if (no_code.includes("SHEETIDKEY")) {
                img_src = "https://cheatlayer.com/images/textarea/text1.png";
                Title += "Scrape to GSheets</h2>";
            }
            if (no_code.includes("DOCIDKEY")) {
                img_src = "https://cheatlayer.com/images/textarea/text2.png";
                Title += "Scrape to GDocs</h2>";
            }

            if (no_code.includes("Console")) {
                img_src = "https://cheatlayer.com/images/textarea/text4.png";
                Title += "Print To Console</h2>";
            }
            if (no_code.includes("CODEKEY")) {
                img_src = "https://cheatlayer.com/images/textarea/text7.png";
                Title += "Run Code On Tab</h2>";
            }

            if (no_code.includes("Push") || no_code.includes("Click")) {// Local Variable
                img_src = "https://cheatlayer.com/images/textarea/text8.png";
                Title += "Click Link</h2>";
            }
            if (no_code.includes("Local Variable")) {// Temp
                img_src = "https://cheatlayer.com/images/textarea/text10.png";
                Title += "Save Data</h2>";
            }

            if (no_code.includes("Temp")) {// Temp
                img_src = "https://cheatlayer.com/images/textarea/text9.png";
                Title += "Save To Cloud</h2>";
            }


            icon_code += '<h2 class="cheatlayer"style="color:black;font-size:12px;"><img style="width:50px;height:50px;border-radius:10px;border:1px solid black;padding:5px;margin:5px;" src=\"';
            icon_code += img_src;
            icon_code += '\"></img> ' + Title;
            //  code_ids = 0;

            no_code = icon_code + "<div style='padding:5px;margin:5px;'>" + no_code + "</div>";
            (no_code.split('SELECTORKEY'));
            no_code = no_code.split('SELECTORKEY').join('SELECTORKEY' + code_ids);
            no_code = no_code.split('ELEMENTSELECTKEY').join('ELEMENTSELECTKEY' + code_ids);

            no_code = no_code.split('XPATHKEY').join('XPATHKEY' + code_ids);
            no_code = no_code.split('CSSKEY').join('CSSKEY' + code_ids);
            no_code = no_code.split('TIMERKEY').join('TIMERKEY' + code_ids);
            no_code = no_code.split('LOCATIONKEY').join('LOCATIONKEY' + code_ids);
            no_code = no_code.split('ELEMENTKEY').join('ELEMENTKEY' + code_ids);
            no_code = no_code.split('CODEKEY').join('CODEKEY' + code_ids);
            no_code = no_code.split('CODEGETDATA').join('CODEGETDATA' + code_ids);

            no_code = no_code.split('Start Code').join('Edit Generated Script Id:' + code_ids);
            //  no_code = no_code.split('//').join('');
            no_code = no_code.split('Element').join('<br>Element');
            no_code = no_code.split('Selector').join('<br>Selector');
            no_code = no_code.split('Endpoint').join('<br>Endpoint');
            // no_code =  no_code.split('URL').join('<br>URL');
            no_code = no_code.split('Timer').join('<br>Timer');
            no_code = no_code.split('SHEETURLKEY').join('SHEETKEY' + code_ids);
            no_code = no_code.split('GMAILVALUEKEY').join('GMAILVALUEKEY' + code_ids);

            no_code = no_code.split('FILTERINPKEY').join('FILTERINPKEY' + code_ids);
            no_code = no_code.split('FILTEROPKEY').join('FILTEROPKEY' + code_ids);
            no_code = no_code.split('FILTERVALKEY').join('FILTERVALKEY' + code_ids);
            //console.log("SPLITS???")
            //console.log(no_code.split('FILTEROPKEY'))
            no_code = no_code.split('SHEETIDKEY').join('SHEETIDKEY' + code_ids);
            no_code = no_code.split('DOCIDKEY').join('DOCIDKEY' + code_ids);
            no_code = no_code.split('DOCVALUESKEY').join('DOCVALUESKEY' + code_ids);

            no_code = no_code.split('SHEETVALUESKEY').join('SHEETVALUESKEY' + code_ids);
            no_code = no_code.split('SHEETNAMEKEY').join('SHEETNAMEKEY' + code_ids);

            no_code = no_code.split('WEBHOOKURLKEY').join('WEBHOOKURLKEY' + code_ids);
            no_code = no_code.split('WEBHOOKDATAKEY').join('WEBHOOKDATAKEY' + code_ids);
            no_code = no_code.split('CSVURLKEY').join('CSVURLKEY' + code_ids);


            no_code = no_code.split('RIKUNAME').join('RIKUNAME' + code_ids);
            no_code = no_code.split('RIKUAPIKEY').join('RIKUAPIKEY' + code_ids);
            no_code = no_code.split('PROMPTKEY').join('PROMPTKEY' + code_ids);
            no_code = no_code.split('GPT3KEY').join('GPT3KEY' + code_ids);

            no_code = no_code.split('RIKUINPUT5KEY').join('RIKUINPUT5KEY' + code_ids);
            no_code = no_code.split('RIKUINPUT4KEY').join('RIKUINPUT4KEY' + code_ids);
            no_code = no_code.split('RIKUINPUT1KEY').join('RIKUINPUT1KEY' + code_ids);
            no_code = no_code.split('RIKUINPUT2KEY').join('RIKUINPUT2KEY' + code_ids);
            no_code = no_code.split('RIKUINPUT3KEY').join('RIKUINPUT3KEY' + code_ids);

            no_code = no_code.split('TIMEOUTKEY').join('TIMEOUTKEY' + code_ids);
            no_code = no_code.split('TABIDKEY').join('TABIDKEY' + code_ids);
            no_code = no_code.split('NEWWINDOWKEY').join('NEWWINDOWKEY' + code_ids);//PAGINATIONKEY
            no_code = no_code.split('RUNONVARSKEY').join('RUNONVARSKEY' + code_ids);
            no_code = no_code.split('PAGINATIONKEY').join('PAGINATIONKEY' + code_ids);

            no_code = no_code.split('URL').join('<br>URL');

            no_code = no_code.split("textarea").join("textarea style='width:100%'");
            no_code = no_code.split(".getAttribute('innerText')").join(".innerText");


            //  no_code = no_code.split('//').join('');

            (no_code);
            //  document.getElementById('script').style.width = "49.5%";

            // document.getElementById('console').style.width = "49.5%";

            //    document.getElementById('nocode').innerHTML += "<div style='text-align:left;-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;opacity:1.0;overflow-y:hidden;color:black; background-color:white;margin: 30px;'>" + no_code + "</div>";
            //   document.getElementById('nocode').style.cssText = 'overflow-y:hidden;background-color:rgba(0, 0, 0, 0.0);position:fixed;z-index:1000000;top:0px; font-size:24px; left:50%; width:33%; border-radius:10px; height:100%;color:white';
            //  document.getElementById('nocode').scrollTop = document.getElementById('nocode').scrollHeight;

            code.split().join();


            setTimeout(function () {


                for (var kk = 0; kk <= code_ids; kk++) {
                    $("#TIMERKEY" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });

                    $("#CODEKEY" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });

                    $("#CODEGETDATA" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });


                    $("#ELEMENTKEY" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });

                    $("#SELECTORKEY" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });

                    $("#XPATHKEY" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });

                    $("#ELEMENTSELECTKEY" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });


                    $("#CSSKEY" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });
                    $("#LOCATIONKEY" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });

                    $("#SHEETKEY" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });
                    $("#SHEETIDKEY" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });

                    $("#DOCIDKEY" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });
                    $("#SHEETVALUESKEY" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });
                    $("#DOCVALUESKEY" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });
                    $("#SHEETNAMEKEY" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });

                    $("#CSVURLKEY" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });
                    $("#WEBHOOKURLKEY" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });
                    $("#WEBHOOKDATAKEY" + kk).on('focusin', function () {

                        $(this).data('val', $(this).val());
                    });
                    //      //console.log("setupREMOVE0 " + kk)
                    $("#REMOVEKEY" + kk).on('click', function () {

                        ///  var prev = $(this).data('val');

                        var id = this.id.split("REMOVEKEY").join("");
                        //     //console.log("TRY REMOVE" + this.id);
                        var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                        var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                        var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                        no_code_container.splice(id, 1);
                        for (var kk = 0; kk < leader_lines.length; kk++) {
                            if (leader_lines[kk] && typeof leader_lines[kk] !== 'undefined') {
                                leader_lines[kk].remove();
                                leader_lines[kk] = null;
                            }
                        }
                        drawNoCodeContainer();

                        window.editor.setValue(before_code + after_code, 1);
                        //    window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                    });


                    $("#TIMERKEY" + kk).on('change', function () {

                        var prev = $(this).data('val');
                        var id = this.id.split("TIMERKEY").join("");
                        var newVal = this.value;

                        var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                        var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                        var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                        prev = editor_code.split('},')[1].split('*1000')[0];


                        editor_code = editor_code.split('},' + prev + '*1000);').join('},' + newVal + '*1000);');


                        window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "\n//endcode" + after_code, 1);
                        //  window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);




                    });
                    $("#ELEMENTKEY" + kk).on('change', function () {

                        var id = this.id.split("ELEMENTKEY").join("");

                        var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                        var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                        var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");

                        var prev = editor_code.split('.getElementsByTagName(')[1].split(")")[0];
                        var newVal = this.value;

                        editor_code = editor_code.split(prev).join("\'" + newVal + "\'");


                        window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "\n//endcode" + after_code, 1);
                        //  window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);



                    });

                    $("#CODEGETDATA" + kk).on('change', function () {


                        var prev = $(this).val();
                        var newVal = this.value;
                        ///  //console.log(newVal)
                        if (last_complete == 19 && newVal == 'Screenshot') {


                            //document.querySelector('#xpathkey').style.display = 'block';
                            // $("#no_code_parameters").html(new_onboard_html);
                            if (window.location.href.includes('cheatlayer')) {

                                introJs().setOptions({
                                    steps: [
                                        {
                                            element: document.querySelector('#filemenu'),
                                            intro: 'Then click File, and Run to open this link to google in a new tab and run the Screenshot Cheat on it.'
                                        }]
                                }).start();
                            }

                            //  completed_steps[19] = 1;
                            // //startOnboard(0);
                        }
                        var id = this.id.split("CODEGETDATA").join("");
                        var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                        var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                        var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                        //prev = editor_code.split("/*startCheat*/'")[1].split("/*stopCheat*/")[0];

                        if (newVal != 'none') {


                            var first = editor_code.split("/*startCheat*/")[0];
                            //    var prev = editor_code.split("/*startCheat*/'")[1].split("/*stopCheat*/")[0];

                            //      var second = editor_code.split("/*startCheat*/'").slice(1).join("/*startCheat*/'").replace(prev, '');;

                            var scripts_code = '';
                            if (typeof window.data != 'undefined' && window.data.length > 0) {
                                //console.log(window.data);



                                if (window.data.split('\r\n').length > 1) {


                                    scripts_code += `
                    
                    function slow(jj){
                    runOnTab(window.data.split('\\\\r\\\\n')[jj].split(',')[0],"` + newVal + `", 30, {newWindow:false, row: window.data.split('\\\\r\\\\n')[jj].split(',')})
                     if(jj < window.data.split('\\\\r\\\\n').length){
                        setTimeout(function(){slow(jj+1)},2000);
                     }
                    }
                    slow(0);
                    `;

                                } else {

                                    scripts_code += `
                    
                function slow(jj){
                    runOnTab(window.data.split('\\\\n')[jj].split(',')[0],"` + newVal + `", 30, {newWindow:false, row: window.data.split('\\\\n')[jj].split(',')})
                 if(jj < window.data.split('\\\\n').length){
                    setTimeout(function(){slow(jj+1)},2000);
                 }
                }
                slow(0);
                `;
                                }
                            }

                            editor_code = first + "/*startCheat*/" + scripts_code + `
            /*stopCheat*/
            \`);         
            //console.log(window.data);     
            },/*delay*/` + currentDelay + `*delayKey);
                    `;

                            window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "//endcode" + after_code, 1);
                            // window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


                            var clicked_container = null;


                            for (var jj = 0; jj < no_code_container.length; jj++) {
                                if (no_code_container[jj].code_ids == id) {
                                    clicked_container = no_code_container[jj];

                                }
                            }

                            first = clicked_container.no_code.split(prev + `'`)[0];

                            second = clicked_container.no_code.split(prev + `'`).slice(1).join();

                            clicked_container.no_code = first + ` selected="selected" ` + second;
                        }
                    });

                    $("#CODEKEY" + kk).on('change', function () {

                        var prev = $(this).data('val');
                        var newVal = this.value;

                        var id = this.id.split("CODEKEY").join("");
                        var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                        var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                        var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                        prev = editor_code.split(', \'')[1].split('\');')[0];


                        editor_code = editor_code.split(prev).join(newVal);

                        window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "\n//endcode" + after_code, 1);
                        // window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);





                    });


                    $("#LOCATIONKEY" + kk).on('change', function () {


                        var prev = $(this).data('val');
                        var newVal = this.value;

                        var id = this.id.split("LOCATIONKEY").join("");
                        var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                        var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                        var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");

                        prev = editor_code.split(',{')[1].split(":")[0];

                        editor_code = editor_code.split(prev).join(newVal);

                        window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "\n//endcode" + after_code, 1);
                        // window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);




                    });




                    $("#SELECTORKEY" + kk).on('change', function () {

                        var prev = $(this).data('val');

                        var id = this.id.split("SELECTORKEY").join("");
                        var newVal = this.value;

                        var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                        var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                        var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");

                        prev = editor_code.split('.getAttribute(')[1].split(")")[0];



                        editor_code = editor_code.split(prev).join("\'" + newVal + "\'");

                        window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "\n//endcode" + after_code, 1);
                        //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

                    });


                    $("#SHEETKEY" + kk).on('change', function () {


                        var prev = $(this).val();
                        var newVal = this.value;

                        var id = this.id.split("SHEETKEY").join("");
                        var editor_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode")[0];
                        var before_code = window.editor.getValue().split("Generated Script id=" + id)[0];
                        var after_code = window.editor.getValue().split("Generated Script id=" + id)[1].split("//endcode").slice(1).join("//endcode");
                        prev = editor_code.split('sendAjax(')[1].split(',')[0];

                        editor_code = editor_code.split(prev).join("\'" + newVal + "\'");


                        window.editor.setValue(before_code + "Generated Script id=" + id + editor_code + "\n//endcode" + after_code, 1);
                        //         window.editor.setValue(window.editor.getValue().split('undefined').join(''),1);
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


                    });

                }

                if (typeof window.editor != 'undefined') {
                    var added_code = "//Generated Script id=" + code_ids;
                    added_code += code;
                    window.editor.setValue(old_code + added_code + "\n//endcode GPT Prompt: " + last_gpt + "\n");
                    document.getElementById('cheatmenu').style.display = 'block';
                    window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


                }

                code_ids += 1;

            }, 1000);

        } catch {
            window.editor.setValue(old_code + "//Error generating code. MAKE SURE YOU ARE LOGGED IN AT CHEATLAYER.COM IN A NEW TAB FIRST. Otherwise, try removing odd characters from the request and reduce the character count.");
            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

        }
    } else if (msg.Tag == "Community") {


        //sendAjax("https://hooks.zapier.com/hooks/catch/1200171/bo2zk3y/", {keys: "test", data: "data"}, "POST");
    } else if (msg.Tag == "gotAjax") {
        $('HTML').append("<div style='background-color:white; opacity:1.0;position:fixed;z-index:100005;top:300px;left:270px; width:50%; height:50%;color:white'><h1>Output: " + JSON.stringify(msg.dataobj) + "</h1></div>");



    } else if (msg.Tag == "reload") {



    } else if (msg.Tag == "ShowHide") {
        showHide(msg);


    } else  if (msg.Tag == "cloudTasks") {
        //console.log(msg.data)
        cloudTasks = msg.data.cloudTasks;
//console.log("CLOUD TASKS")
context_array = msg.data.context_array;
schedule = msg.data.schedule;
        if(typeof context_array == 'undefined'  && opened_login == false && !window.location.href.includes("cheatlayer.com/signin") && (window.location.href.includes("cheatlayer.com/dashboard") || window.location.href.includes("cheatlayer.com/dash"))){
            opened_login = true;
            //console.log("NOT FOUND")
            $('HTML').append(`   <div class="fixed inset-0 flex items-center justify-center z-50 ">
            <div class="absolute inset-0 bg-gray-900 opacity-50"></div>
            <div class="bg-white items-center justify-center p-8 rounded shadow-lg z-10">
                <h2 class="text-xl font-bold mb-4">Sign Up Or Login</h2><br>
          <center>
          <br>
                <form action="/signup" method="POST" data-rewardful>
                  <p>
                    <input type="text" name="email" class="form-control" placeholder="Email address" value="" autofocus />
                  </p>
                  <p>
                    <input id="referral" type="text" name="referral" hidden class="form-control hide" placeholder="Referral Code" />
                  </p>
          
          
                  <p>
                    <input type="password" name="password" class="form-control" placeholder="Password" />
                  </p>
                  <button class="btn btn-lg btn-primary btn-block" type="submit">Sign Up</button>
                </form>
                By Signing up you agree to our<br> <a href="/eula.html">End User License Agreement</a> and <a href="/privacy.html">Privacy Policy</a>.
                <hr><br><br>

                <form accept-charset="UTF-8" action="/login" method="POST" role="form">
                <div class="form-group"  style="background:white;">
                  <label for="email">Email</label>
                  <input class="form-control" id="email" name="email" type="text" value="">
                </div>
                <div class="form-group">
                  <label for="user_password">Password</label>
                  <input type="password" name="password" class="form-control" placeholder="Password">
                </div>
                <button class="btn btn-lg btn-primary btn-block" type="submit">Login</button>
              </form>
             <a href="/forgot">forgot password?</a></p>

</center>
            </div>
        </div>`)
        }else if(window.location.href.includes("cheatlayer.com/dash") && !window.location.href.includes("cheatlayer.com/dashboard")){
            var chat_html = "";
            /* use this teplate for history rows
            <div class="">
            <p class="text-gray-600">Run agent on example.com</p>
            <p class="text-gray-400">12/01/2022</p>
            <button>
                <img src="https://cheatlayer.com/v7/img/repeat.svg" alt="Repeat" class="w-6">
            </button>
        </div>
*/



var firebaseConfig = {
    apiKey: "AIzaSyApJsRNWHtr06MPLh2NJaLmW1fcG8W5XLk",
    authDomain: "cheat-layer.firebaseapp.com",
    projectId: "cheat-layer",
    databaseURL: "https://cheat-layer-default-rtdb.firebaseio.com",
    storageBucket: "cheat-layer.appspot.com",
    messagingSenderId: "964029954703",
    appId: "1:964029954703:web:836e0dec49ad6e60214efa",
    measurementId: "G-T21Y70F57D"
};
    
firebase.initializeApp(firebaseConfig);


firebase_database = firebase.database();          
firebase_queue = firebase.database().ref('agents/' + user_key + "/");
firebase_queue.off("value");

firebase_queue.on('value', (snapshot) => {
    $("#myrow").html("");
    var agents_html;
    snapshot.forEach(function (job) {
        var obj = job.val();
      console.log(obj)
        var keys =  Object.keys(obj);
        console.log(keys)

       {
            for (var jj = 0; jj < keys.length; jj++) {
                var key = keys[jj];
         console.log(keys[jj] + " -> " + obj[key]);
          console.log(obj[key]);
        var task_rows = "";
          for(var hh = 0; hh < obj[key]["tasks"].length; hh++){

            var status = `  <select class="status-select bg-blue-300"> <option>In Progress</option>
            <option selected="selected" style="" >Ready to Start</option>
            <option>Done</option>
            <option>Failed</option>  </select>`;
            if(obj[key]["tasks"][hh]["completed"] == true && obj[key]["tasks"][hh]["logs"].length > 0 ){
                status = `                          <select class="status-select bg-green-300">
                <option>In Progress</option>
                <option >Ready to Start</option>
                <option selected="selected">Done</option>
                <option>Failed</option>                          </select>
                `;

            }
            if(obj[key]["tasks"][hh]["completed"] == true && obj[key]["tasks"][hh]["logs"].length == 0 ){
                status = `<select class="status-select bg-red-300"> <option>In Progress</option>
                <option >Ready to Start</option>
                <option >Done</option>
                <option selected="selected">Failed</option> </select>`;

            }

            if(obj[key]["tasks"][hh]["completed"] == false && obj[key]["tasks"][hh]["tabid"] != -1 ){
                status = `<select class="status-select bg-yellow-300"> <option selected="selected">In Progress</option>
                <option >Ready to Start</option>
                <option >Done</option>
                <option >Failed</option> </select>`;

            }
            var context = "";
            if(obj[key]["tasks"][hh]["context"] != undefined){

                context = obj[key]["tasks"][hh]["context"];
            }
            
            task_rows += `
            <tr class="bg-gray-100 hover:bg-gray-200">
                        <td class="border px-4 py-2 editable">` + obj[key]["tasks"][hh]["prompt"] + `</td>
                        <td class="border px-4 py-2 status-container">
                           ` + status + `
                        </td>
                        <td class="border px-4 py-2 editable">` + obj[key]["tasks"][hh]["url"] + ": " + context + `</td>
                        <td class="border px-4 py-2 data-container">
                          <div class="data-dropdown mt-2 bg-gray-200 p-4 rounded-lg shadow-md">
                           ` + obj[key]["tasks"][hh]["logs"] + `
                          </div>
                        </td>
                      </tr>
                   
            `

          }

                 agents_html += `
                <style>
                .editable { cursor: pointer; }
                .table-container { overflow: hidden; }
                .table-body { max-height: 0; transition: max-height 0.5s ease-in-out; }
                .expanded { max-height: 1000px; }
                .data-container { overflow: hidden; }
                
                .data-container:hover { overflow: hidden;
                    max-height: 1000px;
                }
                .data-dropdown { max-height: 0; transition: max-height 0.5s ease-in-out; }
                .expanded { max-height: 100px; }
                .status-container { position: relative; }
                .status-select { position: absolute; top: 0; left: 0; width: 100%; height: 100%; text-align: center; color: white; }

                td{
                    height: 50px;
                    max-height: 50px;
                    overflow: hidden;
                    text-overflow: ellipsis;
                    -webkit-line-clamp: 1; }
                    .data-dropdown{
                        max-height: 100px;
                        display:flex;
                        flex-direction:column;
                        overflow-y:scroll;

                    }

              </style>
                <div class="bg-white rounded-lg shadow-md">
                <div class="bg-blue-500 text-white px-4 py-2 cursor-pointer" id="table-title">Agent Goal: ` + obj[key]["goal"]+ `  <a href="#"  onclick="window.postMessage({ removeAgent: '` +  jj + `' }, '*');" >Remove</a></div>
                <div class="table-container">
                  <table class="table-fixed w-full table-body">
                    <thead>
                      <tr class="bg-blue-500 text-white">
                        <th class="w-5/12 px-4 py-2">Task</th>
                        <th class="w-1/12 px-4 py-2">Status</th>
                        <th class="w-2/12 px-4 py-2">Context</th>
                        <th class="w-4/12 px-4 py-2">Results</th>
                      </tr>
                    </thead>
                    <tbody>
                      ` + task_rows + `
                    </tbody>
                  </table>
                </div>
              </div>
                `;

            }
        }


       
       



    }
    
    );
            $("#myrow").append(agents_html);

    var agent_script_html =     `   $(function() {
        function getStatusColor(status) {
          switch (status) {
            case "In Progress":
              return "bg-yellow-300";
            case "Ready to Start":
              return "bg-blue-300";
            case "Done":
              return "bg-green-300";
            case "Failed":
              return "bg-red-300";
            default:
              return "";
          }
        }
    
        $(".editable").click(function() {
          let originalValue = $(this).text();
          let input = $('<input>', {
            type: 'text',
            value: originalValue,
            class: 'w-full bg-gray-200 border-none'
          });
    
          $(this).html(input);
          input.focus();
    
          input.blur(() => {
            let newValue = input.val();
            if (newValue === "") {
              newValue = originalValue;
            }
            $(this).html(newValue);
          });
        });
    
        $("tbody").sortable();
    
        $(".status-select").on("change", function() {
          const selectedStatus = $(this).val();
          const bgColorClass = getStatusColor(selectedStatus);
          $(this).removeClass("bg-yellow-300 bg-blue-300 bg-green-300 bg-red-300");
          $(this).addClass(bgColorClass);
        });
    
        $(".data-btn").on("click", function() {
          const dropdown = $(this).siblings(".data-dropdown");
          dropdown.toggleClass("expanded");
        });
    
        $("#table-title").on("click", function() {
          $(".table-body").toggleClass("expanded");
        });
      });`;
    
                    var agent_script = document.createElement("script");
                    agent_script.innerHTML = agent_script_html;
                    document.body.appendChild(agent_script);
});
chatHistory = msg.data.chatHistory.split("[;;;]");

            ////console.log(chatHistory)
            ////console.log(schedule)
            for(var i = 0; i < chatHistory.length; i++){
                ////console.log(chatHistory[i])
                ////console.log(chatHistory[i].split(";:;")[0])
                if(typeof chatHistory[i].split(";:;")[2] != 'undefined'){
                chat_html += `<div class=" justify-between items-center border-b border-gray-200 py-4">
                <p class="text-gray-600" style="height:50px;overflow:hidden;">${chatHistory[i].split(";:;")[0]}</p>
                <p class="text-gray-400" style="height:50px;overflow:hidden;">${new Date(parseInt(chatHistory[i].split(";:;")[2])).toString()}</p>
                <button onclick="window.postMessage({ runChat: '` +  chatHistory[i] + `' }, '*');">
                    <img src="https://cheatlayer.com/v7/img/repeat.svg" alt="Repeat" class="w-6">
                </button>
            </div>`
                }

                
        }
        $('#chatHistory').html(chat_html);

        var remove = document.createElement("script");
        remove.innerHTML = `function removeCloud(name){
                    
            $.ajax({
        
        url : 'https://cheatlayer.com/user/removeCloud',
        type : 'POST',
        dataType:'json',
        data: {id:name},
        success : function(data) {  
        
        window.location.reload();
        }
        });
        }`;
                document.body.appendChild(remove);
        var schedule_html = "";
        for(var i = 0; i < schedule.length; i++){
            if(schedule[i]){
                
var timer = schedule[i].data.cron;
if(schedule[i].data.cron != 100){
timer = cronstrue.toString(schedule[i].data.cron);
}else{
timer = 'Webhook Trigger';
}

            ////console.log(schedule[i])
            schedule_html += `<div class=" justify-between items-center border-b border-gray-200 py-4">

            <p class="text-gray-600" style="height:50px;overflow:hidden;">${timer}</p>
            <p class="text-gray-400" style="height:50px;overflow:hidden;">${schedule[i].data.script}</p>
            <button>
            <a onclick="removeCloud('` + schedule[i].id + `')" href="#"><img src="v7/img/bin.svg" alt="bin"></a>
            </button>
        </div>`
        
            }
        }
        $('#cheatSchedule').html(schedule_html);
    
    }

    } else if (msg.Tag == "GotScripts" && opened_cheatLayer && block_update == false) {
        $('#loadingCheat').hide();

        user_email = msg.scripts.user_email
        if (typeof user_email == 'undefined') {
            alert('Please log in at cheatlayer.com')
            window.open("https://cheatlayer.com/signin", '_blank').focus();
        }
        var paras = document.getElementsByClassName('cheatlayer');
        cloudTasks = msg.scripts.tasks;
        for (var kk = 0; kk < paras.length; kk++) {
            if (!paras[kk].getAttribute('class').includes("boxcheat")) {
                paras[kk].parentNode.removeChild(paras[kk]);
            }
        }
        tab_id = msg.scripts.tab_id;
        // (msg.scripts.key.length);
        (JSON.stringify(msg.scripts));
        if (typeof msg.scripts._id != "undefined" && msg.scripts._id.length == 0) {
            (msg.scripts.key.length);

            $.ajax({
                url: 'https://cheatlayer.com/user/getKeys',
                type: 'post',
                data: {
                    email: msg.scripts.email
                },
                success: function (e) {
                    ////console.log("GOT KEYS1")

                    (e[0]._id);
                    user_key = e[0]._id;
                    while (user_key.length == 0) {

                        user_key = ""; //prompt("Please enter your user key from https://cheatlayer.com/bot:");

                    }
                    if (user_key) {
                        SendMessage("Key", "key", user_key);
                    }


                    user_key = msg.scripts.key;
                    if (document.getElementById('APISolution')) {
                        document.getElementById('APISolution').value = user_key;
                    }
                    scripts = msg.scripts.scripts;
                    folders = msg.scripts.folders;

                    community_scripts = msg.scripts.community_scripts;
                    codes = msg.scripts.codes;
                    whitelabel = msg.scripts.whitelabel;
                    refunded = msg.scripts.refunded;
                    paywall = msg.scripts.paywall;
                    tempData = msg.scripts.tempData;
                    schedule = msg.scripts.schedule;
                    user_email = msg.scripts.user_email
                    ////console.log("USER EMAIL ")
                    ////console.log(user_email)
                    onbaord = msg.scripts.onbaord;
                    completed_steps = msg.scripts.completed_steps;
                    (msg.scripts.onbaord);;
                    ('onbaord');


                    if (msg.scripts.key.length == 0) {
                        $.ajax({
                            url: 'https://cheatlayer.com/user/getLogin',
                            type: 'post',
                            data: {
                                id: user_key
                            },
                            success: function (e) {
                                ("Get Login");
                                (e);

                                codes = e.codes;
                                (codes);
                                whitelabel = e.whitelabel;
                                refunded = e.refunded;
                                codes = e.codes;
                                paywall = e.paywall;
                                tempData = e.tempData;
                                user_plan = e.plan;
                                bootcampS2 = e.bootcampS2;
                                user_email = e.email;
                                ////console.log("USER EMAIL ")
                                ////console.log(user_email)
                                schedule = e.scheduledScripts;
                                SendMessage("Plan", "plan", e.plan);
                                SendMessage("Started", "started", e.started);
                                SendMessage("Codes", "codes", e.codes);
                                SendMessage("Whitelabel", "whitelabel", e.whitelabel);
                                SendMessage("Refunded", "refunded", e.refunded);
                                SendMessage("TempData", "tempData", e.tempData);
                                SendMessage("Schedule", "schedule", e.scheduledScripts);

                                if (e.plan == "") {
                                    alert("Please activate your subscription at cheatlayer.com/billing or contact support. Re-install to re-enter a new user key.");

                                } else {
                                    var script_html = "";
                                    for (var kk = 0; kk < folders.length; kk++) {
                                        if (folders[kk].split(" ").join("").length == 0) {
                                            continue;
                                        }

                                        script_html += `  <li class="cheatlayer folder-line-cheatlayer" aria-label="` + folders[kk] + `">
                                        <div class="cheatlayer list-inner code-list-wrap">
                                       
                                            <div class='cheatlayer' style='white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 100%;' class='cheatlayer' >
                                                <img src="` + chrome.runtime.getURL("folder.png") + `" width="32px" height="32px" style="margin:10px" class="cheatlayer img-fluid">
                                                <span class='cheatlayer'style="position:relative;top:0px;white-space: pre-wrap; word-wrap:break-word;" >` + folders[kk] + `</span>
                                            </div>
                                           
                                        </div>
                                    
                                    </li>`;
                                    }
                                    for (var kk = 0; kk < scripts.length; kk++) {
                                        if (scripts[kk].deleted != "true") {

                                            if (scripts[kk].start.includes("*")) {
                                                scripts[kk].start = "cheatlayer.com";
                                            }

                                            var temstart = scripts[kk].start;
                                            if (scripts[kk].start.includes("http")) {
                                                temstart = scripts[kk].start.split("//")[1];
                                            }
                                            script_html += `<li class="cheatlayer code-line-cheatlayer">
                                        <div class="cheatlayer list-inner code-list-wrap">
                                      
                                            <div class='cheatlayer cheatline' style='white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 200px;'>
                                                <img src="https://` + temstart + `/favicon.ico" width="32px" height="32px" style="margin:10px" class="cheatlayer img-fluid">
                                                <span class='cheatlayer'style="position:relative;top:0px;white-space: pre-wrap; word-wrap:break-word;">` + scripts[kk].name + `</span>
                                            </div>
                                            
                                        </div>
                                    
                                    </li>
                                    <div id="content` + kk + `"  class='cheatlayer'style="display: none;z-index:100000">
                                    <ul class="cheatlayer code-gen-list" style="z-index:1000000000">
                                        <li><a  style="display: block;" class='cheatlayer cheatlayer runscript runcheat' type='button' aria-label='` + kk + `' id='run` + kk + `' data-dismiss='alert' aria-label='Play'>
                                        <svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M11 21C16.5228 21 21 16.5228 21 11C21 5.47715 16.5228 1 11 1C5.47715 1 1 5.47715 1 11C1 16.5228 5.47715 21 11 21Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            <path d="M3.66699 10.9998C3.66699 9.05492 4.43961 7.18965 5.81488 5.81439C7.19014 4.43912 9.0554 3.6665 11.0003 3.6665C12.9452 3.6665 14.8105 4.43912 16.1858 5.81439C17.561 7.18965 18.3337 9.05492 18.3337 10.9998" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            <path d="M8.33301 7L9.72901 12.714C9.78431 12.9026 9.88075 13.0766 10.0114 13.2234C10.142 13.3703 10.3036 13.4863 10.4845 13.5632C10.6654 13.6401 10.8611 13.6759 11.0574 13.668C11.2538 13.6601 11.446 13.6088 11.6202 13.5177C11.7943 13.4267 11.9461 13.2981 12.0646 13.1413C12.1831 12.9845 12.2654 12.8033 12.3054 12.6109C12.3455 12.4185 12.3424 12.2196 12.2963 12.0286C12.2502 11.8375 12.1624 11.659 12.039 11.506C12.041 11.4653 8.33301 7 8.33301 7Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            </svg>
                                            Run</a></li>
                                            <li><a  style="display: block;" class='cheatlayer cheatlayer runscript loopcheat'   aria-label='` + kk + `' type='button' id='loop` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M11 21C16.5228 21 21 16.5228 21 11C21 5.47715 16.5228 1 11 1C5.47715 1 1 5.47715 1 11C1 16.5228 5.47715 21 11 21Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            <path d="M3.66699 10.9998C3.66699 9.05492 4.43961 7.18965 5.81488 5.81439C7.19014 4.43912 9.0554 3.6665 11.0003 3.6665C12.9452 3.6665 14.8105 4.43912 16.1858 5.81439C17.561 7.18965 18.3337 9.05492 18.3337 10.9998" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            <path d="M8.33301 7L9.72901 12.714C9.78431 12.9026 9.88075 13.0766 10.0114 13.2234C10.142 13.3703 10.3036 13.4863 10.4845 13.5632C10.6654 13.6401 10.8611 13.6759 11.0574 13.668C11.2538 13.6601 11.446 13.6088 11.6202 13.5177C11.7943 13.4267 11.9461 13.2981 12.0646 13.1413C12.1831 12.9845 12.2654 12.8033 12.3054 12.6109C12.3455 12.4185 12.3424 12.2196 12.2963 12.0286C12.2502 11.8375 12.1624 11.659 12.039 11.506C12.041 11.4653 8.33301 7 8.33301 7Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            </svg>
                                            Loop
                                            </a></li>
                                        <li><a  style="display: block;" class='cheatlayer cheatlayer runscript editcheat' aria-label='` + kk + `' type='button' id='edit` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M1 21H11H21" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            <path d="M11.2464 4.1427L16.7462 9.64238M11.2464 4.1427L14.3892 1L19.8888 6.49972L16.7462 9.64238L11.2464 4.1427ZM11.2464 4.1427L5.01684 10.3723C4.80847 10.5806 4.69141 10.8633 4.69141 11.1579V16.1974H9.73093C10.0256 16.1974 10.3082 16.0804 10.5166 15.8719L16.7462 9.64238L11.2464 4.1427Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            </svg>Edit
                                            </a></li>
                                        <li><a  style="display: block;" class='cheatlayer cheatlayer runscript removecheat'   aria-label='` + kk + `' type='button' id='remove` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M18.7782 9.88867V20.3331C18.7782 20.7013 18.4798 20.9998 18.1115 20.9998H3.88932C3.52113 20.9998 3.22266 20.7013 3.22266 20.3331V9.88867"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            <path d="M8.77734 16.5553V9.88867" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            <path d="M13.2227 16.5553V9.88867" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            <path d="M6.55556 5.44444H15.4444M21 5.44444H15.4444H21ZM1 5.44444H6.55556H1ZM6.55556 5.44444V1.66667C6.55556 1.29848 6.85403 1 7.22222 1H14.7778C15.146 1 15.4444 1.29848 15.4444 1.66667V5.44444H6.55556Z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                            </svg>Remove
                                            </a></li>
                                        <li><a   style="display: block;" class='cheatlayer cheatlayer runscript whitecheat'   aria-label='` + kk + `' type='button' id='whitelabel` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                            <path d="M11.5769 1L1 11.5769C1.50617 12.0766 1.79742 12.754 1.81178 13.4651C1.82615 14.1763 1.5625 14.8649 1.07692 15.3846L6.61538 20.9231C7.13509 20.4375 7.82375 20.1739 8.53485 20.1882C9.24596 20.2026 9.9234 20.4938 10.4231 21L21 10.4231C20.743 10.1691 20.539 9.86664 20.3997 9.53323C20.2605 9.19982 20.1887 8.84209 20.1887 8.48077C20.1887 8.11945 20.2605 7.76172 20.3997 7.42831C20.539 7.0949 20.743 6.79244 21 6.53846L15.4615 1C15.2076 1.257 14.9051 1.46103 14.5717 1.60029C14.2383 1.73955 13.8806 1.81125 13.5192 1.81125C13.1579 1.81125 12.8002 1.73955 12.4668 1.60029C12.1334 1.46103 11.8309 1.257 11.5769 1Z"  stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
                                            <path d="M9.92283 17.0385C9.70067 17.2523 9.40428 17.3718 9.0959 17.3718C8.78752 17.3718 8.49114 17.2523 8.26898 17.0385L4.96129 13.7308C4.74741 13.5086 4.62793 13.2122 4.62793 12.9039C4.62793 12.5955 4.74741 12.2991 4.96129 12.0769L12.1536 4.88463C12.3758 4.67075 12.6721 4.55127 12.9805 4.55127C13.2889 4.55127 13.5853 4.67075 13.8074 4.88463L17.1151 8.19232C17.329 8.41448 17.4485 8.71086 17.4485 9.01924C17.4485 9.32762 17.329 9.62401 17.1151 9.84616L9.92283 17.0385Z"  stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
                                            </svg>White Label
                                            </a></li>
                                      
                                    </ul>
                                    </div>`;
                                        }
                                    }
                                    // script_html += "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' ><button id='closeNoCode' style='position:absolute;top:35.5px; left:78%;z-index:100000000000000000000000'>X</button><div><img  style='width:32px; height:32px; margin-right:10px;' onerror=\"this.src='https://cheatlayer.com/favicon.ico';\"   class='cheatlayer cheatlayer runscript'  src='https://cheatlayer.com/logo.png'></img> </div> <a  style='margin-left:10px;margin-right:10px;' class='cheatlayer cheatlayer runscript'   aria-label='Request' type='button' id='Request' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Request'>Request Script7</a></div></div><hr><center><a href='#' id='reportBug' style='background-color:#FFFFFF; border:1px solid #FFFFFF; border-radius:0px; color:#000000; margin-right:10px; padding:0px 10px 0px 0px;font-size:12px;'>Report</a></center>";

                                    $('HTML').append(`<div class='cheatlayer cheatlayer rowt'  style='background-color:white;color:black;'><div class='cheatlayer cheatlayer col-xs-4' style='color:gray;z-index:100000; opacity:1.0; width:10000px; height:20px;width:100px; position:fixed; left:5px; top:0px;'><div id='cheatmenu' class='cheatlayer cheatlayer col-xs-4' style='display:none;color:gray;z-index:10000; opacity:1.0; width:100px; height:20px;width:100px; position:fixed; left:0px; top:0px;'><div class='cheatlayer' style='white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 200px;' class='cheatlayer' >
<a class="cheatlayer text-area-start-right tooltipcheat hatel"  
    data-tippy-interactive="true" 
    data-tippy-theme="light rounded"  
    data-tippy-placement="bottom" 
    data-tippy-html="#contentCheat" 
    data-tippy-trigger="click" style='background-color:white;'>
<article id='filemenu' class='cheatlayer' ><img width='64px' height='64px' src="https://cheatlayer.com/images/textarea/file-text-area.png" class="img-fluid">File</article>
</a>  
</div>

<div id="contentCheat" style="display: none;z-index:1000000000">
    <ul class="cheatlayer code-gen-list text-area-start-right" style="z-index:1000000000">
        <li><a id='new'class='cheatlayer cheatlayer runscript newcheat' type='button' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >New</article></a></li>
            <li><a id='newFolder'class='cheatlayer cheatlayer runscript newFolder' type='button' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >New Folder</article></a></li>
            
            <li><a id='export'class='cheatlayer cheatlayer runscript exportcheat' type='button' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Export Cheats</article></a></li>
            <li><a id='import'class='cheatlayer cheatlayer runscript exportcheat' type='button' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Import Cheats</article></a></li>
        <li><a id='play'  class='cheatlayer cheatlayer runscript runeditorcheat'  class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Run (CTRL+R)</article></a></li>
        <li><a id='add'  class='cheatlayer cheatlayer runscript savecheat'  class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Save (CTRL+S)</article></a></li>
        <li><a  id='addAs' class='cheatlayer cheatlayer runscript saveascheat'   class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Save As</article></a></li>
        <li><a id='generate' class='cheatlayer cheatlayer runscript generategptcheat'   class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >GPT-3 Code Generator (CTRL+G)</article></a></li>
    </ul>
    </div></div></div> </div> <div class='cheatlayer cheatlayer col-xs-4' ><a style='margin-left:10px;margin-right:10px;' class='cheatlayer cheatlayer runscript'  aria-label='0' type='button' data-dismiss='alert'  id='generate' href='#' style='display:none;' >Generate GPT Code</a></div></div> <div id='newnocode' class='cheatlayer cheatlayer' style='border:1px solid black;display:none;resize:both;background:rgba(255,255,255,0.3);overflow-x:auto;overflow-y:auto;position:fixed;z-index:10000; boder:1px solid black;top:64.5px; font-size:24px; left:0%;width: calc(100% - 270px);height:70%;color:white'></div>
     <div id='script' class='cheatlayer cheatlayer' width='100%' height='100%' style='height:70%; overflow-y:auto;overflow-x:auto;width:100%;background-color: #16092F !important;z-index:-10000; opacity:0.8;width: calc(100% - 270px); height:70%; overflow-y:hidden;overflow-x:hidden; position:fixed; left:0px; top:64.5px; font-size:24px;  display:none;font-size:24px;'></div><textarea id='console' placeholder='Console Output' class='cheatlayer cheatlayer' width='100%' height='100%' style='height:70%; overflow-y:hidden;overflow-x:hidden;width:100%;color:gray;z-index:-10000; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:hidden;overflow-x:hidden; position:fixed; left:0px; top:calc(70% + 64.5px); font-size:24px; min-height:300px; display:none;font-size:24px;'></textarea><div id='schedulerblock' class='cheatlayer cheatlayer' width='100%' height='100%' style='height:70%;diplay:none; overflow-y:hidden;overflow-x:hidden;width:100%;color:gray;z-index:-10000; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:hidden;overflow-x:hidden; position:fixed; left:40%; top:calc(70% + 64.5px); font-size:24px; min-height:300px; display:none;font-size:24px;'></div>
     <script>function addAs(){ window.postMessage({scriptsNewAs: scripts } , '*');(scripts);  }function add(){window.postMessage({scriptsNew: scripts } , '*');} document.getElementById('new').addEventListener('click', function(){window.postMessage({newScript: 'test' } , '*');}); var showeditor = false; function show(){if(showeditor){  document.getElementById('schedulerblock').style='display:none;z-index:-1000;';document.getElementById('console').style='display:none; z-index:-10000;'; document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;display:none; z-index:-10000;';document.getElementById('script').style='display:none; display:none; z-index:-10000;'; document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;display:none; z-index:-10000;'; showeditor = false;}else{showeditor = true;if(document.getElementById('script')){document.getElementById('script').style='display:none;z-index:100005; opacity:1.0;width: calc(100% - 270px); height:70%; overflow-y:hidden;overflow-x:hidden; position:fixed; left:0px; top:64.5px; font-size:24px; ';}if(document.getElementById('console')){document.getElementById('schedulerblock').style='display:none; background-color:white;color:black;z-index:100005; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:hidden;overflow-x:hidden; position:fixed; left:40%; top:calc(70% + 64.5px); font-size:24px; min-height:calc(30% - 64.5px); background-color:white;';
     document.getElementById('console').style='display:none; background-color:white;color:black;z-index:100005; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:scroll;overflow-x:scroll;     resize:both; position:fixed; left:0px; top:calc(70% + 64.5px); font-size:24px; min-height:calc(30% - 64.5px); background-color:white;';}if(document.getElementById('scriptlist')){document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;background-color:white;color:black;z-index:1000005; opacity:1.0; width:270px;height:100%; overflow-y:auto;overflow-x:hidden;overflow-x:hidden; position:fixed; right:0px; top:0px;';}} } document.getElementById('add').addEventListener('click', add);document.getElementById('addAs').addEventListener('click', addAs);function addScript(){var script = $('#script').val();}</script>`);


                                    $('HTML').append(` <script>
        function evalScript(){window.postMessage({evalScript: 'test' } , '*');} document.getElementById('play').addEventListener('click', evalScript);  </script>
        `);



                                    $('HTML').append(`<style>/* Dropdown Button */ .dropbtn { background-color: white; color: black; padding: 16px; font-size: 16px; border: none; } /* The container <div> - needed to position the dropdown content */ .dropdown { position: relative; display: inline-block; } /* Dropdown Content (Hidden by Default) */ .dropdown-content { display: none; position: absolute; background-color: #f1f1f1; min-width: 160px; box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2); z-index: 1; } /* Links inside the dropdown */ .dropdown-content a { color: black; padding: 12px 16px; text-decoration: none; display: block; } /* Change color of dropdown links on hover */ .dropdown-content a:hover {background-color: #ddd;} /* Show the dropdown menu on hover */ .dropdown:hover .dropdown-content {display: block;} /* Change the background color of the dropdown button when the dropdown content is shown */ .dropdown:hover .dropbtn {background-color: #3e8e41;} hr{ border-top: 1px solid white; width:100%; } .col-xs-4{padding:0px !important;} .rowt { padding:0px !important;border-bottom:1px solid white; white-space: nowrap;   text-align: left; } .rowt > div {display: inline-block; }</style><div class='cheatlayer cheatlayer rowt' ><div id='scriptlist' class='cheatlayer cheatlayer col-xs-4' style='overflow-y:hidden;overflow-x:hidden; padding:0px !important;display:none; background-color:white;color:black;z-index:1000005; opacity:1.0; width:400px ;height:100%; overflow-y:hidden;overflow-x:hidden; position:fixed; right:0px; top:0px; '><div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' ><center><div class='cheatlayer' style='font-size:34px;color:black;padding:10px;'><center><button href='#' id='editorOpen'  class='cheatlayer'style='font-size:32px;background-color:#FFFFFF; border:1px solid #FFFFFF; border-radius:0px; color:#000000; margin-right:10px; padding:5px;z-index:1000000000000000000;'><img class='cheatlayer' width='100%' src="` + chrome.runtime.getURL("logo.png") + `" class='cheatlayer img-fluid'> </button></center>   </div></center></div>
                                    <div class='cheatlayer right-container  hide-sm-device-cc'><div id='no_code_parameters' class='cheatlayer cheatlayer rowt' style='display:none;padding:10px !important;margin:5px;background-color:white;color:black; width:100%;' ></div><div id='newonboard' class='cheatlayer cheatlayer rowt' style='margin:5px;background-color:white;color:black; width:100%;' ></div><ul class='cheatlayer cheat-code-company-list'>" + script_html + "</ul></div></div></div><script>var scripts =\` + JSON.stringify(scripts) + \` ;function runScript(){var num = parseInt(this.getAttribute('aria-label')); (scripts[num].script);eval(scripts[num].script);}function editScript(){(editScript);var num = parseInt(this.getAttribute('aria-label')); scriptID = num; window.postMessage({setEditor: scripts[num].script, last_saved:scripts[num].name , no_code: scripts[num].no_code_container} , '*');last_saved=scripts[num].name;(num);} function removeScript(){var num = scriptID; scripts.splice(num,1);  window.postMessage({scripts: scripts } , '*'); } function publishScript(){var num = scriptID; } </script>`);
                                    var script_listen = "setTimeout(function(){";
                                    $("#newonboard").append(`
                                    <div class="cheatlayer btn-group" style="width:100%"><button style="width:100%" class="cheatlayer" id="sendAtlas">Add Automation</button></div>
                                `);

                                
                     //$('#messagesCheatCheat').append('<button class="saveChat">Save</button><button class="stopChat">Stop</button>');
                     //$('#messagesCheatCheat').animate({ scrollTop: $('#messagesCheatCheat').prop('scrollHeight') }, 30);

                                $(document).on('click', '#sendAtlas', function () {
                                    addCheat();
                                                            
                                    });
                                    
                                    $(document).on("keypress", function (e) {
                                        
                                        if (e.which == 13 && e.target.id == "atlasInput") {
                                            $('#sendAtlas').click();
                                            return false;
                                        }
                                    });
        

    
                             
                                    $("#scriptlist").append(`<div class="cheatlayer btn-group" style="width:100%">
                                    <button id='startlayer' class='cheatlayer' style="display:none;position:fixed; bottom:40px; right:0px;width:20%;" style='cheatlayer'>+ New Cheat</button>

                                    <button id='nocodelayer' class='cheatlayer' style="position:fixed; bottom:0px; right:0px;width:90px;" style='cheatlayer'>No-Code</button>
                                    <button id='codelayer' class='cheatlayer'  style="position:fixed; bottom:0px; right:90px;width:90px;" style='cheatlayer'>Code</button>
                                    <button id='websitelayer' class='cheatlayer' style="position:fixed; bottom:0px; right:200px;width:100px;" style='cheatlayer'>Website</button>
                                  </div>`);
                                    if (!GotScripts) {
                                        GotScripts = true;
                                        $(document).on('click', '#play', function () {
                                            window.postMessage({ evalScript: 'test' }, '*');
                                        });
                                    }

                                    $(document).on('click', '#add', function () {
                                        window.postMessage({ scriptsNew: scripts }, '*');
                                    });
                                    $(document).on('click', '#addAs', function () {
                                        window.postMessage({ scriptsNewAs: scripts }, '*'); (scripts);

                                    });
                                    $(document).on('click', '#generate', function () {
                                        window.postMessage({ generate: 'input' }, '*');
                                    });
                                    $(document).on('click', '#new', function () {
                                        window.postMessage({ newScript: 'test' }, '*');
                                    });

                                    $(document).on('click', '#startlayer', function () {

                                        box.hide();

                                    });
                                    $(document).on('click', '#nocodelayer', function () {
                                        box.hide();


                                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                                        document.getElementById('newnocode').style.display = 'block';
                                        document.getElementById('script').style.display = 'none';
                                        document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
                                        document.getElementById('cheatmenu').style.display = 'block';

                                        drawNoCodeContainer()




                                    });
                                    $(document).on('click', '#codelayer', function () {

                                        box.hide();

                                        if (window.location.href.includes('cheatlayer')) {

                                            if (last_complete == 10) {
                                                introJs().setOptions({
                                                    steps: [
                                                        {
                                                            element: document.querySelector('#filemenu'),
                                                            intro: 'Click File, then GPT-3 Code Generator to generate custom automations:'
                                                        }]
                                                }).start();
                                            }
                                        }


                                        document.getElementById('newnocode').style.display = 'none';
                                        document.getElementById('script').style.display = 'block';
                                        document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
                                        document.getElementById('cheatmenu').style.display = 'block';
                                        if (no_code_container.length > 0) {
                                            for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                                                if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                                    leader_lines[kk].remove();
                                                    leader_lines[kk] = null;
                                                }

                                            }
                                        }
                                        for (var kk = 0; kk < leader_lines.length - 1; kk++) {
                                            if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                                leader_lines[kk].remove();
                                                leader_lines[kk] = null;
                                            }

                                        }
                                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


                                        if (window.location.href.includes("chat.openai.com")) {


                                            //Generating GPT-3 code.. Please wait up to 20 seconds//Generated Script id=3
                                            var divs = document.getElementsByTagName('code');
                                            //Loop through divs and find the divs with class that includes "!whitespace-pre"
                                            var chat_code = "";
                                            for (var i = 0; i < divs.length; i++) {
                                                if (divs[i].className.includes("whitespace-pre")) {
                                                    //////console.log(divs[i].innerText);
                                                    //////console.log(divs[i].innerText);
                                                    ////console.log(divs[i].innerText);
                                                    chat_code += divs[i].innerText;
                                                }
                                            }

                                            window.editor = ace.edit("script");
                                            //window.editor.setValue(old_code);
                                            window.editor.setAutoScrollEditorIntoView(true);
                                            window.editor.getSession().setMode("ace/mode/javascript");
                                            window.editor.setTheme("ace/theme/tomorrow");

                                            window.editor.setValue(chat_code);
                                            runScriptEval();

                                            //endcode GPT Prompt: Collect all the div on the page with an inner text that includes poop and print them. 
                                            //Generating GPT-3 code.. Please 
                                        }



                               


                                    });
                                    $(document).on('click', '#editorOpen', function () {
                                        layer++;
                                        if (layer % 2 == 0) {
                                            document.getElementById('scriptlist').style.height = '10%';
                                            document.getElementById('codelayer').style.display = 'none';
                                            document.getElementById('websitelayer').style.display = 'none';
                                            document.getElementById('nocodelayer').style.display = 'none';

                                        } else {
                                            document.getElementById('scriptlist').style.height = '100%';

                                            document.getElementById('codelayer').style.display = 'block';
                                            document.getElementById('websitelayer').style.display = 'block';
                                            document.getElementById('nocodelayer').style.display = 'block';
                                        }

                                    });
                                    $(document).on('click', '#websitelayer', function () {


                                        document.getElementById('newnocode').style.display = 'none';
                                        document.getElementById('script').style.display = 'none';
                                        document.getElementById('console').style.display = 'none'; document.getElementById('schedulerblock').style.display = 'none';
                                        document.getElementById('cheatmenu').style.display = 'none';
                                        if (no_code_container.length > 0) {
                                            for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                                                if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                                    leader_lines[kk].remove();
                                                    leader_lines[kk] = null;
                                                }

                                            }
                                        }
                                        for (var kk = 0; kk < leader_lines.length - 1; kk++) {
                                            if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                                leader_lines[kk].remove();
                                                leader_lines[kk] = null;
                                            }

                                        }
                                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                                    });
                                    $(document).on('click', '.schedulecheat', function () {
                                        document.getElementById('scheduler').remove();
                                        var scheduler_html = `
                                <div id="scheduler"  class="cheatlayer modalcheat" style='display:none;position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
                                <div  class='modalcheat-content' style='border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:33%;z-index:100000000000;position:fixed;top:5px;left:33%;background-color:white;color:black !important;'>
                                <br><br><br><center><form id='submitScheduleForm' class='cheatlayer cheatlayer form-horizontal'>
                                Automation Frequency:<select class='selectCheat selectBox  select' style='color:black' name='frequency' id='frequency'><option  value='hourly'>Hourly</option><option value='daily'>Daily</option><option value='Monday'>Monday</option><option value='Tuesday'>Tuesday</option><option value='Wednesday'>Wednesday</option><option value='Thursday'>Thursday</option><option value='Friday'>Friday</option><option value='Saturday'>Saturday</option><option value='Sunday'>
                                Sunday</option><option value='1'>Day 1</option><option value='2'>Day 2</option><option value='3'>Day 3</option><option value='4'>Day 4</option><option value='5'>Day 5</option><option value='6'>Day 6</option><option value='7'>Day 7</option><option value='8'>Day 8</option><option value='9'>Day 9</option><option value='10'>Day 10</option><option value='11'>Day 11</option><option value='12'>Day 12</option><option value='13'>Day 13</option><option value='14'>Day 14</option><option value='15'>Day 15</option><option value='16'>Day 16</option><option value='17'>Day 17</option><option value='18'>Day 18</option><option value='19'>Day 19</option>
                                <option value='20'>Day 20</option>
                                <option value='21'>Day 21</option>
                                <option value='22'>Day 22</option>
                                <option value='23'>Day 23</option>
                                <option value='24'>Day 24</option><option value='25'>Day 25</option><option value='26'>Day 26</option>
                                <option value='27'>Day 27</option><option value='28'>Day 28</option><option value='29'>Day 29</option>
                                <option value='30'>Day 30</option><option value='31'>Day 31</option></select><br><br><br>
                                Hour(only for Daily+):<select class='selectCheat selectBox  select' style='color:black' name='hour' id='hour'><option value='1'>1</option><option value='2'>2</option>
                                <option value='3'>3</option><option value='4'>4</option><option value='5'>5</option><option value='6'>6</option><option value='7'>7</option>
                                <option value='8'>8</option><option value='9'>9</option><option value='10'>10</option><option value='11'>11</option><option value='12'>12</option>
                                <option value='13'>13</option><option value='14'>14</option><option value='15'>15</option><option value='16'>16</option><option value='17'>17</option><option value='18'>18</option>
                                <option value='19'>19</option><option value='20'>20</option><option value='21'>21</option><option value='22'>22</option><option value='23'>23</option><option value='24'>24</option></select><br><br><br>
                                <input class='cheatlayer' type='text' id='scriptschedule' name='script' disabled><br><input class='cheatlayer' type='text' id='websiteschedule' name='website' disabled><br><br><br><button type='submit' id='submitSchedule' class='cheatlayer cheatlayer dropbtn'>Schedule</button>
</form>                                <button  id='cancelSchedule' class='cheatlayer cheatlayer dropbtn'>Cancel</button><center></div> </div>`;
                                        script_listen += "function processForm(e) { if (e.preventDefault) e.preventDefault(); (e); document.getElementById('scheduler').style.display = 'none'; var name = document.getElementById('scriptschedule').value;  var frequency = document.getElementById('frequency').value; var hour = document.getElementById('hour').value;  var start = document.getElementById('websiteschedule').value;  window.postMessage({formschedule: name , start: start, frequency: frequency, hours: hour} , '*');  setTimeout(function(){},2000);   return false; } var form = document.getElementById('submitScheduleForm'); if (form.attachEvent) { form.attachEvent('submit', processForm); } else { form.addEventListener('submit', processForm); document.getElementById('scheduler').style.display = 'none';}"
                                        $("body").append(scheduler_html);

                                        document.getElementById('scheduler').style.display = 'block'; ('schedule')
                                            ; var num = parseInt($(this).attr('aria-label'));
                                        (scripts[num].script); window.postMessage({ schedule: scripts[num].script, start: scripts[num].start, index: num }, '*');
                                        document.getElementById('scriptschedule').value = scripts[num].name;
                                        document.getElementById('websiteschedule').value = scripts[num].start;
                                    });
                                    $(document).on('click', '.whitecheat', function () {
                                        ('editscript');
                                        var num = parseInt($(this).attr('aria-label'));
                                        (scripts[num].script);
                                        window.postMessage({ whitelabel: scripts[num].script, start: scripts[num].start, index: num, name: scripts[num].name }, '*');

                                    });
                                    if (true) {

                                        $(document).on('click', '.removecheat', function () {
                                            if (!document.getElementById('loadingCheat')) {
                                                $('HTML').append(`<div id='loadingCheat' style='width: calc(100% - 270px);height:90%;left:0%;top:64.5px;position:fixed;background-color:white;z-index:1000000;'><img style='position:fixed;left:25%; top:30%;' src='` + chrome.runtime.getURL("logo.gif") + `'></img></div>`);
                                            } else {
                                                $('#loadingCheat').show();
                                            }
                                            var num = parseInt($(this).attr('aria-label'));
                                            scripts[num].deleted = "true";
                                            window.postMessage({ scripts: scripts }, '*');;

                                        });


                                        $(document).on('click', '.loopcheat', function () {
                                            if (true) {
                                                var script_code = scripts[$(this).attr('aria-label')].script;
                                                var delayloop = prompt("Enter delay in seconds between each loop.");
                                                var endloop = prompt("Enter the max executions loop.");
                                                var total = 0;
                                                if (!script_code.includes("[Tab Recording]")) {
                                                    ////console.log("Running Script!");
                                                    function slowLooper() {
                                                        eval(script_code);
                                                        if (total < endloop) {
                                                            setTimeout(slowLooper, delayloop * 1000);

                                                            total += 1;
                                                        }
                                                    }
                                                    slowLooper();

                                                } else {
                                                    ////console.log("Running Recording!");

                                                    SendMessage("loopRecording", "recording", { script_code: script_code, end: endloop });

                                                }

                                                var datascript = script_code;



                                            }

                                        });

                                        $(document).on('click', '.editcheat', function () {

                                            document.getElementById('cheatmenu').style.display = 'block';
                                            document.getElementById('script').style.display = 'block';
                                            document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
                                            var num = parseInt($(this).attr('aria-label'));
                                            window.postMessage({ setEditor: scripts[num].script, last_saved: scripts[num].name, no_code: scripts[num].no_code_container }, '*');
                                            last_saved = scripts[num].name; (num); window.postMessage({ removeLine: 'test' }, '*');

                                        });
                                        if (!GotScripts) {
                                            GotScripts = true;

                                        }
                                        added_functs = true;
                                    }

                                    //                  script_listen += "document.getElementById('remove').onclick =  function(){('editscript');var num = scriptID; scripts.splice(num,1);  window.postMessage({scripts: scripts } , '*'); };";
                                    script_listen += " var opened_editor = false; var layer = 0;    document.getElementById('editorOpen').onclick = function(){ layer++; if(layer%2 == 0){document.getElementById('scriptlist').style.height='10%';}else{document.getElementById('scriptlist').style.height='100%';}};document.getElementById('generate').onclick= function(){  window.postMessage({generate: 'input'} , '*');} ;";

                                    script_listen += "},1000);"
                                    var script = document.createElement("script");
                                    script.innerHTML = script_listen;
                                    document.body.appendChild(script);
                                    $('HTML').append("<script>   document.getElementById('schedulerblock').style='display:none;z-index:-1000;';document.getElementById('console').style='display:none; z-index:-10000;'; document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;display:none; z-index:-10000;';document.getElementById('script').style='display:none; display:none; z-index:-10000;'; document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;display:none; z-index:-10000;'; showeditor = false;</script>");


                                }

                                tippy('.tooltipcheat', { arrow: true });
                                if (onboard == 0) {
                                    //startOnboard(0);
                                }

                                var script_html = "";

                                var counter = 0;

                                var script_listen = "setTimeout(function(){";


                                var scheduler_scripts = "";
                                var scheduler_code = "";
                                scheduler_code += `<table style="font-size:12px;"><tr><td>Scheduled Cheat</td><td>Frequency</td><td>Hour</td><td>Website</td><td>Remove</td></tr>`;
                                for (var kk = 0; kk < schedule.length; kk++) {
                                    scheduler_code += "<tr><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].formschedule + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].frequency + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].hours + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].start + "</td><td><a href='#' id='removeSchedule" + kk + "' aria-label='" + schedule[kk].formschedule + "," + schedule[kk].frequency + "," + schedule[kk].hours + "," + schedule[kk].start + "'>Remove</a></td></tr> ";
                                    scheduler_scripts += "document.getElementById('removeSchedule" + kk + "').onclick = function(){var scheduleDetails = this.getAttribute('aria-label');window.postMessage({removeSchedule: scheduleDetails} , '*'); };";

                                }
                                scheduler_code += `</table>`;
                                //    $("#schedulerblock").html(scheduler_code);

                                var script = document.createElement("script");
                                script.innerHTML = scheduler_scripts;
                                document.body.appendChild(script);
                                // script_html += "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' ><div> </div> <a  style='margin-left:10px;margin-right:10px;' class='cheatlayer cheatlayer runscript'   aria-label='Request' type='button' id='Request' class='cheatlayer cheatlayer close' data-dismiss='alert' href='https://cheatlayer.com/request'  target='_blank' aria-label='Request'>Request Script6</a></div></div><hr>";

                                //  for (var kk = 0; kk < schedule.length; kk++) {
                                //    script_html += "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' ><div></div> " + schedule[kk].formschedule + " " + schedule[kk].frequency + "<br> " + schedule[kk].hours + " " + schedule[kk].start + " <br><a href='#' id='removeSchedule" + kk + "' aria-label='" + schedule[kk].formschedule + "," + schedule[kk].frequency + "," + schedule[kk].hours + "," + schedule[kk].start + "'>Remove</a> </div></div><hr>";
                                //    script_listen += "document.getElementById('removeSchedule" + kk + "').onclick = function(){var scheduleDetails = this.getAttribute('aria-label');window.postMessage({removeSchedule: scheduleDetails} , '*'); };";

                                //  }
                                //          SendMessage("Community", "scripts", "", community_scripts);

                                script_listen += "},2000);"

                                $("#scriptlist").append(script_html);

                                var scheduler_html = `
                                <div id="scheduler"  class="cheatlayer modalcheat" style='display:none;position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
                                <div  class='modalcheat-content' style='border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:33%;z-index:100000000000;position:fixed;top:5px;left:33%;background-color:white;color:black !important;'>
                                <br><br><br><center><form id='submitScheduleForm' class='cheatlayer cheatlayer form-horizontal'>
                                Automation Frequency:<select class='selectCheat selectBox  select' style='color:black' name='frequency' id='frequency'><option  value='hourly'>Hourly</option><option value='daily'>Daily</option><option value='Monday'>Monday</option><option value='Tuesday'>Tuesday</option><option value='Wednesday'>Wednesday</option><option value='Thursday'>Thursday</option><option value='Friday'>Friday</option><option value='Saturday'>Saturday</option><option value='Sunday'>
                                Sunday</option><option value='1'>Day 1</option><option value='2'>Day 2</option><option value='3'>Day 3</option><option value='4'>Day 4</option><option value='5'>Day 5</option><option value='6'>Day 6</option><option value='7'>Day 7</option><option value='8'>Day 8</option><option value='9'>Day 9</option><option value='10'>Day 10</option><option value='11'>Day 11</option><option value='12'>Day 12</option><option value='13'>Day 13</option><option value='14'>Day 14</option><option value='15'>Day 15</option><option value='16'>Day 16</option><option value='17'>Day 17</option><option value='18'>Day 18</option><option value='19'>Day 19</option>
                                <option value='20'>Day 20</option>
                                <option value='21'>Day 21</option>
                                <option value='22'>Day 22</option>
                                <option value='23'>Day 23</option>
                                <option value='24'>Day 24</option><option value='25'>Day 25</option><option value='26'>Day 26</option>
                                <option value='27'>Day 27</option><option value='28'>Day 28</option><option value='29'>Day 29</option>
                                <option value='30'>Day 30</option><option value='31'>Day 31</option></select><br><br><br>
                                Hour(only for Daily+):<select class='selectCheat selectBox  select' style='color:black' name='hour' id='hour'><option value='1'>1</option><option value='2'>2</option>
                                <option value='3'>3</option><option value='4'>4</option><option value='5'>5</option><option value='6'>6</option><option value='7'>7</option>
                                <option value='8'>8</option><option value='9'>9</option><option value='10'>10</option><option value='11'>11</option><option value='12'>12</option>
                                <option value='13'>13</option><option value='14'>14</option><option value='15'>15</option><option value='16'>16</option><option value='17'>17</option><option value='18'>18</option>
                                <option value='19'>19</option><option value='20'>20</option><option value='21'>21</option><option value='22'>22</option><option value='23'>23</option><option value='24'>24</option></select><br><br><br>
                                <input class='cheatlayer' type='text' id='scriptschedule' name='script' disabled><br><input class='cheatlayer' type='text' id='websiteschedule' name='website' disabled><br><br><br><button type='submit' id='submitSchedule' class='cheatlayer cheatlayer dropbtn'>Schedule</button>
</form>                                <button  id='cancelSchedule' class='cheatlayer cheatlayer dropbtn'>Cancel</button><center></div> </div>`;
                                script_listen += "function processForm(e) { if (e.preventDefault) e.preventDefault(); (e); document.getElementById('scheduler').style.display = 'none'; var name = document.getElementById('scriptschedule').value;  var frequency = document.getElementById('frequency').value; var hour = document.getElementById('hour').value;  var start = document.getElementById('websiteschedule').value;  window.postMessage({formschedule: name , start: start, frequency: frequency, hours: hour} , '*');  setTimeout(function(){},2000);   return false; } var form = document.getElementById('submitScheduleForm'); if (form.attachEvent) { form.attachEvent('submit', processForm); } else { form.addEventListener('submit', processForm); document.getElementById('scheduler').style.display = 'none';}"
                                $("body").append(scheduler_html);
                                var script = document.createElement("script");
                                script.innerHTML = script_listen;
                                document.body.appendChild(script);

                                $("#scriptlist").append(`<div class="cheatlayer btn-group" style="width:100%">
                                <button id='startlayer' class='cheatlayer' style="display:none;position:fixed; bottom:40px; right:0px;width:20%;" style='cheatlayer'>+ New Cheat</button>

                                <button id='nocodelayer' class='cheatlayer' style="position:fixed; bottom:0px; right:0px;width:90px;" style='cheatlayer'>No-Code</button>
                                <button id='codelayer' class='cheatlayer'  style="position:fixed; bottom:0px; right:90px;width:90px;" style='cheatlayer'>Code</button>
                                <button id='websitelayer' class='cheatlayer'style="position:fixed; bottom:0px; right:180px;width:90px;" style='cheatlayer'>Website</button>
                              </div>`);

                                $(document).on('click', '#cancelSchedule', function () {
                                    document.getElementById('scheduler').style.display = 'none';

                                });
                                $(document).on('click', '#nocodelayer', function () {
                                    window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                                    document.getElementById('newnocode').style.display = 'block';
                                    document.getElementById('script').style.display = 'none';
                                    document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
                                    document.getElementById('cheatmenu').style.display = 'block';

                                    drawNoCodeContainer()

                                });
                                $(document).on('click', '#codelayer', function () {
                                    box.hide();

                                    if (window.location.href.includes('cheatlayer')) {

                                        if (last_complete == 10) {
                                            setTimeout(function () {
                                                introJs().setOptions({
                                                    steps: [
                                                        {
                                                            element: document.querySelector('#filemenu'),
                                                            intro: 'Click File, then GPT-3 Code Generator to generate custom automations:'
                                                        }]
                                                }).start();
                                            }, 1000);
                                        }
                                    }


                                    document.getElementById('newnocode').style.display = 'none';
                                    document.getElementById('script').style.display = 'block';
                                    document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
                                    document.getElementById('cheatmenu').style.display = 'block';
                                    //         ////console.log(leader_lines);
                                    if (no_code_container.length > 0) {
                                        for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                                            if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                                leader_lines[kk].remove();
                                                leader_lines[kk] = null;
                                            }

                                        }
                                    }
                                    for (var kk = 0; kk < leader_lines.length - 1; kk++) {
                                        if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                            leader_lines[kk].remove();
                                            leader_lines[kk] = null;
                                        }

                                    }
                                    window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


                                    if (window.location.href.includes("chat.openai.com")) {

                                            //Generating GPT-3 code.. Please wait up to 20 seconds//Generated Script id=3
                                            var divs = document.getElementsByTagName('code');
                                            //Loop through divs and find the divs with class that includes "!whitespace-pre"
                                            var chat_code = "";
                                            for (var i = 0; i < divs.length; i++) {
                                                if (divs[i].className.includes("whitespace-pre")) {
                                                    //////console.log(divs[i].innerText);
                                                    //////console.log(divs[i].innerText);
                                                    ////console.log(divs[i].innerText);
                                                    chat_code += divs[i].innerText;
                                                }
                                            }

                                            window.editor = ace.edit("script");
                                            //window.editor.setValue(old_code);
                                            window.editor.setAutoScrollEditorIntoView(true);
                                            window.editor.getSession().setMode("ace/mode/javascript");
                                            window.editor.setTheme("ace/theme/tomorrow");

                                            window.editor.setValue(chat_code);
                                            runScriptEval();



                                        //endcode GPT Prompt: Collect all the div on the page with an inner text that includes poop and print them. 
                                        //Generating GPT-3 code.. Please 
                                    }


                                   
                                });
                                $(document).on('click', '#editorOpen', function () {
                                    layer++;
                                    if (layer % 2 == 0) {
                                        document.getElementById('scriptlist').style.height = '10%';
                                        document.getElementById('codelayer').style.display = 'none';
                                        document.getElementById('websitelayer').style.display = 'none';
                                        document.getElementById('nocodelayer').style.display = 'none';

                                    } else {
                                        document.getElementById('scriptlist').style.height = '100%';

                                        document.getElementById('codelayer').style.display = 'block';
                                        document.getElementById('websitelayer').style.display = 'block';
                                        document.getElementById('nocodelayer').style.display = 'block';
                                    }

                                });
                                $(document).on('click', '#websitelayer', function () {



                                    document.getElementById('newnocode').style.display = 'none';
                                    document.getElementById('script').style.display = 'none';
                                    document.getElementById('console').style.display = 'none'; document.getElementById('schedulerblock').style.display = 'none';
                                    document.getElementById('cheatmenu').style.display = 'none';
                                    if (no_code_container.length > 0) {
                                        for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                                            if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                                leader_lines[kk].remove();
                                                leader_lines[kk] = null;
                                            }

                                        }
                                    }
                                    for (var kk = 0; kk < leader_lines.length - 1; kk++) {
                                        if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                            leader_lines[kk].remove();
                                            leader_lines[kk] = null;
                                        }

                                    }
                                    window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                                });

                            }
                        });

                    } else {
                        var created = new Date(msg.scripts.started);
                        var now = new Date();
                        const diffTime = Math.abs(now - created);
                        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
                        (msg.scripts);
                        user_plan = msg.scripts.plan;
                        bootcampS2 = msg.scripts.bootcampS2;
                        user_email = msg.scripts.user_email;
                        ////console.log("USER EMAIL ")
                        ////console.log(user_email)
                        if (msg.scripts.plan == "") {
                            alert("Log in at Cheatlayer.com and re-install the extension.");

                        } else {
                            scripts = msg.scripts.scripts;
                            folders = msg.scripts.folders;

                            community_scripts = msg.scripts.community_scripts;

                            var script_html = "";
                            for (var kk = 0; kk < folders.length; kk++) {
                                if (folders[kk].split(" ").join("").length == 0) {
                                    continue;
                                }
                                script_html += `  <li class="cheatlayer folder-line-cheatlayer" aria-label="` + folders[kk] + `">
                                <div class="cheatlayer list-inner code-list-wrap">
                               
                                    <div class='cheatlayer' style='white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 100%;' class='cheatlayer' >
                                        <img src="` + chrome.runtime.getURL("folder.png") + `" width="32px" height="32px" style="margin:10px" class="cheatlayer img-fluid">
                                        <span class='cheatlayer'style="position:relative;top:0px;white-space: pre-wrap; word-wrap:break-word;" >` + folders[kk] + `</span>
                                    </div>
                                   
                                </div>
                            
                            </li>`;
                            }
                            for (var kk = 0; kk < scripts.length; kk++) {
                                if (scripts[kk].deleted != "true") {

                                    if (scripts[kk].start.includes("*")) {
                                        scripts[kk].start = "cheatlayer.com";
                                    }

                                    var temstart = scripts[kk].start;
                                    if (scripts[kk].start.includes("http")) {
                                        temstart = scripts[kk].start.split("//")[1];
                                    }
                                    script_html += `<li class="cheatlayer code-line-cheatlayer">
                                <div class="cheatlayer list-inner code-list-wrap">
                               
                                    <div class='cheatlayer cheatline' style='white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 100%;' class='cheatlayer' >
                                        <img src="https://` + temstart + `/favicon.ico" width="32px" height="32px" style="margin:10px" class="cheatlayer img-fluid">
                                        <span class='cheatlayer'style="position:relative;top:0px;white-space: pre-wrap; word-wrap:break-word;" >` + scripts[kk].name + `</span>
                                    </div>
                                   
                                </div>
                            
                            </li>
                            <div id="content` + kk + `"  class='cheatlayer'style="display: none;z-index:100000">
                            <ul class="cheatlayer code-gen-list" style="z-index:1000000000">
                                <li><a  style="display: block;" class='cheatlayer cheatlayer runscript runcheat' type='button' aria-label='` + kk + `' id='run` + kk + `' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M11 21C16.5228 21 21 16.5228 21 11C21 5.47715 16.5228 1 11 1C5.47715 1 1 5.47715 1 11C1 16.5228 5.47715 21 11 21Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M3.66699 10.9998C3.66699 9.05492 4.43961 7.18965 5.81488 5.81439C7.19014 4.43912 9.0554 3.6665 11.0003 3.6665C12.9452 3.6665 14.8105 4.43912 16.1858 5.81439C17.561 7.18965 18.3337 9.05492 18.3337 10.9998" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M8.33301 7L9.72901 12.714C9.78431 12.9026 9.88075 13.0766 10.0114 13.2234C10.142 13.3703 10.3036 13.4863 10.4845 13.5632C10.6654 13.6401 10.8611 13.6759 11.0574 13.668C11.2538 13.6601 11.446 13.6088 11.6202 13.5177C11.7943 13.4267 11.9461 13.2981 12.0646 13.1413C12.1831 12.9845 12.2654 12.8033 12.3054 12.6109C12.3455 12.4185 12.3424 12.2196 12.2963 12.0286C12.2502 11.8375 12.1624 11.659 12.039 11.506C12.041 11.4653 8.33301 7 8.33301 7Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    </svg>
                                    Run</a></li>
                                    <li><a  style="display: block;" class='cheatlayer cheatlayer runscript loopcheat'   aria-label='` + kk + `' type='button' id='loop` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M11 21C16.5228 21 21 16.5228 21 11C21 5.47715 16.5228 1 11 1C5.47715 1 1 5.47715 1 11C1 16.5228 5.47715 21 11 21Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M3.66699 10.9998C3.66699 9.05492 4.43961 7.18965 5.81488 5.81439C7.19014 4.43912 9.0554 3.6665 11.0003 3.6665C12.9452 3.6665 14.8105 4.43912 16.1858 5.81439C17.561 7.18965 18.3337 9.05492 18.3337 10.9998" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M8.33301 7L9.72901 12.714C9.78431 12.9026 9.88075 13.0766 10.0114 13.2234C10.142 13.3703 10.3036 13.4863 10.4845 13.5632C10.6654 13.6401 10.8611 13.6759 11.0574 13.668C11.2538 13.6601 11.446 13.6088 11.6202 13.5177C11.7943 13.4267 11.9461 13.2981 12.0646 13.1413C12.1831 12.9845 12.2654 12.8033 12.3054 12.6109C12.3455 12.4185 12.3424 12.2196 12.2963 12.0286C12.2502 11.8375 12.1624 11.659 12.039 11.506C12.041 11.4653 8.33301 7 8.33301 7Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    </svg>
                                    Loop
                                    </a></li>
                                <li><a  style="display: block;" class='cheatlayer cheatlayer runscript editcheat' aria-label='` + kk + `' type='button' id='edit` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M1 21H11H21" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M11.2464 4.1427L16.7462 9.64238M11.2464 4.1427L14.3892 1L19.8888 6.49972L16.7462 9.64238L11.2464 4.1427ZM11.2464 4.1427L5.01684 10.3723C4.80847 10.5806 4.69141 10.8633 4.69141 11.1579V16.1974H9.73093C10.0256 16.1974 10.3082 16.0804 10.5166 15.8719L16.7462 9.64238L11.2464 4.1427Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    </svg>Edit
                                    </a></li>
                                <li><a  style="display: block;" class='cheatlayer cheatlayer runscript removecheat'   aria-label='` + kk + `' type='button' id='remove` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M18.7782 9.88867V20.3331C18.7782 20.7013 18.4798 20.9998 18.1115 20.9998H3.88932C3.52113 20.9998 3.22266 20.7013 3.22266 20.3331V9.88867"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M8.77734 16.5553V9.88867" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M13.2227 16.5553V9.88867" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M6.55556 5.44444H15.4444M21 5.44444H15.4444H21ZM1 5.44444H6.55556H1ZM6.55556 5.44444V1.66667C6.55556 1.29848 6.85403 1 7.22222 1H14.7778C15.146 1 15.4444 1.29848 15.4444 1.66667V5.44444H6.55556Z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                                    </svg>Remove
                                    </a></li>
                                <li><a  style="display: block;" class='cheatlayer cheatlayer runscript whitecheat'   aria-label='` + kk + `' type='button' id='whitelabel` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                                    <path d="M11.5769 1L1 11.5769C1.50617 12.0766 1.79742 12.754 1.81178 13.4651C1.82615 14.1763 1.5625 14.8649 1.07692 15.3846L6.61538 20.9231C7.13509 20.4375 7.82375 20.1739 8.53485 20.1882C9.24596 20.2026 9.9234 20.4938 10.4231 21L21 10.4231C20.743 10.1691 20.539 9.86664 20.3997 9.53323C20.2605 9.19982 20.1887 8.84209 20.1887 8.48077C20.1887 8.11945 20.2605 7.76172 20.3997 7.42831C20.539 7.0949 20.743 6.79244 21 6.53846L15.4615 1C15.2076 1.257 14.9051 1.46103 14.5717 1.60029C14.2383 1.73955 13.8806 1.81125 13.5192 1.81125C13.1579 1.81125 12.8002 1.73955 12.4668 1.60029C12.1334 1.46103 11.8309 1.257 11.5769 1Z"  stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
                                    <path d="M9.92283 17.0385C9.70067 17.2523 9.40428 17.3718 9.0959 17.3718C8.78752 17.3718 8.49114 17.2523 8.26898 17.0385L4.96129 13.7308C4.74741 13.5086 4.62793 13.2122 4.62793 12.9039C4.62793 12.5955 4.74741 12.2991 4.96129 12.0769L12.1536 4.88463C12.3758 4.67075 12.6721 4.55127 12.9805 4.55127C13.2889 4.55127 13.5853 4.67075 13.8074 4.88463L17.1151 8.19232C17.329 8.41448 17.4485 8.71086 17.4485 9.01924C17.4485 9.32762 17.329 9.62401 17.1151 9.84616L9.92283 17.0385Z"  stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
                                    </svg>White Label
                                    </a></li>
                              
                            </ul>
                            </div>`;
                                }
                            }
                            // script_html += "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' ><div> </div> <a  style='margin-left:10px;margin-right:10px;' class='cheatlayer cheatlayer runscript'   aria-label='Request' type='button' id='Request' class='cheatlayer cheatlayer close' data-dismiss='alert' href='https://cheatlayer.com/request'  target='_blank' aria-label='Request'>Request Script7</a></div></div><hr><center><a href='#' id='reportBug' style='background-color:#FFFFFF; border:1px solid #FFFFFF; border-radius:0px; color:#000000; margin-right:10px; padding:0px 10px 0px 0px;font-size:12px;'>Report</a></center>";
                            // for (var kk = 0; kk < schedule.length; kk++) {
                            //     script_html += "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' ><div></div> " + schedule[kk].formschedule + " " + schedule[kk].frequency + "<br> " + schedule[kk].hours + " " + schedule[kk].start + " <br><a href='#' id='removeSchedule" + kk + "' aria-label='" + schedule[kk].formschedule + "," + schedule[kk].frequency + "," + schedule[kk].hours + "," + schedule[kk].start + "'>Remove</a> </div></div><hr>";
                            //     script_listen += "document.getElementById('removeSchedule" + kk + "').onclick = function(){var scheduleDetails = this.getAttribute('aria-label');window.postMessage({removeSchedule: scheduleDetails} , '*'); };";

                            //}

                            $('HTML').append(`<div class='cheatlayer cheatlayer rowt'  style='background-color:white;color:black;'><div class='cheatlayer cheatlayer col-xs-4' style='color:gray;z-index:100000; opacity:1.0; width:10000000px; height:20px;width:5%; position:fixed; left:5px; top:0px;'><div id='cheatmenu' class='cheatlayer cheatlayer col-xs-4' style='display:none;color:gray;z-index:10000; opacity:1.0; width:100px; height:20px;width:100px; position:fixed; left:0px; top:0px;'><div class='cheatlayer' style='white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 200px;' class='cheatlayer' >
<a class="cheatlayer text-area-start-right tooltipcheat hatel"  
    data-tippy-interactive="true" 
    data-tippy-theme="light rounded"  
    data-tippy-placement="bottom" 
    data-tippy-html="#contentCheat" 
    data-tippy-trigger="click" style='background-color:white;'>
<article id='filemenu' class='cheatlayer' ><img width='64px' height='64px' src="https://cheatlayer.com/images/textarea/file-text-area.png" class="img-fluid">File</article>
</a>  
</div>

<div id="contentCheat" style="display: none;z-index:1000000000">
    <ul class="cheatlayer code-gen-list" style="z-index:1000000000">
        <li><a id='new'class='cheatlayer cheatlayer runscript newcheat' type='button' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >New</article></a></li>
            <li><a id='newFolder'class='cheatlayer cheatlayer runscript newFolder' type='button' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >New Folder</article></a></li>
            
            <li><a id='export'class='cheatlayer cheatlayer runscript exportcheat' type='button' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Export Cheats</article></a></li>
            <li><a id='import'class='cheatlayer cheatlayer runscript exportcheat' type='button' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Import Cheats</article></a></li>
        <li><a id='play'  class='cheatlayer cheatlayer runscript runeditorcheat'  class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Run (CTRL+R)</article></a></li>
        <li><a id='add'  class='cheatlayer cheatlayer runscript savecheat'  class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Save (CTRL+S)</article></a></li>
        <li><a  id='addAs' class='cheatlayer cheatlayer runscript saveascheat'   class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Save As</article></a></li>
        <li><a id='generate' class='cheatlayer cheatlayer runscript generategptcheat'   class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >GPT-3 Code Generator (CTRL+G)</article></a></li>
    </ul>
    </div></div></div> </div> <div id='newnocode' class='cheatlayer cheatlayer' style='border:1px solid black;display:none;resize:both;background:rgba(255,255,255,0.3);overflow-x:auto;overflow-y:auto;position:fixed;z-index:10000; boder:1px solid black;top:64.5px; font-size:24px; left:0%;width: calc(100% - 270px);height:70%;color:white'></div><div id='newnocode' class='cheatlayer cheatlayer' style='border:1px solid black;display:none;resize:both;background:rgba(255,255,255,0.3);overflow-x:auto;overflow-y:auto;position:fixed;z-index:10000; boder:1px solid black;top:64.5px; font-size:24px; left:0%;width: calc(100% - 270px);height:70%;color:white'></div><div id='newnocode' class='cheatlayer cheatlayer' style='border:1px solid black;display:none;resize:both;background:rgba(255,255,255,0.3);overflow-x:auto;overflow-y:auto;position:fixed;z-index:10000; boder:1px solid black;top:64.5px; font-size:24px; left:0%;width: calc(100% - 270px);height:70%;color:white'></div>
    <div id='script' class='cheatlayer cheatlayer' width='100%' height='100%' style='height:70%; overflow-y:auto;overflow-x:auto;width:100%;background-color: #16092F !important;z-index:-10000; opacity:0.8;width: calc(100% - 270px); height:70%; overflow-y:hidden;overflow-x:hidden; position:fixed; left:0px; top:64.5px; font-size:24px;  display:none;font-size:24px;'></div><textarea id='console' placeholder='Console Output' class='cheatlayer cheatlayer' width='100%' height='100%' style='height:70%; overflow-y:hidden;overflow-x:hidden;width:100%;color:gray;z-index:-10000; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:hidden;overflow-x:hidden; position:fixed; left:0px; top:calc(70% + 64.5px); font-size:24px; min-height:300px; display:none;font-size:24px;'></textarea><div id='schedulerblock' class='cheatlayer cheatlayer' width='100%' height='100%' style='height:70%;diplay:none; overflow-y:hidden;overflow-x:hidden;width:100%;color:gray;z-index:-10000; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:hidden;overflow-x:hidden; position:fixed; left:40%; top:calc(70% + 64.5px); font-size:24px; min-height:300px; display:none;font-size:24px;'></div>
    <script>function addAs(){ window.postMessage({scriptsNewAs: scripts } , '*');(scripts);  }function add(){window.postMessage({scriptsNew: scripts } , '*');}   document.getElementById('new').addEventListener('click', function(){window.postMessage({newScript: 'test' } , '*');}); var showeditor = false; function show(){if(showeditor){  document.getElementById('schedulerblock').style='display:none;z-index:-1000;';document.getElementById('console').style='display:none; z-index:-10000;'; document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;display:none; z-index:-10000;';document.getElementById('script').style='display:none; display:none; z-index:-10000;'; document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;display:none; z-index:-10000;'; showeditor = false;}else{showeditor = true;
        if(document.getElementById('script')){document.getElementById('script').style='display:none;z-index:100005; opacity:1.0;width: calc(100% - 270px); height:70%; overflow-y:hidden;overflow-x:hidden; position:fixed; left:0px; top:64.5px; font-size:24px; ';}if(document.getElementById('console')){document.getElementById('schedulerblock').style='display:none; background-color:white;color:black;z-index:100005; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:hidden;overflow-x:hidden; position:fixed; left:40%; top:calc(70% + 64.5px); font-size:24px; min-height:calc(30% - 64.5px); background-color:white;';document.getElementById('console').style='display:none; background-color:white;color:black;z-index:100005; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:scroll;overflow-x:scroll;     resize:both; position:fixed; left:0px; top:calc(70% + 64.5px); font-size:24px; min-height:calc(30% - 64.5px); background-color:white;';}if(document.getElementById('scriptlist')){document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;background-color:white;color:black;z-index:1000005; opacity:1.0; width:270px;height:100%; overflow-y:auto;overflow-x:hidden;overflow-x:hidden; position:fixed; right:0px; top:0px;';}} } document.getElementById('add').addEventListener('click', add);document.getElementById('addAs').addEventListener('click', addAs);function addScript(){var script = $('#script').val();}</script>`);

                            $('HTML').append(` <script>
            function evalScript(){window.postMessage({evalScript: 'test' } , '*');} document.getElementById('play').addEventListener('click', evalScript);  </script>
            `);


                            $('HTML').append(`<style>/* Dropdown Button */ .dropbtn { background-color: white; color: black; padding: 16px; font-size: 16px; border: none; } /* The container <div> - needed to position the dropdown content */ .dropdown { position: relative; display: inline-block; } /* Dropdown Content (Hidden by Default) */ .dropdown-content { display: none; position: absolute; background-color: #f1f1f1; min-width: 160px; box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2); z-index: 1; } /* Links inside the dropdown */ .dropdown-content a { color: black; padding: 12px 16px; text-decoration: none; display: block; } /* Change color of dropdown links on hover */ .dropdown-content a:hover {background-color: #ddd;} /* Show the dropdown menu on hover */ .dropdown:hover .dropdown-content {display: block;} /* Change the background color of the dropdown button when the dropdown content is shown */ .dropdown:hover .dropbtn {background-color: #3e8e41;}hr{ border-top: 1px solid white; width:100%; } .col-xs-4{padding:0px !important;} .rowt { padding:0px !important;border-bottom:1px solid white; white-space: nowrap;   text-align: left; } .rowt > div {display: inline-block; }</style>
                            <div class='cheatlayer cheatlayer rowt' ><div id='scriptlist' class='cheatlayer cheatlayer col-xs-4' style='overflow-y:hidden;overflow-x:hidden; padding:0px !important;display:none; background-color:white;color:black;z-index:1000005; opacity:1.0; width:400px ;height:100%; overflow-y:hidden;overflow-x:hidden; position:fixed; right:0px; top:0px; '><div class='cheatlayer' style='font-size:34px;color:black;padding:10px;'><center><button href='#' id='editorOpen'  class='cheatlayer'style='font-size:32px;background-color:#FFFFFF; border:1px solid #FFFFFF; border-radius:0px; color:#000000; margin-right:10px; padding:5px;z-index:1000000000000000000;'><img class='cheatlayer' width='100%' src='` + chrome.runtime.getURL("logo.png") + `' class='cheatlayer img-fluid'> </button></center></div><div class='cheatlayer right-container  hide-sm-device-cc'><div id='no_code_parameters' class='cheatlayer cheatlayer rowt' style='display:none;padding:10px !important;margin:5px;background-color:white;color:black; width:100%;' ></div><div id='newonboard' class='cheatlayer cheatlayer rowt' style='margin:5px;background-color:white;color:black; width:100%;' ></div><ul class='cheatlayer cheat-code-company-list'>" + script_html + "</ul></div></div></div><script>var scripts =` + JSON.stringify(scripts) + ` ;function runScript(){var num = parseInt(this.getAttribute('aria-label')); (scripts[num].script);eval(scripts[num].script);}function editScript(){(editScript);var num = parseInt(this.getAttribute('aria-label')); scriptID = num; window.postMessage({setEditor: scripts[num].script, last_saved:scripts[num].name , no_code: scripts[num].no_code_container} , '*');last_saved=scripts[num].name;(num);} function removeScript(){var num = scriptID; scripts.splice(num,1);  window.postMessage({scripts: scripts } , '*'); } function publishScript(){ } </script>`);
                            var script_listen = "setTimeout(function(){";
                            $("#newonboard").append(`
                            <div class="cheatlayer btn-group" style="width:100%"><button style="width:100%" class="cheatlayer" id="sendAtlas">Add Automation</button></div>
                            `);

                        
             //$('#messagesCheatCheat').append('<button class="saveChat">Save</button><button class="stopChat">Stop</button>');
             //$('#messagesCheatCheat').animate({ scrollTop: $('#messagesCheatCheat').prop('scrollHeight') }, 30);

                        $(document).on('click', '#sendAtlas', function () {
                             
                            addCheat();
                        });
                        
                        $(document).on("keypress", function (e) {
                            
                            if (e.which == 13 && e.target.id == "atlasInput") {
                                $('#sendAtlas').click();
                                return false;
                            }
                        });


                            $(document).on('click', '.schedulecheat', function () {
                                document.getElementById('scheduler').remove();
                                var scheduler_html = `
                                <div id="scheduler"  class="cheatlayer modalcheat" style='display:none;position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
                                <div  class='modalcheat-content' style='border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:33%;z-index:100000000000;position:fixed;top:5px;left:33%;background-color:white;color:black !important;'>
                                <br><br><br><center><form id='submitScheduleForm' class='cheatlayer cheatlayer form-horizontal'>
                                Automation Frequency:<select class='selectCheat selectBox  select' style='color:black' name='frequency' id='frequency'><option  value='hourly'>Hourly</option><option value='daily'>Daily</option><option value='Monday'>Monday</option><option value='Tuesday'>Tuesday</option><option value='Wednesday'>Wednesday</option><option value='Thursday'>Thursday</option><option value='Friday'>Friday</option><option value='Saturday'>Saturday</option><option value='Sunday'>
                                Sunday</option><option value='1'>Day 1</option><option value='2'>Day 2</option><option value='3'>Day 3</option><option value='4'>Day 4</option><option value='5'>Day 5</option><option value='6'>Day 6</option><option value='7'>Day 7</option><option value='8'>Day 8</option><option value='9'>Day 9</option><option value='10'>Day 10</option><option value='11'>Day 11</option><option value='12'>Day 12</option><option value='13'>Day 13</option><option value='14'>Day 14</option><option value='15'>Day 15</option><option value='16'>Day 16</option><option value='17'>Day 17</option><option value='18'>Day 18</option><option value='19'>Day 19</option>
                                <option value='20'>Day 20</option>
                                <option value='21'>Day 21</option>
                                <option value='22'>Day 22</option>
                                <option value='23'>Day 23</option>
                                <option value='24'>Day 24</option><option value='25'>Day 25</option><option value='26'>Day 26</option>
                                <option value='27'>Day 27</option><option value='28'>Day 28</option><option value='29'>Day 29</option>
                                <option value='30'>Day 30</option><option value='31'>Day 31</option></select><br><br><br>
                                Hour(only for Daily+):<select class='selectCheat selectBox  select' style='color:black' name='hour' id='hour'><option value='1'>1</option><option value='2'>2</option>
                                <option value='3'>3</option><option value='4'>4</option><option value='5'>5</option><option value='6'>6</option><option value='7'>7</option>
                                <option value='8'>8</option><option value='9'>9</option><option value='10'>10</option><option value='11'>11</option><option value='12'>12</option>
                                <option value='13'>13</option><option value='14'>14</option><option value='15'>15</option><option value='16'>16</option><option value='17'>17</option><option value='18'>18</option>
                                <option value='19'>19</option><option value='20'>20</option><option value='21'>21</option><option value='22'>22</option><option value='23'>23</option><option value='24'>24</option></select><br><br><br>
                                <input class='cheatlayer' type='text' id='scriptschedule' name='script' disabled><br><input class='cheatlayer' type='text' id='websiteschedule' name='website' disabled><br><br><br><button type='submit' id='submitSchedule' class='cheatlayer cheatlayer dropbtn'>Schedule</button>
</form>                                <button  id='cancelSchedule' class='cheatlayer cheatlayer dropbtn'>Cancel</button><center></div> </div>`;
                                script_listen += "function processForm(e) { if (e.preventDefault) e.preventDefault(); (e); document.getElementById('scheduler').style.display = 'none'; var name = document.getElementById('scriptschedule').value;  var frequency = document.getElementById('frequency').value; var hour = document.getElementById('hour').value;  var start = document.getElementById('websiteschedule').value;  window.postMessage({formschedule: name , start: start, frequency: frequency, hours: hour} , '*');  setTimeout(function(){},2000);   return false; } var form = document.getElementById('submitScheduleForm'); if (form.attachEvent) { form.attachEvent('submit', processForm); } else { form.addEventListener('submit', processForm); document.getElementById('scheduler').style.display = 'none';}"
                                $("body").append(scheduler_html);


                                document.getElementById('scheduler').style.display = 'block'; ('schedule')
                                    ; var num = parseInt($(this).attr('aria-label'));
                                (scripts[num].script); window.postMessage({ schedule: scripts[num].script, start: scripts[num].start, index: num }, '*');
                                document.getElementById('scriptschedule').value = scripts[num].name;
                                document.getElementById('websiteschedule').value = scripts[num].start;
                            });
                            if (!GotScripts) {
                                GotScripts = true;
                                $(document).on('click', '#play', function () {
                                    window.postMessage({ evalScript: 'test' }, '*');
                                });
                            }

                            $(document).on('click', '#add', function () {
                                window.postMessage({ scriptsNew: scripts }, '*');
                            });
                            $(document).on('click', '#addAs', function () {
                                window.postMessage({ scriptsNewAs: scripts }, '*'); (scripts);

                            });
                            $(document).on('click', '#generate', function () {
                                window.postMessage({ generate: 'input' }, '*');
                            });
                            $(document).on('click', '#new', function () {
                                window.postMessage({ newScript: 'test' }, '*');
                            });
                            $(document).on('click', '.whitecheat', function () {
                                ('editscript');
                                var num = parseInt($(this).attr('aria-label'));
                                (scripts[num].script);
                                window.postMessage({ whitelabel: scripts[num].script, start: scripts[num].start, index: num, name: scripts[num].name }, '*');

                            });

                            if (true) {

                                $(document).on('click', '.removecheat', function () {
                                    if (!document.getElementById('loadingCheat')) {
                                        $('HTML').append(`<div id='loadingCheat' style='width: calc(100% - 270px);height:90%;left:0%;top:64.5px;position:fixed;background-color:white;z-index:1000000;'><img style='position:fixed;left:25%; top:30%;' src='` + chrome.runtime.getURL("logo.gif") + `'></img></div>`);
                                    } else {
                                        $('#loadingCheat').show();
                                    }
                                    var num = parseInt($(this).attr('aria-label'));
                                    scripts[num].deleted = "true";
                                    window.postMessage({ scripts: scripts }, '*');;

                                });


                                $(document).on('click', '.loopcheat', function () {
                                    if (true) {
                                        var script_code = scripts[$(this).attr('aria-label')].script;
                                        var delayloop = prompt("Enter delay in seconds between each loop.");
                                        var endloop = prompt("Enter the max executions loop.");
                                        var total = 0;
                                        if (!script_code.includes("[Tab Recording]")) {
                                            ////console.log("Running Script!");
                                            function slowLooper() {
                                                eval( script_code);
                                                if (total < endloop) {
                                                    setTimeout(slowLooper, delayloop * 1000);

                                                    total += 1;
                                                }
                                            }
                                            slowLooper();

                                        } else {
                                            ////console.log("Running Recording!");

                                            SendMessage("loopRecording", "recording", { script_code: script_code, end: endloop });

                                        }

                                        var datascript = script_code;



                                    }

                                });
                                $(document).on('click', '.editcheat', function () {
                                    document.getElementById('cheatmenu').style.display = 'block';
                                    document.getElementById('script').style.display = 'block';
                                    document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
                                    var num = parseInt($(this).attr('aria-label'));
                                    window.postMessage({ setEditor: scripts[num].script, last_saved: scripts[num].name, no_code: scripts[num].no_code_container }, '*');
                                    last_saved = scripts[num].name; (num); window.postMessage({ removeLine: 'test' }, '*');

                                });
                                if (!GotScripts) {
                                    GotScripts = true;

                                }
                                added_functs = true;

                            }

                            var scheduler_scripts = "";
                            var scheduler_code = "";
                            scheduler_code += `<table style="font-size:12px;"><tr><td>Scheduled Cheat</td><td>Frequency</td><td>Hour</td><td>Website</td><td>Remove</td></tr>`;
                            for (var kk = 0; kk < schedule.length; kk++) {
                                scheduler_code += "<tr><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].formschedule + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].frequency + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].hours + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].start + "</td><td><a href='#' id='removeSchedule" + kk + "' aria-label='" + schedule[kk].formschedule + "," + schedule[kk].frequency + "," + schedule[kk].hours + "," + schedule[kk].start + "'>Remove</a></td></tr> ";
                                scheduler_scripts += "document.getElementById('removeSchedule" + kk + "').onclick = function(){var scheduleDetails = this.getAttribute('aria-label');window.postMessage({removeSchedule: scheduleDetails} , '*'); };";

                            }
                            scheduler_code += `</table>`;
                            $("#schedulerblock").html(scheduler_code);

                            var script = document.createElement("script");
                            script.innerHTML = scheduler_scripts;
                            document.body.appendChild(script);



                            //                  script_listen += "document.getElementById('remove').onclick =  function(){('editscript');var num = scriptID; scripts.splice(num,1);  window.postMessage({scripts: scripts } , '*'); };";
                            script_listen += " var opened_editor = false; var layer = 0;   document.getElementById('editorOpen').onclick = function(){ layer++; if(layer%2 == 0){document.getElementById('scriptlist').style.height='10%';}else{document.getElementById('scriptlist').style.height='100%';}};document.getElementById('generate').onclick= function(){  window.postMessage({generate: 'input'} , '*');} ;";

                            script_listen += "},1000);"
                            var script = document.createElement("script");
                            script.innerHTML = script_listen;
                            document.body.appendChild(script);



                            if (onboard == 0) {
                                //startOnboard(0);
                            }
                            tippy('.tooltipcheat', { arrow: true });

                            var script_html = "";
                            var counter = 0;

                            var script_listen = " setTimeout(function(){";


                            script_html += "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' ><div></div> <a  style='margin-left:10px;margin-right:10px;' class='cheatlayer cheatlayer runscript'   aria-label='Request' type='button' id='Request' class='cheatlayer cheatlayer close' href='https://cheatlayer.com/request'  target='_blank' data-dismiss='alert' aria-label='Request'>Request Script8</a></div></div><hr>";
                            // script_html += "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' ><center><h2 class="cheatlayer"style='color:black;font-size:12px;'>Schedule</h2></center></div><hr>";

                            // for (var kk = 0; kk < schedule.length; kk++) {
                            //     script_html += "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' ><div></div> " + schedule[kk].formschedule + " " + schedule[kk].frequency + "<br> " + schedule[kk].hours + " " + schedule[kk].start + " <br><a href='#' id='removeSchedule" + kk + "' aria-label='" + schedule[kk].formschedule + "," + schedule[kk].frequency + "," + schedule[kk].hours + "," + schedule[kk].start + "'>Remove</a> </div></div><hr>";
                            //     script_listen += "document.getElementById('removeSchedule" + kk + "').onclick = function(){var scheduleDetails = this.getAttribute('aria-label');window.postMessage({removeSchedule: scheduleDetails} , '*'); };";

                            //                           }
                            //          SendMessage("Community", "scripts", "", community_scripts);

                            script_listen += "},2000);"
                            $("#scriptlist").append(script_html);


                            var scheduler_html = `
                                <div id="scheduler"  class="cheatlayer modalcheat" style='display:none;position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
                                <div  class='modalcheat-content' style='border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:33%;z-index:100000000000;position:fixed;top:5px;left:33%;background-color:white;color:black !important;'>
                                <br><br><br><center><form id='submitScheduleForm' class='cheatlayer cheatlayer form-horizontal'>
                                Automation Frequency:<select class='selectCheat selectBox  select' style='color:black' name='frequency' id='frequency'><option  value='hourly'>Hourly</option><option value='daily'>Daily</option><option value='Monday'>Monday</option><option value='Tuesday'>Tuesday</option><option value='Wednesday'>Wednesday</option><option value='Thursday'>Thursday</option><option value='Friday'>Friday</option><option value='Saturday'>Saturday</option><option value='Sunday'>
                                Sunday</option><option value='1'>Day 1</option><option value='2'>Day 2</option><option value='3'>Day 3</option><option value='4'>Day 4</option><option value='5'>Day 5</option><option value='6'>Day 6</option><option value='7'>Day 7</option><option value='8'>Day 8</option><option value='9'>Day 9</option><option value='10'>Day 10</option><option value='11'>Day 11</option><option value='12'>Day 12</option><option value='13'>Day 13</option><option value='14'>Day 14</option><option value='15'>Day 15</option><option value='16'>Day 16</option><option value='17'>Day 17</option><option value='18'>Day 18</option><option value='19'>Day 19</option>
                                <option value='20'>Day 20</option>
                                <option value='21'>Day 21</option>
                                <option value='22'>Day 22</option>
                                <option value='23'>Day 23</option>
                                <option value='24'>Day 24</option><option value='25'>Day 25</option><option value='26'>Day 26</option>
                                <option value='27'>Day 27</option><option value='28'>Day 28</option><option value='29'>Day 29</option>
                                <option value='30'>Day 30</option><option value='31'>Day 31</option></select><br><br><br>
                                Hour(only for Daily+):<select class='selectCheat selectBox  select' style='color:black' name='hour' id='hour'><option value='1'>1</option><option value='2'>2</option>
                                <option value='3'>3</option><option value='4'>4</option><option value='5'>5</option><option value='6'>6</option><option value='7'>7</option>
                                <option value='8'>8</option><option value='9'>9</option><option value='10'>10</option><option value='11'>11</option><option value='12'>12</option>
                                <option value='13'>13</option><option value='14'>14</option><option value='15'>15</option><option value='16'>16</option><option value='17'>17</option><option value='18'>18</option>
                                <option value='19'>19</option><option value='20'>20</option><option value='21'>21</option><option value='22'>22</option><option value='23'>23</option><option value='24'>24</option></select><br><br><br>
                                <input class='cheatlayer' type='text' id='scriptschedule' name='script' disabled><br><input class='cheatlayer' type='text' id='websiteschedule' name='website' disabled><br><br><br><button type='submit' id='submitSchedule' class='cheatlayer cheatlayer dropbtn'>Schedule</button>
                                </form><button   id='cancelSchedule' class='cheatlayer cheatlayer dropbtn'>Cancel</button><center></div> </div>`;
                            script_listen += "function processForm(e) { if (e.preventDefault) e.preventDefault(); (e); document.getElementById('scheduler').style.display = 'none'; var name = document.getElementById('scriptschedule').value;  var frequency = document.getElementById('frequency').value; var hour = document.getElementById('hour').value;  var start = document.getElementById('websiteschedule').value;  window.postMessage({formschedule: name , start: start, frequency: frequency, hours: hour} , '*');  setTimeout(function(){},2000);   return false; } var form = document.getElementById('submitScheduleForm'); if (form.attachEvent) { form.attachEvent('submit', processForm); } else { form.addEventListener('submit', processForm); document.getElementById('scheduler').style.display = 'none';}"

                            $(document).on('click', '#cancelSchedule', function () {
                                document.getElementById('scheduler').style.display = 'none';

                            });
                            $("body").append(scheduler_html);

                            var script = document.createElement("script");
                            script.innerHTML = script_listen;
                            document.body.appendChild(script);
                            //  $('HTML').append("<button  style='margin-left:10px;margin-right:10px;' class='cheatlayer cheatlayer runscript'   aria-label='" + (counter) + "' type='button' id='removeC" + (counter) + "' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>X</button>");

                        }


                        var scheduler_scripts = "";
                        var scheduler_code = "";
                        scheduler_code += `<table style="font-size:12px;"><tr><td>Scheduled Cheat</td><td>Frequency</td><td>Hour</td><td>Website</td><td>Remove</td></tr>`;
                        for (var kk = 0; kk < schedule.length; kk++) {
                            scheduler_code += "<tr><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].formschedule + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].frequency + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].hours + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].start + "</td><td><a href='#' id='removeSchedule" + kk + "' aria-label='" + schedule[kk].formschedule + "," + schedule[kk].frequency + "," + schedule[kk].hours + "," + schedule[kk].start + "'>Remove</a></td></tr> ";
                            scheduler_scripts += "document.getElementById('removeSchedule" + kk + "').onclick = function(){var scheduleDetails = this.getAttribute('aria-label');window.postMessage({removeSchedule: scheduleDetails} , '*'); };";

                        }
                        scheduler_code += `</table>`;
                        $("#schedulerblock").html(scheduler_code);

                        var script = document.createElement("script");
                        script.innerHTML = scheduler_scripts;
                        document.body.appendChild(script);
                        $('HTML').append("<script>   document.getElementById('schedulerblock').style='display:none;z-index:-1000;';document.getElementById('console').style='display:none; z-index:-10000;'; document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;display:none; z-index:-10000;';document.getElementById('script').style='display:none; display:none; z-index:-10000;'; document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;display:none; z-index:-10000;'; showeditor = false;</script>");
                        $("#scriptlist").append(`<div class="cheatlayer btn-group" style="width:100%">
                        <button id='startlayer' class='cheatlayer' style="display:none;position:fixed; bottom:40px; right:0px;width:20%;" style='cheatlayer'>+ New Cheat</button>

                        <button id='nocodelayer' class='cheatlayer' style="position:fixed; bottom:0px; right:0px;width:90px;" style='cheatlayer'>No-Code</button>
                        <button id='codelayer' class='cheatlayer'  style="position:fixed; bottom:0px; right:90px;width:90px;" style='cheatlayer'>Code</button>
                        <button id='websitelayer' class='cheatlayer'style="position:fixed; bottom:0px; right:180px;width:90px;" style='cheatlayer'>Website</button>
                      </div>`);




                        var scheduler_scripts = "";
                        var scheduler_code = "";
                        scheduler_code += `<table style="font-size:12px;"><tr><td>Scheduled Cheat</td><td>Frequency</td><td>Hour</td><td>Website</td><td>Remove</td></tr>`;
                        for (var kk = 0; kk < schedule.length; kk++) {
                            scheduler_code += "<tr><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].formschedule + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].frequency + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].hours + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].start + "</td><td><a href='#' id='removeSchedule" + kk + "' aria-label='" + schedule[kk].formschedule + "," + schedule[kk].frequency + "," + schedule[kk].hours + "," + schedule[kk].start + "'>Remove</a></td></tr> ";
                            scheduler_scripts += "document.getElementById('removeSchedule" + kk + "').onclick = function(){var scheduleDetails = this.getAttribute('aria-label');window.postMessage({removeSchedule: scheduleDetails} , '*'); };";

                        }
                        scheduler_code += `</table>`;
                        $("#schedulerblock").html(scheduler_code);

                        var script = document.createElement("script");
                        script.innerHTML = scheduler_scripts;
                        document.body.appendChild(script);
                        $(document).on('click', '#nocodelayer', function () {
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                            drawNoCodeContainer()

                            document.getElementById('newnocode').style.display = 'block';
                            document.getElementById('script').style.display = 'none';
                            document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
                            document.getElementById('cheatmenu').style.display = 'block';



                        });
                        $(document).on('click', '#codelayer', function () {
                            stop();
                            box.hide();

                            if (window.location.href.includes('cheatlayer')) {

                                if (last_complete == 10) {
                                    setTimeout(function () {
                                        introJs().setOptions({
                                            steps: [
                                                {
                                                    element: document.querySelector('#filemenu'),
                                                    intro: 'Click File, then GPT-3 Code Generator to generate custom automations:'
                                                }]
                                        }).start();
                                    }, 1000);
                                }
                            }


                            document.getElementById('newnocode').style.display = 'none';
                            document.getElementById('script').style.display = 'block';
                            document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
                            document.getElementById('cheatmenu').style.display = 'block';
                            if (no_code_container.length > 0) {
                                for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                                    if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                        leader_lines[kk].remove();
                                        leader_lines[kk] = null;
                                    }

                                }
                            }
                            for (var kk = 0; kk < leader_lines.length - 1; kk++) {
                                if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                    leader_lines[kk].remove();
                                    leader_lines[kk] = null;
                                }

                            }




                            if (window.location.href.includes("chat.openai.com")) {
                              
                                            //Generating GPT-3 code.. Please wait up to 20 seconds//Generated Script id=3
                                            var divs = document.getElementsByTagName('code');
                                            //Loop through divs and find the divs with class that includes "!whitespace-pre"
                                            var chat_code = "";
                                            for (var i = 0; i < divs.length; i++) {
                                                if (divs[i].className.includes("whitespace-pre")) {
                                                    //////console.log(divs[i].innerText);
                                                    //////console.log(divs[i].innerText);
                                                    ////console.log(divs[i].innerText);
                                                    chat_code += divs[i].innerText;
                                                }
                                            }

                                            window.editor = ace.edit("script");
                                            //window.editor.setValue(old_code);
                                            window.editor.setAutoScrollEditorIntoView(true);
                                            window.editor.getSession().setMode("ace/mode/javascript");
                                            window.editor.setTheme("ace/theme/tomorrow");

                                            window.editor.setValue(chat_code);
                                            runScriptEval();



                                //endcode GPT Prompt: Collect all the div on the page with an inner text that includes poop and print them. 
                                //Generating GPT-3 code.. Please 
                            }


                        });
                        $(document).on('click', '#editorOpen', function () {
                            layer++;
                            if (layer % 2 == 0) {
                                document.getElementById('scriptlist').style.height = '10%';
                                document.getElementById('codelayer').style.display = 'none';
                                document.getElementById('websitelayer').style.display = 'none';
                                document.getElementById('nocodelayer').style.display = 'none';

                            } else {
                                document.getElementById('scriptlist').style.height = '100%';

                                document.getElementById('codelayer').style.display = 'block';
                                document.getElementById('websitelayer').style.display = 'block';
                                document.getElementById('nocodelayer').style.display = 'block';
                            }
                        });
                        $(document).on('click', '#websitelayer', function () {




                            document.getElementById('newnocode').style.display = 'none';
                            document.getElementById('script').style.display = 'none';
                            document.getElementById('console').style.display = 'none'; document.getElementById('schedulerblock').style.display = 'none';
                            document.getElementById('cheatmenu').style.display = 'none';
                            if (no_code_container.length > 0) {
                                for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                                    if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                        leader_lines[kk].remove();
                                        leader_lines[kk] = null;
                                    }

                                }
                            }
                            for (var kk = 0; kk < leader_lines.length - 1; kk++) {
                                if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                    leader_lines[kk].remove();
                                    leader_lines[kk] = null;
                                }

                            }
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        });
                    }




                }
            });



        } else {
            scripts = msg.scripts.scripts;
            folders = msg.scripts.folders;

            community_scripts = msg.scripts.community_scripts;
            codes = msg.scripts.codes;
            whitelabel = msg.scripts.whitelabel;
            refunded = msg.scripts.refunded;
            tempData = msg.scripts.tempData;
            schedule = msg.scripts.schedule;
            onboard = msg.scripts.onboard;
            paywall = msg.scripts.paywall;

            completed_steps = msg.scripts.completed_steps;
            (msg.scripts.onboard);;

            user_key = msg.scripts.key;
            if (document.getElementById('APISolution')) {
                document.getElementById('APISolution').value = user_key;
            }
            ('onboard');
            if (onboard == 0) {
                //startOnboard(0);
            }
            if (msg.scripts.key && msg.scripts.key.length == 0) {
                $.ajax({
                    url: 'https://cheatlayer.com/user/getLogin',
                    type: 'post',
                    data: {
                        id: user_key
                    },
                    success: function (e) {
                        ("Get Login");
                        (e);

                        codes = e.codes;
                        (codes);
                        whitelabel = e.whitelabel;
                        refunded = e.refunded;
                        codes = e.codes;
                        tempData = e.tempData;
                        schedule = e.scheduledScripts;
                        user_plan = e.plan;
                        bootcampS2 = e.bootcampS2;
                        paywall = e.paywall;

                        user_email = e.email;
                        ////console.log("USER EMAIL ")
                        ////console.log(user_email)
                        SendMessage("Plan", "plan", e.plan);
                        SendMessage("Started", "started", e.started);
                        SendMessage("Codes", "codes", e.codes);
                        SendMessage("Whitelabel", "whitelabel", e.whitelabel);
                        SendMessage("Refunded", "refunded", e.refunded);
                        SendMessage("TempData", "tempData", e.tempData);
                        SendMessage("Schedule", "schedule", e.scheduledScripts);
                        SendMessage("onboard", "onboard", e.onboard);
                        //  SendMessage("onboard", "onboard", e.onboard);
                        onboard = e.onboard;
                        completed_steps = e.completed_steps;
                        (e.onboard);
                        ('onbaord');
                        if (onboard == 0) {
                            //startOnboard(0);
                        }
                        if (e.plan == "") {
                            alert("Please activate your subscription at cheatlayer.com/billing or contact support. Re-install to re-enter a new user key.");

                        } else {
                            var script_html = "";
                            for (var kk = 0; kk < folders.length; kk++) {
                                if (folders[kk].split(" ").join("").length == 0) {
                                    continue;
                                }
                                script_html += `  <li class="cheatlayer folder-line-cheatlayer" aria-label="` + folders[kk] + `">
                                <div class="cheatlayer list-inner code-list-wrap">
                               
                                    <div class='cheatlayer' style='white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 100%;' class='cheatlayer' >
                                        <img src="` + chrome.runtime.getURL("folder.png") + `" width="32px" height="32px" style="margin:10px" class="cheatlayer img-fluid">
                                        <span class='cheatlayer'style="position:relative;top:0px;white-space: pre-wrap; word-wrap:break-word;" >` + folders[kk] + `</span>
                                    </div>
                                   
                                </div>
                            
                            </li>`;
                            }
                            for (var kk = 0; kk < scripts.length; kk++) {
                                if (scripts[kk].deleted != "true") {
                                    if (scripts[kk].start.includes("*")) {
                                        scripts[kk].start = "cheatlayer.com";
                                    }
                                    var temstart = scripts[kk].start;
                                    if (scripts[kk].start.includes("http")) {
                                        temstart = scripts[kk].start.split("//")[1];
                                    }
                                    script_html += `<li class="cheatlayer code-line-cheatlayer">
                        <div class="cheatlayer list-inner code-list-wrap">
                      
                            <div class='cheatlayer cheatline' style='white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 80%;' class='cheatlayer' >
                                <img src="https://` + temstart + `/favicon.ico" width="32px" height="32px" style="margin:10px" class="cheatlayer img-fluid">
                                <span class='cheatlayer'style="position:relative;top:0px;white-space: pre-wrap; word-wrap:break-word;">` + scripts[kk].name + `</span>
                            </div>
                            
                                        </div>
                                    
                                    </li>
                                    <div id="content` + kk + `"  class='cheatlayer'style="display: none;z-index:100000">
                    <ul class="cheatlayer code-gen-list" style="z-index:1000000000">
                        <li><a class='cheatlayer cheatlayer runscript runcheat' type='button' aria-label='` + kk + `' id='run` + kk + `' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M11 21C16.5228 21 21 16.5228 21 11C21 5.47715 16.5228 1 11 1C5.47715 1 1 5.47715 1 11C1 16.5228 5.47715 21 11 21Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M3.66699 10.9998C3.66699 9.05492 4.43961 7.18965 5.81488 5.81439C7.19014 4.43912 9.0554 3.6665 11.0003 3.6665C12.9452 3.6665 14.8105 4.43912 16.1858 5.81439C17.561 7.18965 18.3337 9.05492 18.3337 10.9998" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M8.33301 7L9.72901 12.714C9.78431 12.9026 9.88075 13.0766 10.0114 13.2234C10.142 13.3703 10.3036 13.4863 10.4845 13.5632C10.6654 13.6401 10.8611 13.6759 11.0574 13.668C11.2538 13.6601 11.446 13.6088 11.6202 13.5177C11.7943 13.4267 11.9461 13.2981 12.0646 13.1413C12.1831 12.9845 12.2654 12.8033 12.3054 12.6109C12.3455 12.4185 12.3424 12.2196 12.2963 12.0286C12.2502 11.8375 12.1624 11.659 12.039 11.506C12.041 11.4653 8.33301 7 8.33301 7Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            Run</a></li>
                            <li><a class='cheatlayer cheatlayer runscript loopcheat'   aria-label='` + kk + `' type='button' id='loop` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M11 21C16.5228 21 21 16.5228 21 11C21 5.47715 16.5228 1 11 1C5.47715 1 1 5.47715 1 11C1 16.5228 5.47715 21 11 21Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M3.66699 10.9998C3.66699 9.05492 4.43961 7.18965 5.81488 5.81439C7.19014 4.43912 9.0554 3.6665 11.0003 3.6665C12.9452 3.6665 14.8105 4.43912 16.1858 5.81439C17.561 7.18965 18.3337 9.05492 18.3337 10.9998" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M8.33301 7L9.72901 12.714C9.78431 12.9026 9.88075 13.0766 10.0114 13.2234C10.142 13.3703 10.3036 13.4863 10.4845 13.5632C10.6654 13.6401 10.8611 13.6759 11.0574 13.668C11.2538 13.6601 11.446 13.6088 11.6202 13.5177C11.7943 13.4267 11.9461 13.2981 12.0646 13.1413C12.1831 12.9845 12.2654 12.8033 12.3054 12.6109C12.3455 12.4185 12.3424 12.2196 12.2963 12.0286C12.2502 11.8375 12.1624 11.659 12.039 11.506C12.041 11.4653 8.33301 7 8.33301 7Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            Loop
                            </a></li>
                        <li><a class='cheatlayer cheatlayer runscript editcheat' aria-label='` + kk + `' type='button' id='edit` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M1 21H11H21" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M11.2464 4.1427L16.7462 9.64238M11.2464 4.1427L14.3892 1L19.8888 6.49972L16.7462 9.64238L11.2464 4.1427ZM11.2464 4.1427L5.01684 10.3723C4.80847 10.5806 4.69141 10.8633 4.69141 11.1579V16.1974H9.73093C10.0256 16.1974 10.3082 16.0804 10.5166 15.8719L16.7462 9.64238L11.2464 4.1427Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>Edit
                            </a></li>
                        <li><a class='cheatlayer cheatlayer runscript removecheat'   aria-label='` + kk + `' type='button' id='remove` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M18.7782 9.88867V20.3331C18.7782 20.7013 18.4798 20.9998 18.1115 20.9998H3.88932C3.52113 20.9998 3.22266 20.7013 3.22266 20.3331V9.88867"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M8.77734 16.5553V9.88867" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M13.2227 16.5553V9.88867" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M6.55556 5.44444H15.4444M21 5.44444H15.4444H21ZM1 5.44444H6.55556H1ZM6.55556 5.44444V1.66667C6.55556 1.29848 6.85403 1 7.22222 1H14.7778C15.146 1 15.4444 1.29848 15.4444 1.66667V5.44444H6.55556Z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>Remove
                            </a></li>
                        <li><a  class='cheatlayer cheatlayer runscript whitecheat'   aria-label='` + kk + `' type='button' id='whitelabel` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M11.5769 1L1 11.5769C1.50617 12.0766 1.79742 12.754 1.81178 13.4651C1.82615 14.1763 1.5625 14.8649 1.07692 15.3846L6.61538 20.9231C7.13509 20.4375 7.82375 20.1739 8.53485 20.1882C9.24596 20.2026 9.9234 20.4938 10.4231 21L21 10.4231C20.743 10.1691 20.539 9.86664 20.3997 9.53323C20.2605 9.19982 20.1887 8.84209 20.1887 8.48077C20.1887 8.11945 20.2605 7.76172 20.3997 7.42831C20.539 7.0949 20.743 6.79244 21 6.53846L15.4615 1C15.2076 1.257 14.9051 1.46103 14.5717 1.60029C14.2383 1.73955 13.8806 1.81125 13.5192 1.81125C13.1579 1.81125 12.8002 1.73955 12.4668 1.60029C12.1334 1.46103 11.8309 1.257 11.5769 1Z"  stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M9.92283 17.0385C9.70067 17.2523 9.40428 17.3718 9.0959 17.3718C8.78752 17.3718 8.49114 17.2523 8.26898 17.0385L4.96129 13.7308C4.74741 13.5086 4.62793 13.2122 4.62793 12.9039C4.62793 12.5955 4.74741 12.2991 4.96129 12.0769L12.1536 4.88463C12.3758 4.67075 12.6721 4.55127 12.9805 4.55127C13.2889 4.55127 13.5853 4.67075 13.8074 4.88463L17.1151 8.19232C17.329 8.41448 17.4485 8.71086 17.4485 9.01924C17.4485 9.32762 17.329 9.62401 17.1151 9.84616L9.92283 17.0385Z"  stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>White Label
                            </a></li>
                     
                    </ul>
                    </div>`;
                                }

                                $('HTML').append(`<div class='cheatlayer cheatlayer rowt'  style='background-color:white;color:black;'><div class='cheatlayer cheatlayer col-xs-4' style='color:gray;z-index:1000000000; opacity:1.0; width:10000000px; height:20px;width:5%; position:fixed; left:5px; top:0px;'><div class='cheatlayer' style='white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 80%;' class='cheatlayer' >
<a class="cheatlayer cheatlayer tooltipcheat hatel"  
    data-tippy-interactive="true" 
    data-tippy-theme="light rounded"  
    data-tippy-placement="bottom" 
    data-tippy-html="#contentCheat" 
    data-tippy-trigger="click" style='background-color:white;'>
<article id='filemenu' class='cheatlayer' ><img width='64px' height='64px' src="https://cheatlayer.com/images/textarea/file-text-area.png" class="img-fluid">File</article>
</a>  
</div>

<div id="contentCheat" style="display: none;z-index:100000">
    <ul class="cheatlayer code-gen-list" style="z-index:1000000000">
        <li><a id='new'class='cheatlayer cheatlayer runscript newcheat' type='button' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >New</article></a></li>
            <li><a id='newFolder'class='cheatlayer cheatlayer runscript newFolder' type='button' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >New Folder</article></a></li>
            
            <li><a id='export'class='cheatlayer cheatlayer runscript exportcheat' type='button' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Export Cheats</article></a></li>
            <li><a id='import'class='cheatlayer cheatlayer runscript exportcheat' type='button' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Import Cheats</article></a></li>
        <li><a id='play'  class='cheatlayer cheatlayer runscript runeditorcheat'  class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Run (CTRL+R)</article></a></li>
        <li><a id='add'  class='cheatlayer cheatlayer runscript savecheat'  class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Save (CTRL+S)</article></a></li>
        <li><a  id='addAs' class='cheatlayer cheatlayer runscript saveascheat'   class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Save As</article></a></li>
        <li><a id='generate' class='cheatlayer cheatlayer runscript generategptcheat'   class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >GPT-3 Code Generator (CTRL+G)</article></a></li>
    </ul>
    </div> </div> <div id='newnocode' class='cheatlayer cheatlayer' style='border:1px solid black;display:none;resize:both;background:rgba(255,255,255,0.3);overflow-x:auto;overflow-y:auto;position:fixed;z-index:10000; boder:1px solid black;top:64.5px; font-size:24px; left:0%;width: calc(100% - 270px);height:70%;color:white'></div>
    <div id='script' class='cheatlayer cheatlayer' width='100%' height='100%' style='height:70%; overflow-y:auto;overflow-x:auto;width:100%;background-color: #16092F !important;z-index:-10000; opacity:0.8;width: calc(100% - 270px); height:70%; overflow-y:hidden;overflow-x:hidden; position:fixed; left:0px; top:64.5px; font-size:24px;  display:none;font-size:24px;'></div>
    <textarea id='console' placeholder='Console Output' class='cheatlayer cheatlayer' width='100%' height='100%' style='height:70%; overflow-y:hidden;overflow-x:hidden;width:100%;color:gray;z-index:-10000; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:hidden;overflow-x:hidden; position:fixed; left:0px; top:calc(70% + 64.5px); font-size:24px; min-height:300px; display:none;font-size:24px;'></textarea>
    <div id='schedulerblock' class='cheatlayer cheatlayer' width='100%' height='100%' style='height:70%;diplay:none; overflow-y:hidden;overflow-x:hidden;width:100%;color:gray;z-index:-10000; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:hidden;overflow-x:hidden; position:fixed; left:40%; top:calc(70% + 64.5px); font-size:24px; min-height:300px; display:none;font-size:24px;'></div>
    <script>function addAs(){ window.postMessage({scriptsNewAs: scripts } , '*');(scripts);  }function add(){window.postMessage({scriptsNew: scripts } , '*');} 
    document.getElementById('new').addEventListener('click', function(){window.postMessage({newScript: 'test' } , '*');}); var showeditor = false; function show(){if(showeditor){  document.getElementById('schedulerblock').style='display:none;z-index:-1000;';document.getElementById('console').style='display:none; z-index:-10000;'; document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;display:none; z-index:-10000;';document.getElementById('script').style='display:none; display:none; z-index:-10000;'; document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;display:none; z-index:-10000;'; showeditor = false;}else{showeditor = true;if(document.getElementById('script')){document.getElementById('script').style='display:none;z-index:100005; opacity:1.0;width: calc(100% - 270px); height:70%; overflow-y:hidden;overflow-x:hidden; position:fixed; left:0px; top:64.5px; font-size:24px; ';}if(document.getElementById('console')){document.getElementById('schedulerblock').style='display:none; background-color:white;color:black;z-index:100005; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:hidden;overflow-x:hidden; position:fixed; left:40%; top:calc(70% + 64.5px); font-size:24px; min-height:calc(30% - 64.5px); background-color:white;';document.getElementById('console').style='display:none; background-color:white;color:black;z-index:100005; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:scroll;overflow-x:scroll;     resize:both; position:fixed; left:0px; top:calc(70% + 64.5px); font-size:24px; min-height:calc(30% - 64.5px); background-color:white;';}if(document.getElementById('scriptlist')){document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;background-color:white;color:black;z-index:1000005; opacity:1.0; width:270px;height:100%; overflow-y:auto;overflow-x:hidden;overflow-x:hidden; position:fixed; right:0px; top:0px;';}} } document.getElementById('add').addEventListener('click', add);document.getElementById('addAs').addEventListener('click', addAs);function addScript(){var script = $('#script').val();}</script>`);

                                $('HTML').append(` <script>
        function evalScript(){window.postMessage({evalScript: 'test' } , '*');} document.getElementById('play').addEventListener('click', evalScript);  </script>
        `);



                                $('HTML').append(`<style>/* Dropdown Button */ .dropbtn { background-color: white; color: black; padding: 16px; font-size: 16px; border: none; } /* The container <div> - needed to position the dropdown content */ .dropdown { position: relative; display: inline-block; } /* Dropdown Content (Hidden by Default) */ .dropdown-content { display: none; position: absolute; background-color: #f1f1f1; min-width: 160px; box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2); z-index: 1; } /* Links inside the dropdown */ .dropdown-content a { color: black; padding: 12px 16px; text-decoration: none; display: block; } /* Change color of dropdown links on hover */ .dropdown-content a:hover {background-color: #ddd;} /* Show the dropdown menu on hover */ .dropdown:hover .dropdown-content {display: block;} /* Change the background color of the dropdown button when the dropdown content is shown */ .dropdown:hover .dropbtn {background-color: #3e8e41;} hr{ border-top: 1px solid white; width:100%; } .col-xs-4{padding:0px !important;} .rowt { padding:0px !important;border-bottom:1px solid white; white-space: nowrap;   text-align: left; } .rowt > div {display: inline-block; }</style><div class='cheatlayer cheatlayer rowt' ><div id='scriptlist' class='cheatlayer cheatlayer col-xs-4' style='overflow-y:hidden;overflow-x:hidden; padding:0px !important;display:none; background-color:white;color:black;z-index:1000005; opacity:1.0; width:400px ;height:100%; overflow-y:hidden;overflow-x:hidden; position:fixed; right:0px; top:0px; '><div class='cheatlayer' style='font-size:34px;color:black;padding:10px;'><center><button href='#' id='editorOpen'  class='cheatlayer'style='font-size:32px;background-color:#FFFFFF; border:1px solid #FFFFFF; border-radius:0px; color:#000000; margin-right:10px; padding:5px;z-index:1000000000000000000;'><img class='cheatlayer' width='100%' src='` + chrome.runtime.getURL("logo.png") + `' class='cheatlayer img-fluid'> </button></center></div><div class='cheatlayer right-container  hide-sm-device-cc'><div id='no_code_parameters' class='cheatlayer cheatlayer rowt' style='display:none;padding:10px !important;margin:5px;background-color:white;color:black; width:100%;' ></div><div id='newonboard' class='cheatlayer cheatlayer rowt' style='margin:5px;background-color:white;color:black; width:100%;' ></div><ul class='cheatlayer cheat-code-company-list'>" + script_html + "</ul></div></div></div>
                            <script>var scripts =` + JSON.stringify(scripts) + ` ;function runScript(){var num = parseInt(this.getAttribute('aria-label')); (scripts[num].script);eval(scripts[num].script);}function editScript(){(editScript);var num = parseInt(this.getAttribute('aria-label')); scriptID = num; window.postMessage({setEditor: scripts[num].script, last_saved:scripts[num].name , no_code: scripts[num].no_code_container} , '*');last_saved=scripts[num].name;(num);} function removeScript(){var num = scriptID; scripts.splice(num,1);  window.postMessage({scripts: scripts } , '*'); } function publishScript(){var num = scriptID; } </script>`);
                                var script_listen = "setTimeout(function(){";
                                $("#newonboard").append(`
                                <div class="cheatlayer btn-group" style="width:100%"><button style="width:100%" class="cheatlayer" id="sendAtlas">Add Automation</button></div>
                                `);

                            
                 //$('#messagesCheatCheat').append('<button class="saveChat">Save</button><button class="stopChat">Stop</button>');
                 //$('#messagesCheatCheat').animate({ scrollTop: $('#messagesCheatCheat').prop('scrollHeight') }, 30);

                            $(document).on('click', '#sendAtlas', function () {
                                 
                                addCheat();

                                });
                            $(document).on("keypress", function (e) {
                                
                                if (e.which == 13 && e.target.id == "atlasInput") {
                                    $('#sendAtlas').click();
                                    return false;
                                }
                            });
    

                                if (!GotScripts) {
                                    GotScripts = true;
                                    $(document).on('click', '#play', function () {
                                        window.postMessage({ evalScript: 'test' }, '*');
                                    });
                                }


                                $(document).on('click', '#add', function () {
                                    window.postMessage({ scriptsNew: scripts }, '*');
                                });
                                $(document).on('click', '#addAs', function () {
                                    window.postMessage({ scriptsNewAs: scripts }, '*'); (scripts);

                                });
                                $(document).on('click', '#generate', function () {
                                    window.postMessage({ generate: 'input' }, '*');
                                });
                                $(document).on('click', '#new', function () {
                                    window.postMessage({ newScript: 'test' }, '*');
                                });
                                $(document).on('click', '.schedulecheat', function () {
                                    document.getElementById('scheduler').remove();
                                    var scheduler_html = `
                                <div id="scheduler"  class="cheatlayer modalcheat" style='display:none;position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
                                <div  class='modalcheat-content' style='border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:33%;z-index:100000000000;position:fixed;top:5px;left:33%;background-color:white;color:black !important;'>
                                <br><br><br><center><form id='submitScheduleForm' action='https://cheatlayer.com/user/ScheduleScripts' method='POST' class='cheatlayer cheatlayer form-horizontal'>
                                Automation Frequency:<select class='selectCheat selectBox  select' style='color:black' name='frequency' id='frequency'><option  value='hourly'>Hourly</option><option value='daily'>Daily</option><option value='Monday'>Monday</option><option value='Tuesday'>Tuesday</option><option value='Wednesday'>Wednesday</option><option value='Thursday'>Thursday</option><option value='Friday'>Friday</option><option value='Saturday'>Saturday</option><option value='Sunday'>
                                Sunday</option><option value='1'>Day 1</option><option value='2'>Day 2</option><option value='3'>Day 3</option><option value='4'>Day 4</option><option value='5'>Day 5</option><option value='6'>Day 6</option><option value='7'>Day 7</option><option value='8'>Day 8</option><option value='9'>Day 9</option><option value='10'>Day 10</option><option value='11'>Day 11</option><option value='12'>Day 12</option><option value='13'>Day 13</option><option value='14'>Day 14</option><option value='15'>Day 15</option><option value='16'>Day 16</option><option value='17'>Day 17</option><option value='18'>Day 18</option><option value='19'>Day 19</option>
                                <option value='20'>Day 20</option>
                                <option value='21'>Day 21</option>
                                <option value='22'>Day 22</option>
                                <option value='23'>Day 23</option>
                                <option value='24'>Day 24</option><option value='25'>Day 25</option><option value='26'>Day 26</option>
                                <option value='27'>Day 27</option><option value='28'>Day 28</option><option value='29'>Day 29</option>
                                <option value='30'>Day 30</option><option value='31'>Day 31</option></select><br><br><br>
                                Hour(only for Daily+):<select class='selectCheat selectBox  select' style='color:black' name='hour' id='hour'><option value='1'>1</option><option value='2'>2</option>
                                <option value='3'>3</option><option value='4'>4</option><option value='5'>5</option><option value='6'>6</option><option value='7'>7</option>
                                <option value='8'>8</option><option value='9'>9</option><option value='10'>10</option><option value='11'>11</option><option value='12'>12</option>
                                <option value='13'>13</option><option value='14'>14</option><option value='15'>15</option><option value='16'>16</option><option value='17'>17</option><option value='18'>18</option>
                                <option value='19'>19</option><option value='20'>20</option><option value='21'>21</option><option value='22'>22</option><option value='23'>23</option><option value='24'>24</option></select><br><br><br>
                                <input class='cheatlayer' type='text' id='scriptschedule' name='script' disabled><br><input class='cheatlayer' type='text' id='websiteschedule' name='website' disabled><br><br><br><button type='submit' id='submitSchedule' class='cheatlayer cheatlayer dropbtn'>Schedule</button>
</form>                                <button  id='cancelSchedule' class='cheatlayer cheatlayer dropbtn'>Cancel</button><center></div> </div>`;
                                    script_listen += "function processForm(e) { if (e.preventDefault) e.preventDefault(); (e); document.getElementById('scheduler').style.display = 'none'; var name = document.getElementById('scriptschedule').value;  var frequency = document.getElementById('frequency').value; var hour = document.getElementById('hour').value;  var start = document.getElementById('websiteschedule').value;  window.postMessage({formschedule: name , start: start, frequency: frequency, hours: hour} , '*');  setTimeout(function(){},2000);   return false; } var form = document.getElementById('submitScheduleForm'); if (form.attachEvent) { form.attachEvent('submit', processForm); } else { form.addEventListener('submit', processForm); document.getElementById('scheduler').style.display = 'none';}"
                                    $("body").append(scheduler_html);

                                    document.getElementById('scheduler').style.display = 'block'; ('schedule')
                                        ; var num = parseInt($(this).attr('aria-label'));
                                    (scripts[num].script); window.postMessage({ schedule: scripts[num].script, start: scripts[num].start, index: num }, '*');
                                    document.getElementById('scriptschedule').value = scripts[num].name;
                                    document.getElementById('websiteschedule').value = scripts[num].start;
                                });
                                $(document).on('click', '.whitecheat', function () {
                                    ('editscript');
                                    var num = parseInt($(this).attr('aria-label'));
                                    (scripts[num].script);
                                    window.postMessage({ whitelabel: scripts[num].script, start: scripts[num].start, index: num, name: scripts[num].name }, '*');

                                });
                                if (true) {

                                    $(document).on('click', '.removecheat', function () {
                                        if (!document.getElementById('loadingCheat')) {
                                            $('HTML').append(`<div id='loadingCheat' style='width: calc(100% - 270px);height:90%;left:0%;top:64.5px;position:fixed;background-color:white;z-index:1000000;'><img style='position:fixed;left:25%; top:30%;' src='` + chrome.runtime.getURL("logo.gif") + `'></img></div>`);
                                        } else {
                                            $('#loadingCheat').show();
                                        }
                                        var num = parseInt($(this).attr('aria-label'));
                                        scripts[num].deleted = "true";
                                        window.postMessage({ scripts: scripts }, '*');;

                                    });



                                    $(document).on('click', '.loopcheat', function () {
                                        if (true) {
                                            var script_code = scripts[$(this).attr('aria-label')].script;
                                            var delayloop = prompt("Enter delay in seconds between each loop.");
                                            var endloop = prompt("Enter the max executions loop.");
                                            var total = 0;
                                            if (!script_code.includes("[Tab Recording]")) {
                                                ////console.log("Running Script!");
                                                function slowLooper() {
                                                    eval( script_code);
                                                    if (total < endloop) {
                                                        setTimeout(slowLooper, delayloop * 1000);

                                                        total += 1;
                                                    }
                                                }
                                                slowLooper();

                                            } else {
                                                ////console.log("Running Recording!");

                                                SendMessage("loopRecording", "recording", { script_code: script_code, end: endloop });

                                            }

                                            var datascript = script_code;



                                        }

                                    });
                                    $(document).on('click', '.editcheat', function () {
                                        document.getElementById('cheatmenu').style.display = 'block';
                                        document.getElementById('script').style.display = 'block';
                                        document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
                                        var num = parseInt($(this).attr('aria-label'));
                                        window.postMessage({ setEditor: scripts[num].script, last_saved: scripts[num].name, no_code: scripts[num].no_code_container }, '*');
                                        last_saved = scripts[num].name; (num); window.postMessage({ removeLine: 'test' }, '*');

                                    });
                                    if (!GotScripts) {
                                        GotScripts = true;

                                    }
                                    //    
                                    added_functs = true;
                                }


                                script_listen += "document.getElementById('remove').onclick =  function(){('editscript');var num = scriptID; scripts.splice(num,1);  window.postMessage({scripts: scripts } , '*'); };";
                                script_listen += " var opened_editor = false; var layer = 0;    document.getElementById('editorOpen').onclick = function(){ layer++; if(layer%2 == 0){document.getElementById('scriptlist').style.height='10%';}else{document.getElementById('scriptlist').style.height='100%';}};document.getElementById('generate').onclick= function(){  window.postMessage({generate: 'input'} , '*');} ;";

                                script_listen += "},1000);"
                                var script = document.createElement("script"); input
                                script.innerHTML = script_listen;
                                document.body.appendChild(script);


                            }
                        }


                        tippy('.tooltipcheat', { arrow: true });
                        if (onboard == 0) {
                            //startOnboard(0);
                        }

                        var script_html = "";
                        var counter = 0;

                        var script_listen = "setTimeout(function(){";


                        //      script_html += "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' ><div> </div> <a  style='margin-left:10px;margin-right:10px;' class='cheatlayer cheatlayer runscript'   href='https://cheatlayer.com/request'  target='_blank' aria-label='Request' type='button' id='Request' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Request'>Request Script9</a></div></div><hr>";
                        //      script_html += "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' > <center><h2 class="cheatlayer"style='color:black;font-size:12px;'>Schedule</h2></center></div><hr>";


                        //    for (var kk = 0; kk < schedule.length; kk++) {
                        //       script_html += "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' ><div></div> " + schedule[kk].formschedule + " " + schedule[kk].frequency + "<br> " + schedule[kk].hours + " " + schedule[kk].start + " <br><a href='#' id='removeSchedule" + kk + "' aria-label='" + schedule[kk].formschedule + "," + schedule[kk].frequency + "," + schedule[kk].hours + "," + schedule[kk].start + "'>Remove</a> </div></div><hr>";
                        //       script_listen += "document.getElementById('removeSchedule" + kk + "').onclick = function(){var scheduleDetails = this.getAttribute('aria-label');window.postMessage({removeSchedule: scheduleDetails} , '*'); };";

                        //                       }
                        //

                        //          SendMessage("Community", "scripts", "", community_scripts);

                        script_listen += "},2000);"
                        $("#scriptlist").append(script_html);

                        var scheduler_html = `
                        <div id="scheduler"  class="cheatlayer modalcheat" style='display:none;position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
                        <div  class='modalcheat-content' style='border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:33%;z-index:100000000000;position:fixed;top:5px;left:33%;background-color:white;color:black !important;'>
                        <br><br><br><center><form id='submitScheduleForm' action='https://cheatlayer.com/user/ScheduleScripts' method='POST' class='cheatlayer cheatlayer form-horizontal'>
                        Automation Frequency:<select class='selectCheat selectBox  select' style='color:black' name='frequency' id='frequency'><option  value='hourly'>Hourly</option><option value='daily'>Daily</option><option value='Monday'>Monday</option><option value='Tuesday'>Tuesday</option><option value='Wednesday'>Wednesday</option><option value='Thursday'>Thursday</option><option value='Friday'>Friday</option><option value='Saturday'>Saturday</option><option value='Sunday'>
                        Sunday</option><option value='1'>Day 1</option><option value='2'>Day 2</option><option value='3'>Day 3</option><option value='4'>Day 4</option><option value='5'>Day 5</option><option value='6'>Day 6</option><option value='7'>Day 7</option><option value='8'>Day 8</option><option value='9'>Day 9</option><option value='10'>Day 10</option><option value='11'>Day 11</option><option value='12'>Day 12</option><option value='13'>Day 13</option><option value='14'>Day 14</option><option value='15'>Day 15</option><option value='16'>Day 16</option><option value='17'>Day 17</option><option value='18'>Day 18</option><option value='19'>Day 19</option>
                        <option value='20'>Day 20</option>
                        <option value='21'>Day 21</option>
                        <option value='22'>Day 22</option>
                        <option value='23'>Day 23</option>
                        <option value='24'>Day 24</option><option value='25'>Day 25</option><option value='26'>Day 26</option>
                        <option value='27'>Day 27</option><option value='28'>Day 28</option><option value='29'>Day 29</option>
                        <option value='30'>Day 30</option><option value='31'>Day 31</option></select><br><br><br>
                        Hour(only for Daily+):<select class='selectCheat selectBox  select' style='color:black' name='hour' id='hour'><option value='1'>1</option><option value='2'>2</option>
                        <option value='3'>3</option><option value='4'>4</option><option value='5'>5</option><option value='6'>6</option><option value='7'>7</option>
                        <option value='8'>8</option><option value='9'>9</option><option value='10'>10</option><option value='11'>11</option><option value='12'>12</option>
                        <option value='13'>13</option><option value='14'>14</option><option value='15'>15</option><option value='16'>16</option><option value='17'>17</option><option value='18'>18</option>
                        <option value='19'>19</option><option value='20'>20</option><option value='21'>21</option><option value='22'>22</option><option value='23'>23</option><option value='24'>24</option></select><br><br><br>
                        <input class='cheatlayer' type='text' id='scriptschedule' name='script' disabled><br><input class='cheatlayer' type='text' id='websiteschedule' name='website' disabled><br><br><br><button type='submit' id='submitSchedule' class='cheatlayer cheatlayer dropbtn'>Schedule</button>
                        </form><button  id='cancelSchedule' class='cheatlayer cheatlayer dropbtn'>Cancel</button><center></div> </div>`;
                        script_listen += "function processForm(e) { if (e.preventDefault) e.preventDefault(); (e); document.getElementById('scheduler').style.display = 'none'; var name = document.getElementById('scriptschedule').value;  var frequency = document.getElementById('frequency').value; var hour = document.getElementById('hour').value;  var start = document.getElementById('websiteschedule').value;  window.postMessage({formschedule: name , start: start, frequency: frequency, hours: hour} , '*');  setTimeout(function(){},2000);   return false; } var form = document.getElementById('submitScheduleForm'); if (form.attachEvent) { form.attachEvent('submit', processForm); } else { form.addEventListener('submit', processForm); document.getElementById('scheduler').style.display = 'none';}"


                        $(document).on('click', '#cancelSchedule', function () {
                            document.getElementById('scheduler').style.display = 'none';

                        });
                        $("body").append(scheduler_html);
                        var script = document.createElement("script");
                        script.innerHTML = script_listen;
                        document.body.appendChild(script);
                        $("#scriptlist").append(`<div class="cheatlayer btn-group" style="width:100%">
                        <button id='startlayer' class='cheatlayer' style="display:none;position:fixed; bottom:40px; right:0px;width:20%;" style='cheatlayer'>+ New Cheat</button>

                        <button id='nocodelayer' class='cheatlayer' style="position:fixed; bottom:0px; right:0px;width:90px;" style='cheatlayer'>No-Code</button>
                        <button id='codelayer' class='cheatlayer'  style="position:fixed; bottom:0px; right:90px;width:90px;" style='cheatlayer'>Code</button>
                        <button id='websitelayer' class='cheatlayer'style="position:fixed; bottom:0px; right:180px;width:90px;" style='cheatlayer'>Website</button>
                      </div>`);
                        $(document).on('click', '#nocodelayer', function () {
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                            drawNoCodeContainer()
                            document.getElementById('newnocode').style.display = 'block';
                            document.getElementById('script').style.display = 'none';
                            document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
                            document.getElementById('cheatmenu').style.display = 'block';



                        });


                        var scheduler_scripts = "";
                        var scheduler_code = "";
                        scheduler_code += `<table style="font-size:12px;"><tr><td>Scheduled Cheat</td><td>Frequency</td><td>Hour</td><td>Website</td><td>Remove</td></tr>`;
                        for (var kk = 0; kk < schedule.length; kk++) {
                            scheduler_code += "<tr><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].formschedule + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].frequency + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].hours + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].start + "</td><td><a href='#' id='removeSchedule" + kk + "' aria-label='" + schedule[kk].formschedule + "," + schedule[kk].frequency + "," + schedule[kk].hours + "," + schedule[kk].start + "'>Remove</a></td></tr> ";
                            scheduler_scripts += "document.getElementById('removeSchedule" + kk + "').onclick = function(){var scheduleDetails = this.getAttribute('aria-label');window.postMessage({removeSchedule: scheduleDetails} , '*'); };";

                        }
                        scheduler_code += `</table>`;
                        $("#schedulerblock").html(scheduler_code);

                        var script = document.createElement("script");
                        script.innerHTML = scheduler_scripts;
                        document.body.appendChild(script);
                        $(document).on('click', '#codelayer', function () {
                            box.hide();

                            if (window.location.href.includes('cheatlayer')) {

                                if (last_complete == 10) {
                                    setTimeout(function () {
                                        introJs().setOptions({
                                            steps: [
                                                {
                                                    element: document.querySelector('#filemenu'),
                                                    intro: 'Click File, then GPT-3 Code Generator to generate custom automations:'
                                                }]
                                        }).start();
                                    }, 1000);
                                }
                            }


                            document.getElementById('newnocode').style.display = 'none';
                            document.getElementById('script').style.display = 'block';
                            document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
                            document.getElementById('cheatmenu').style.display = 'block';
                            if (no_code_container.length > 0) {
                                for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                                    if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                        leader_lines[kk].remove();
                                        leader_lines[kk] = null;
                                    }

                                }
                            }
                            for (var kk = 0; kk < leader_lines.length - 1; kk++) {
                                if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                    leader_lines[kk].remove();
                                    leader_lines[kk] = null;
                                }

                            }



                            if (window.location.href.includes("chat.openai.com")) {

                               
                                            //Generating GPT-3 code.. Please wait up to 20 seconds//Generated Script id=3
                                            var divs = document.getElementsByTagName('code');
                                            //Loop through divs and find the divs with class that includes "!whitespace-pre"
                                            var chat_code = "";
                                            for (var i = 0; i < divs.length; i++) {
                                                if (divs[i].className.includes("whitespace-pre")) {
                                                    //////console.log(divs[i].innerText);
                                                    //////console.log(divs[i].innerText);
                                                    ////console.log(divs[i].innerText);
                                                    chat_code += divs[i].innerText;
                                                }
                                            }

                                            window.editor = ace.edit("script");
                                            //window.editor.setValue(old_code);
                                            window.editor.setAutoScrollEditorIntoView(true);
                                            window.editor.getSession().setMode("ace/mode/javascript");
                                            window.editor.setTheme("ace/theme/tomorrow");

                                            window.editor.setValue(chat_code);
                                            runScriptEval();


                                //endcode GPT Prompt: Collect all the div on the page with an inner text that includes poop and print them. 
                                //Generating GPT-3 code.. Please 
                            }



                        });
                        $(document).on('click', '#editorOpen', function () {
                            layer++;
                            if (layer % 2 == 0) {
                                document.getElementById('scriptlist').style.height = '10%';
                                document.getElementById('codelayer').style.display = 'none';
                                document.getElementById('websitelayer').style.display = 'none';
                                document.getElementById('nocodelayer').style.display = 'none';

                            } else {
                                document.getElementById('scriptlist').style.height = '100%';

                                document.getElementById('codelayer').style.display = 'block';
                                document.getElementById('websitelayer').style.display = 'block';
                                document.getElementById('nocodelayer').style.display = 'block';
                            }

                        });
                        $(document).on('click', '#websitelayer', function () {



                            document.getElementById('newnocode').style.display = 'none';
                            document.getElementById('script').style.display = 'none';
                            document.getElementById('console').style.display = 'none'; document.getElementById('schedulerblock').style.display = 'none';
                            document.getElementById('cheatmenu').style.display = 'none';
                            if (no_code_container.length > 0) {
                                for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                                    if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                        leader_lines[kk].remove();
                                        leader_lines[kk] = null;
                                    }

                                }
                            }
                            for (var kk = 0; kk < leader_lines.length - 1; kk++) {
                                if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                    leader_lines[kk].remove();
                                    leader_lines[kk] = null;
                                }

                            }
                            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        });


                    }


                });

            } else {
                var created = new Date(msg.scripts.started);
                var now = new Date();
                const diffTime = Math.abs(now - created);
                const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));
                (msg.scripts);

                user_plan = msg.scripts.plan;
                bootcampS2 = msg.scripts.bootcampS2;
                if (msg.scripts.plan == "") {
                    alert("Please right click the extension icon, click remove, then make sure you log in at cheatlayer.com and upgrade your account. Then re-install the extension after you have logged in at cheatlayer.com in that order. It's necessary to first log in at cheatlayer.com when installing the extension to authenticate.");

                } if (msg.scripts.plan == "free" && diffDays > 14) {
                    alert("Free trial expired! Please upgrade at cheatlayer.com/billing.");

                } else {
                    scripts = msg.scripts.scripts;
                    folders = msg.scripts.folders;

                    community_scripts = msg.scripts.community_scripts;

                    var script_html = "";
                    for (var kk = 0; kk < folders.length; kk++) {
                        if (folders[kk].split(" ").join("").length == 0) {
                            continue;
                        }
                        script_html += `  <li class="cheatlayer folder-line-cheatlayer" aria-label="` + folders[kk] + `">
                        <div class="cheatlayer list-inner code-list-wrap">
                       
                            <div class='cheatlayer' style='white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 100%;' class='cheatlayer' >
                                <img src="` + chrome.runtime.getURL("folder.png") + `" width="32px" height="32px" style="margin:10px" class="cheatlayer img-fluid">
                                <span class='cheatlayer'style="position:relative;top:0px;white-space: pre-wrap; word-wrap:break-word;" >` + folders[kk] + `</span>
                            </div>
                           
                        </div>
                    
                    </li>`;
                    }
                    for (var kk = 0; kk < scripts.length; kk++) {
                        if (scripts[kk].deleted != "true") {
                            if (typeof scripts[kk].start == 'undefined') {
                                scripts[kk].start = "cheatlayer.com";
                            }
                            if (scripts[kk].start.includes("*")) {
                                scripts[kk].start = "cheatlayer.com";
                            }
                            var temstart = scripts[kk].start;
                            if (scripts[kk].start.includes("http")) {
                                temstart = scripts[kk].start.split("//")[1];
                            }
                            temstart = temstart.split("/")[0];

                            script_html += `<li class="cheatlayer code-line-cheatlayer">
                        <div class="cheatlayer list-inner code-list-wrap">
                       
                            <div class='cheatlayer cheatline' style='white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 80%;' class='cheatlayer' >
                                <img src="https://` + temstart + `/favicon.ico" width="32px" height="32px" style="margin:10px" class="cheatlayer img-fluid">
                                <span class='cheatlayer'style="position:relative;top:0px;white-space: pre-wrap; word-wrap:break-word;">` + scripts[kk].name + `</span>
                            </div>
                           
                                        </div>
                                    
                                    </li>
                                    <div id="content` + kk + `"  class='cheatlayer'style="display: none;z-index:100000">
                    <ul class="cheatlayer code-gen-list" style="z-index:1000000000">
                        <li><a  style="display: block;" class='cheatlayer cheatlayer runscript runcheat' type='button' aria-label='` + kk + `' id='run` + kk + `' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M11 21C16.5228 21 21 16.5228 21 11C21 5.47715 16.5228 1 11 1C5.47715 1 1 5.47715 1 11C1 16.5228 5.47715 21 11 21Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M3.66699 10.9998C3.66699 9.05492 4.43961 7.18965 5.81488 5.81439C7.19014 4.43912 9.0554 3.6665 11.0003 3.6665C12.9452 3.6665 14.8105 4.43912 16.1858 5.81439C17.561 7.18965 18.3337 9.05492 18.3337 10.9998" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M8.33301 7L9.72901 12.714C9.78431 12.9026 9.88075 13.0766 10.0114 13.2234C10.142 13.3703 10.3036 13.4863 10.4845 13.5632C10.6654 13.6401 10.8611 13.6759 11.0574 13.668C11.2538 13.6601 11.446 13.6088 11.6202 13.5177C11.7943 13.4267 11.9461 13.2981 12.0646 13.1413C12.1831 12.9845 12.2654 12.8033 12.3054 12.6109C12.3455 12.4185 12.3424 12.2196 12.2963 12.0286C12.2502 11.8375 12.1624 11.659 12.039 11.506C12.041 11.4653 8.33301 7 8.33301 7Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            Run</a></li>
                            <li><a  style="display: block;" class='cheatlayer cheatlayer runscript loopcheat'   aria-label='` + kk + `' type='button' id='loop` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M11 21C16.5228 21 21 16.5228 21 11C21 5.47715 16.5228 1 11 1C5.47715 1 1 5.47715 1 11C1 16.5228 5.47715 21 11 21Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M3.66699 10.9998C3.66699 9.05492 4.43961 7.18965 5.81488 5.81439C7.19014 4.43912 9.0554 3.6665 11.0003 3.6665C12.9452 3.6665 14.8105 4.43912 16.1858 5.81439C17.561 7.18965 18.3337 9.05492 18.3337 10.9998" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M8.33301 7L9.72901 12.714C9.78431 12.9026 9.88075 13.0766 10.0114 13.2234C10.142 13.3703 10.3036 13.4863 10.4845 13.5632C10.6654 13.6401 10.8611 13.6759 11.0574 13.668C11.2538 13.6601 11.446 13.6088 11.6202 13.5177C11.7943 13.4267 11.9461 13.2981 12.0646 13.1413C12.1831 12.9845 12.2654 12.8033 12.3054 12.6109C12.3455 12.4185 12.3424 12.2196 12.2963 12.0286C12.2502 11.8375 12.1624 11.659 12.039 11.506C12.041 11.4653 8.33301 7 8.33301 7Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>
                            Loop
                            </a></li>
                        <li><a  style="display: block;" class='cheatlayer cheatlayer runscript editcheat' aria-label='` + kk + `' type='button' id='edit` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M1 21H11H21" stroke="white" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M11.2464 4.1427L16.7462 9.64238M11.2464 4.1427L14.3892 1L19.8888 6.49972L16.7462 9.64238L11.2464 4.1427ZM11.2464 4.1427L5.01684 10.3723C4.80847 10.5806 4.69141 10.8633 4.69141 11.1579V16.1974H9.73093C10.0256 16.1974 10.3082 16.0804 10.5166 15.8719L16.7462 9.64238L11.2464 4.1427Z"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>Edit
                            </a></li>
                        <li><a  style="display: block;" class='cheatlayer cheatlayer runscript removecheat'   aria-label='` + kk + `' type='button' id='remove` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M18.7782 9.88867V20.3331C18.7782 20.7013 18.4798 20.9998 18.1115 20.9998H3.88932C3.52113 20.9998 3.22266 20.7013 3.22266 20.3331V9.88867"  stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M8.77734 16.5553V9.88867" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M13.2227 16.5553V9.88867" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M6.55556 5.44444H15.4444M21 5.44444H15.4444H21ZM1 5.44444H6.55556H1ZM6.55556 5.44444V1.66667C6.55556 1.29848 6.85403 1 7.22222 1H14.7778C15.146 1 15.4444 1.29848 15.4444 1.66667V5.44444H6.55556Z" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>Remove
                            </a></li>
                        <li><a style="display: block;" class='cheatlayer cheatlayer runscript whitecheat'   aria-label='` + kk + `' type='button' id='whitelabel` + kk + `' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'><svg class="cheatlayer"  width="22" height="22" viewBox="0 0 22 22" fill="none" xmlns="http://www.w3.org/2000/svg">
                            <path d="M11.5769 1L1 11.5769C1.50617 12.0766 1.79742 12.754 1.81178 13.4651C1.82615 14.1763 1.5625 14.8649 1.07692 15.3846L6.61538 20.9231C7.13509 20.4375 7.82375 20.1739 8.53485 20.1882C9.24596 20.2026 9.9234 20.4938 10.4231 21L21 10.4231C20.743 10.1691 20.539 9.86664 20.3997 9.53323C20.2605 9.19982 20.1887 8.84209 20.1887 8.48077C20.1887 8.11945 20.2605 7.76172 20.3997 7.42831C20.539 7.0949 20.743 6.79244 21 6.53846L15.4615 1C15.2076 1.257 14.9051 1.46103 14.5717 1.60029C14.2383 1.73955 13.8806 1.81125 13.5192 1.81125C13.1579 1.81125 12.8002 1.73955 12.4668 1.60029C12.1334 1.46103 11.8309 1.257 11.5769 1Z"  stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
                            <path d="M9.92283 17.0385C9.70067 17.2523 9.40428 17.3718 9.0959 17.3718C8.78752 17.3718 8.49114 17.2523 8.26898 17.0385L4.96129 13.7308C4.74741 13.5086 4.62793 13.2122 4.62793 12.9039C4.62793 12.5955 4.74741 12.2991 4.96129 12.0769L12.1536 4.88463C12.3758 4.67075 12.6721 4.55127 12.9805 4.55127C13.2889 4.55127 13.5853 4.67075 13.8074 4.88463L17.1151 8.19232C17.329 8.41448 17.4485 8.71086 17.4485 9.01924C17.4485 9.32762 17.329 9.62401 17.1151 9.84616L9.92283 17.0385Z"  stroke-width="2" stroke-miterlimit="10" stroke-linecap="round" stroke-linejoin="round"/>
                            </svg>White Label
                            </a></li>
                      
                    </ul>
                    </div>`;
                        }
                    }
                    //class="genrate-btn"

                    $('HTML').append(`<div class='cheatlayer cheatlayer rowt'  style='background-color:white;color:black;'><div class='cheatlayer cheatlayer col-xs-4' style='color:gray;z-index:10000; opacity:1.0; width:1000px; height:20px;width:5%; position:fixed; left:5px; top:0px;'><div id='cheatmenu' class='cheatlayer cheatlayer col-xs-4' style='display:none;color:gray;z-index:10000; opacity:1.0; width:200px; height:20px; position:fixed; left:0px; top:0px;'><div class='cheatlayer' style='white-space: nowrap; overflow: hidden; text-overflow: ellipsis; width: 80%;' class='cheatlayer' >
<a class="cheatlayer text-area-start-right tooltipcheat hatel"  
    data-tippy-interactive="true" 
    data-tippy-theme="light rounded"  
    data-tippy-placement="bottom" 
    data-tippy-html="#contentCheat" 
    data-tippy-trigger="click" style='background-color:white;'>
<article id='filemenu' class='cheatlayer' ><img width='64px' height='64px' src="https://cheatlayer.com/images/textarea/file-text-area.png" class="img-fluid">File</article>
</a>  
</div>

<div id="contentCheat" style="display: none;z-index:1000000000; ">
    <ul class="cheatlayer code-gen-list" style="z-index:1000000000; text-align: left;">
        <li><a id='new'class='cheatlayer cheatlayer runscript newcheat' type='button' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' style="display: block;" >New</article></a></li>
            <li><a id='newFolder'class='cheatlayer cheatlayer runscript newFolder' type='button' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >New Folder</article></a></li>
            
            <li><a id='export'class='cheatlayer cheatlayer runscript exportcheat' type='button' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Export Cheats</article></a></li>
            <li><a id='import'class='cheatlayer cheatlayer runscript exportcheat' type='button' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Import Cheats</article></a></li>
        <li><a id='play'  style="display: block;" class='cheatlayer cheatlayer runscript runeditorcheat'  class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Run (CTRL+R)</article></a></li>
        <li><a id='add'  style="display: block;"  class='cheatlayer cheatlayer runscript savecheat'  class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Save (CTRL+S)</article></a></li>
        <li><a  id='addAs'  style="display: block;" class='cheatlayer cheatlayer runscript saveascheat'   class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >Save As</article></a></li>
        <li><a id='generate'  style="display: block;" class='cheatlayer cheatlayer runscript generategptcheat'   class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>
            <article class='cheatlayer' >GPT-3 Code Generator (CTRL+G)</article></a></li>
    </ul>
    </div></div></div> </div> <div id='newnocode' class='cheatlayer cheatlayer' style='border:1px solid black;display:none;resize:both;background:rgba(255,255,255,0.3);overflow-x:auto;overflow-y:auto;position:fixed;z-index:10000; boder:1px solid black;top:64.5px; font-size:24px; left:0%;width: calc(100% - 270px);height:70%;color:white'></div><div id='script' class='cheatlayer cheatlayer' width='100%' height='100%' style='height:70%; overflow-y:auto;overflow-x:auto;width:100%;background-color: #16092F !important;z-index:-10000; opacity:0.8;width: calc(100% - 270px); height:70%; overflow-y:hidden;overflow-x:hidden; position:fixed; left:0px; top:64.5px; font-size:24px;  display:none;font-size:24px;'></div><textarea id='console' placeholder='Console Output' class='cheatlayer cheatlayer' width='100%' height='100%' style='height:70%; overflow-y:hidden;overflow-x:hidden;width:100%;color:gray;z-index:-10000; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:hidden;overflow-x:hidden; position:fixed; left:0px; top:calc(70% + 64.5px); font-size:24px; min-height:300px; display:none;font-size:24px;'></textarea><div id='schedulerblock' class='cheatlayer cheatlayer' width='100%' height='100%' style='height:70%;diplay:none; overflow-y:hidden;overflow-x:hidden;width:100%;color:gray;z-index:-10000; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:hidden;overflow-x:hidden; position:fixed; left:40%; top:calc(70% + 64.5px); font-size:24px; min-height:300px; display:none;font-size:24px;'></div><script>function addAs(){ window.postMessage({scriptsNewAs: scripts } , '*');(scripts);  }function add(){window.postMessage({scriptsNew: scripts } , '*');}  document.getElementById('new').addEventListener('click', function(){window.postMessage({newScript: 'test' } , '*');}); var showeditor = false; function show(){if(showeditor){  document.getElementById('schedulerblock').style='display:none;z-index:-1000;';document.getElementById('console').style='display:none; z-index:-10000;'; document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;display:none; z-index:-10000;';document.getElementById('script').style='display:none; display:none; z-index:-10000;'; document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;display:none; z-index:-10000;'; showeditor = false;}else{showeditor = true;if(document.getElementById('script')){document.getElementById('script').style='display:none;z-index:100005; opacity:1.0;width: calc(100% - 270px); height:70%; overflow-y:hidden;overflow-x:hidden; position:fixed; left:0px; top:64.5px; font-size:24px; ';}if(document.getElementById('console')){document.getElementById('schedulerblock').style='display:none; background-color:white;color:black;z-index:100005; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:hidden;overflow-x:hidden; position:fixed; left:40%; top:calc(70% + 64.5px); font-size:24px; min-height:calc(30% - 64.5px); background-color:white;';document.getElementById('console').style='display:none; background-color:white;color:black;z-index:100005; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:scroll;overflow-x:scroll;     resize:both; position:fixed; left:0px; top:calc(70% + 64.5px); font-size:24px; min-height:calc(30% - 64.5px); background-color:white;';}if(document.getElementById('scriptlist')){document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;background-color:white;color:black;z-index:1000005; opacity:1.0; width:270px;height:100%; overflow-y:auto;overflow-x:hidden;overflow-x:hidden; position:fixed; right:0px; top:0px;';}} } document.getElementById('add').addEventListener('click', add);document.getElementById('addAs').addEventListener('click', addAs);function addScript(){var script = $('#script').val();}</script>`);

                    $('HTML').append(`<script>
        function evalScript(){window.postMessage({evalScript: 'test' } , '*');} document.getElementById('play').addEventListener('click', evalScript); </script>
        `);


                    $('HTML').append("<style>/* Dropdown Button */ .dropbtn { background-color: white; color: black; padding: 16px; font-size: 16px; border: none; } /* The container <div> - needed to position the dropdown content */ .dropdown { position: relative; display: inline-block; } /* Dropdown Content (Hidden by Default) */ .dropdown-content { display: none; position: absolute; background-color: #f1f1f1; min-width: 160px; box-shadow: 0px 8px 16px 0px rgba(0,0,0,0.2); z-index: 1; } /* Links inside the dropdown */ .dropdown-content a { color: black; padding: 12px 16px; text-decoration: none; display: block; } /* Change color of dropdown links on hover */ .dropdown-content a:hover {background-color: #ddd;} /* Show the dropdown menu on hover */ .dropdown:hover .dropdown-content {display: block;} /* Change the background color of the dropdown button when the dropdown content is shown */ .dropdown:hover .dropbtn {background-color: #3e8e41;}hr{ border-top: 1px solid white; width:100%; } .col-xs-4{padding:0px !important;} .rowt { padding:0px !important;border-bottom:1px solid white; white-space: nowrap;   text-align: left; } .rowt > div {display: inline-block; }</style><div class='cheatlayer cheatlayer rowt' ><div id='scriptlist' class='cheatlayer cheatlayer col-xs-4' style='overflow-y:hidden;overflow-x:hidden; padding:0px !important;display:none; background-color:white;color:black;z-index:1000005; opacity:1.0; width:400px ;height:100%; overflow-y:hidden;overflow-x:hidden; position:fixed; right:0px; top:0px; '><div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' ><center><div class='cheatlayer' style='font-size:34px;color:black;padding:10px;'><center><button href='#' id='editorOpen'  class='cheatlayer'style='font-size:32px;background-color:#FFFFFF; border:1px solid #FFFFFF; border-radius:0px; color:#000000; margin-right:10px; padding:5px;z-index:1000000000000000000;'><img class='cheatlayer' width='100%' src='" + chrome.runtime.getURL("logo.png") + "' class='cheatlayer img-fluid'> </button></center>   </div></center></div><div class='cheatlayer right-container  hide-sm-device-cc'><div id='no_code_parameters' class='cheatlayer cheatlayer rowt' style='display:none;padding:10px !important;margin:5px;background-color:white;color:black; width:100%;' ></div><div id='newonboard' class='cheatlayer cheatlayer rowt' style='margin:5px;background-color:white;color:black; width:100%;' ></div><ul class='cheatlayer cheat-code-company-list'>" + script_html + "</ul></div></div></div><script>var scripts =` + JSON.stringify(scripts) + ` ;function runScript(){var num = parseInt(this.getAttribute('aria-label')); (scripts[num].script);eval(scripts[num].script);}function editScript(){(editScript);var num = parseInt(this.getAttribute('aria-label')); scriptID = num; window.postMessage({setEditor: scripts[num].script, last_saved:scripts[num].name , no_code: scripts[num].no_code_container} , '*');last_saved=scripts[num].name;last_saved=scripts[num].name;(num);} function removeScript(){var num = scriptID; scripts.splice(num,1);  window.postMessage({scripts: scripts } , '*'); } function publishScript(){ } </script>");
                    //create a chat interface and inject it into 
                    $("#newonboard").append(`
                    <div class="cheatlayer btn-group" style="width:100%"><button style="width:100%" class="cheatlayer" id="sendAtlas">Add Automation</button></div>
                    `);

                
     //$('#messagesCheatCheat').append('<button class="saveChat">Save</button><button class="stopChat">Stop</button>');
     //$('#messagesCheatCheat').animate({ scrollTop: $('#messagesCheatCheat').prop('scrollHeight') }, 30);

                $(document).on('click', '#sendAtlas', function () {
                    addCheat();
                });
                                    
                                    $(document).on("keypress", function (e) {
                                        
                                        if (e.which == 13 && e.target.id == "atlasInput") {
                                            $('#sendAtlas').click();
                                            return false;
                                        }
                                    });



                    var script_listen = "setTimeout(function(){";
                    if (!GotScripts) {
                        GotScripts = true;
                        $(document).on('click', '#play', function () {
                            window.postMessage({ evalScript: 'test' }, '*');
                        });
                    }


                    $(document).on('click', '#add', function () {
                        window.postMessage({ scriptsNew: scripts }, '*');
                    });
                    $(document).on('click', '#addAs', function () {
                        window.postMessage({ scriptsNewAs: scripts }, '*'); (scripts);

                    });
                    $(document).on('click', '#generate', function () {
                        window.postMessage({ generate: 'input' }, '*');
                    });
                    $(document).on('click', '#new', function () {
                        window.postMessage({ newScript: 'test' }, '*');
                    });
                    $(document).on('click', '.schedulecheat', function () {
                        document.getElementById('scheduler').remove();
                        var scheduler_html = `
                                <div id="scheduler"  class="cheatlayer modalcheat" style='display:none;position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
                                <div  class='modalcheat-content' style='border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:33%;z-index:100000000000;position:fixed;top:5px;left:33%;background-color:white;color:black !important;'>
                                <br><br><br><center><form id='submitScheduleForm' class='cheatlayer cheatlayer form-horizontal'>
                                Automation Frequency:<select class='selectCheat selectBox  select' style='color:black' name='frequency' id='frequency'><option  value='hourly'>Hourly</option><option value='daily'>Daily</option><option value='Monday'>Monday</option><option value='Tuesday'>Tuesday</option><option value='Wednesday'>Wednesday</option><option value='Thursday'>Thursday</option><option value='Friday'>Friday</option><option value='Saturday'>Saturday</option><option value='Sunday'>
                                Sunday</option><option value='1'>Day 1</option><option value='2'>Day 2</option><option value='3'>Day 3</option><option value='4'>Day 4</option><option value='5'>Day 5</option><option value='6'>Day 6</option><option value='7'>Day 7</option><option value='8'>Day 8</option><option value='9'>Day 9</option><option value='10'>Day 10</option><option value='11'>Day 11</option><option value='12'>Day 12</option><option value='13'>Day 13</option><option value='14'>Day 14</option><option value='15'>Day 15</option><option value='16'>Day 16</option><option value='17'>Day 17</option><option value='18'>Day 18</option><option value='19'>Day 19</option>
                                <option value='20'>Day 20</option>
                                <option value='21'>Day 21</option>
                                <option value='22'>Day 22</option>
                                <option value='23'>Day 23</option>
                                <option value='24'>Day 24</option><option value='25'>Day 25</option><option value='26'>Day 26</option>
                                <option value='27'>Day 27</option><option value='28'>Day 28</option><option value='29'>Day 29</option>
                                <option value='30'>Day 30</option><option value='31'>Day 31</option></select><br><br><br>
                                Hour(only for Daily+):<select class='selectCheat selectBox  select' style='color:black' name='hour' id='hour'><option value='1'>1</option><option value='2'>2</option>
                                <option value='3'>3</option><option value='4'>4</option><option value='5'>5</option><option value='6'>6</option><option value='7'>7</option>
                                <option value='8'>8</option><option value='9'>9</option><option value='10'>10</option><option value='11'>11</option><option value='12'>12</option>
                                <option value='13'>13</option><option value='14'>14</option><option value='15'>15</option><option value='16'>16</option><option value='17'>17</option><option value='18'>18</option>
                                <option value='19'>19</option><option value='20'>20</option><option value='21'>21</option><option value='22'>22</option><option value='23'>23</option><option value='24'>24</option></select><br><br><br>
                                <input class='cheatlayer' type='text' id='scriptschedule' name='script' disabled><br><input class='cheatlayer' type='text' id='websiteschedule' name='website' disabled><br><br><br><button type='submit' id='submitSchedule' class='cheatlayer cheatlayer dropbtn'>Schedule</button>
</form>                                <button  id='cancelSchedule' class='cheatlayer cheatlayer dropbtn'>Cancel</button><center></div> </div>`;
                        script_listen += "function processForm(e) { if (e.preventDefault) e.preventDefault(); (e); document.getElementById('scheduler').style.display = 'none'; var name = document.getElementById('scriptschedule').value;  var frequency = document.getElementById('frequency').value; var hour = document.getElementById('hour').value;  var start = document.getElementById('websiteschedule').value;  window.postMessage({formschedule: name , start: start, frequency: frequency, hours: hour} , '*');  setTimeout(function(){},2000);   return false; } var form = document.getElementById('submitScheduleForm'); if (form.attachEvent) { form.attachEvent('submit', processForm); } else { form.addEventListener('submit', processForm); document.getElementById('scheduler').style.display = 'none';}"
                        $("body").append(scheduler_html);

                        document.getElementById('scheduler').style.display = 'block'; ('schedule')
                            ; var num = parseInt($(this).attr('aria-label'));
                        (scripts[num].script); window.postMessage({ schedule: scripts[num].script, start: scripts[num].start, index: num }, '*');
                        document.getElementById('scriptschedule').value = scripts[num].name;
                        document.getElementById('websiteschedule').value = scripts[num].start;
                    });
                    $(document).on('click', '.whitecheat', function () {
                        ('editscript');
                        var num = parseInt($(this).attr('aria-label'));
                        (scripts[num].script);
                        window.postMessage({ whitelabel: scripts[num].script, start: scripts[num].start, index: num, name: scripts[num].name }, '*');

                    });
                    if (true) {

                        $(document).on('click', '.removecheat', function () {
                            if (!document.getElementById('loadingCheat')) {
                                $('HTML').append(`<div id='loadingCheat' style='width: calc(100% - 270px);height:90%;left:0%;top:64.5px;position:fixed;background-color:white;z-index:1000000;'><img style='position:fixed;left:25%; top:30%;' src='` + chrome.runtime.getURL("logo.gif") + `'></img></div>`);
                            } else {
                                $('#loadingCheat').show();
                            }
                            var num = parseInt($(this).attr('aria-label'));
                            scripts[num].deleted = "true";
                            window.postMessage({ scripts: scripts }, '*');;

                        });



                        $(document).on('click', '.loopcheat', function () {
                            if (true) {
                                var script_code = scripts[$(this).attr('aria-label')].script;
                                var delayloop = prompt("Enter delay in seconds between each loop.");
                                var endloop = prompt("Enter the max executions loop.");
                                var total = 0;
                                if (!script_code.includes("[Tab Recording]")) {
                                    ////console.log("Running Script!");
                                    function slowLooper() {
                                        eval( script_code);
                                        if (total < endloop) {
                                            setTimeout(slowLooper, delayloop * 1000);

                                            total += 1;
                                        }
                                    }
                                    slowLooper();

                                } else {
                                    ////console.log("Running Recording!");

                                    SendMessage("loopRecording", "recording", { script_code: script_code, end: endloop });

                                }

                                var datascript = script_code;



                            }

                        });

                        $(document).on('click', '.editcheat', function () {
                            document.getElementById('cheatmenu').style.display = 'block';
                            document.getElementById('script').style.display = 'block';
                            document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
                            var num = parseInt($(this).attr('aria-label'));
                            window.postMessage({ setEditor: scripts[num].script, last_saved: scripts[num].name, no_code: scripts[num].no_code_container }, '*');
                            last_saved = scripts[num].name; (num); window.postMessage({ removeLine: 'test' }, '*');

                        });
                        if (!GotScripts) {
                            GotScripts = true;

                        }
                        added_functs = true;
                    }

                    //                  script_listen += "document.getElementById('remove').onclick =  function(){('editscript');var num = scriptID; scripts.splice(num,1);  window.postMessage({scripts: scripts } , '*'); };";
                    script_listen += " var opened_editor = false; var layer = 0;    document.getElementById('editorOpen').onclick = function(){ layer++; if(layer%2 == 0){document.getElementById('scriptlist').style.height='10%';}else{document.getElementById('scriptlist').style.height='100%';}};document.getElementById('generate').onclick= function(){  window.postMessage({generate: 'input'} , '*');} ;";

                    script_listen += "},1000);"
                    var script = document.createElement("script");
                    script.innerHTML = script_listen;
                    document.body.appendChild(script);

                    tippy('.tooltipcheat', { arrow: true });

                    if (onboard == 0) {
                        //startOnboard(0);
                    }
                    var script_html = "";
                    var counter = 0;

                    var script_listen = " setTimeout(function(){";


                    //reloaded one
                    ///  script_html += "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' > <center><h2 class="cheatlayer"style='color:black;font-size:12px;'>Schedule</h2></center></div><hr>";
                    //  for (var kk = 0; kk < schedule.length; kk++) {
                    //      script_html += "<div class='cheatlayer cheatlayer rowt' style='background-color:white;color:black; width:100%;' ><div></div> " + schedule[kk].formschedule + " " + schedule[kk].frequency + "<br> " + schedule[kk].hours + " " + schedule[kk].start + " <br><a href='#' id='removeSchedule" + kk + "' aria-label='" + schedule[kk].formschedule + "," + schedule[kk].frequency + "," + schedule[kk].hours + "," + schedule[kk].start + "'>Remove</a> </div></div><hr>";
                    //      script_listen += "document.getElementById('removeSchedule" + kk + "').onclick = function(){var scheduleDetails = this.getAttribute('aria-label');window.postMessage({removeSchedule: scheduleDetails} , '*'); };";

                    //  }
                    //          SendMessage("Community", "scripts", "", community_scripts);

                    script_listen += "},2000);"
                    $("#scriptlist").append(script_html);

                    var scheduler_html = `
                    <div id="scheduler"  class="cheatlayer modalcheat" style='display:none;position: fixed; /* Stay in place */ left: 0; top: 0; width: 100%; /* Full width */ height: 100%;  color:black; overflow: auto;  /* Fallback color */ background-color: rgba(0,0,0,0.4); /* Black w/ opacity */ z-index:10000000000;' >
                    <div  class='modalcheat-content' style='border-radius:25px; padding:20px; margin:20px;border:1px solid black;opacity:1.0;width:33%;z-index:100000000000;position:fixed;top:5px;left:33%;background-color:white;color:black !important;'>
                    <br><br><br><center><form id='submitScheduleForm' class='cheatlayer cheatlayer form-horizontal'>
                    Automation Frequency:<select class='selectCheat selectBox  select' style='color:black' name='frequency' id='frequency'><option  value='hourly'>Hourly</option><option value='daily'>Daily</option><option value='Monday'>Monday</option><option value='Tuesday'>Tuesday</option><option value='Wednesday'>Wednesday</option><option value='Thursday'>Thursday</option><option value='Friday'>Friday</option><option value='Saturday'>Saturday</option><option value='Sunday'>
                    Sunday</option><option value='1'>Day 1</option><option value='2'>Day 2</option><option value='3'>Day 3</option><option value='4'>Day 4</option><option value='5'>Day 5</option><option value='6'>Day 6</option><option value='7'>Day 7</option><option value='8'>Day 8</option><option value='9'>Day 9</option><option value='10'>Day 10</option><option value='11'>Day 11</option><option value='12'>Day 12</option><option value='13'>Day 13</option><option value='14'>Day 14</option><option value='15'>Day 15</option><option value='16'>Day 16</option><option value='17'>Day 17</option><option value='18'>Day 18</option><option value='19'>Day 19</option>
                    <option value='20'>Day 20</option>
                    <option value='21'>Day 21</option>
                    <option value='22'>Day 22</option>
                    <option value='23'>Day 23</option>
                    <option value='24'>Day 24</option><option value='25'>Day 25</option><option value='26'>Day 26</option>
                    <option value='27'>Day 27</option><option value='28'>Day 28</option><option value='29'>Day 29</option>
                    <option value='30'>Day 30</option><option value='31'>Day 31</option></select><br><br><br>
                    Hour(only for Daily+):<select class='selectCheat selectBox  select' style='color:black' name='hour' id='hour'><option value='1'>1</option><option value='2'>2</option>
                    <option value='3'>3</option><option value='4'>4</option><option value='5'>5</option><option value='6'>6</option><option value='7'>7</option>
                    <option value='8'>8</option><option value='9'>9</option><option value='10'>10</option><option value='11'>11</option><option value='12'>12</option>
                    <option value='13'>13</option><option value='14'>14</option><option value='15'>15</option><option value='16'>16</option><option value='17'>17</option><option value='18'>18</option>
                    <option value='19'>19</option><option value='20'>20</option><option value='21'>21</option><option value='22'>22</option><option value='23'>23</option><option value='24'>24</option></select><br><br><br>
                    <input class='cheatlayer' type='text' id='scriptschedule' name='script' disabled><br><input class='cheatlayer' type='text' id='websiteschedule' name='website' disabled><br><br><br><button type='submit' id='submitSchedule' class='cheatlayer cheatlayer dropbtn'>Schedule</button>
                    </form><button  id='cancelSchedule' class='cheatlayer cheatlayer dropbtn'>Cancel</button><center></div> </div>`;
                    script_listen += "function processForm(e) { if (e.preventDefault) e.preventDefault(); (e); document.getElementById('scheduler').style.display = 'none'; var name = document.getElementById('scriptschedule').value;  var frequency = document.getElementById('frequency').value; var hour = document.getElementById('hour').value;  var start = document.getElementById('websiteschedule').value;  window.postMessage({formschedule: name , start: start, frequency: frequency, hours: hour} , '*');  setTimeout(function(){},2000);   return false; } var form = document.getElementById('submitScheduleForm'); if (form.attachEvent) { form.attachEvent('submit', processForm); } else { form.addEventListener('submit', processForm); document.getElementById('scheduler').style.display = 'none';}"
                    $("body").append(scheduler_html);
                    var script = document.createElement("script");
                    script.innerHTML = script_listen;
                    document.body.appendChild(script);


                    $(document).on('click', '#cancelSchedule', function () {
                        document.getElementById('scheduler').style.display = 'none';

                    });
                    var scheduler_scripts = "";
                    var scheduler_code = "";
                    scheduler_code += `<table style="font-size:12px;"><tr><td>Scheduled Cheat</td><td>Frequency</td><td>Hour</td><td>Website</td><td>Remove</td></tr>`;
                    for (var kk = 0; kk < schedule.length; kk++) {
                        scheduler_code += "<tr><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].formschedule + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].frequency + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].hours + "</td><td style='max-width:100px;overflow:hidden;white-space: nowrap;'>" + schedule[kk].start + "</td><td><a href='#' id='removeSchedule" + kk + "' aria-label='" + schedule[kk].formschedule + "," + schedule[kk].frequency + "," + schedule[kk].hours + "," + schedule[kk].start + "'>Remove</a></td></tr> ";
                        scheduler_scripts += "document.getElementById('removeSchedule" + kk + "').onclick = function(){var scheduleDetails = this.getAttribute('aria-label');window.postMessage({removeSchedule: scheduleDetails} , '*'); };";

                    }
                    scheduler_code += `</table>`;
                    $("#schedulerblock").html(scheduler_code);

                    var script = document.createElement("script");
                    script.innerHTML = scheduler_scripts;
                    document.body.appendChild(script);
                    $("#scriptlist").append(`<div class="cheatlayer btn-group" style="width:100%">
                    <button id='startlayer' class='cheatlayer' style="display:none;position:fixed; bottom:40px; right:0px;width:20%;" style='cheatlayer'>+ New Cheat</button>

                    <button id='nocodelayer' class='cheatlayer' style="position:fixed; bottom:0px; right:0px;width:90px;" style='cheatlayer'>No-Code</button>
                    <button id='codelayer' class='cheatlayer'  style="position:fixed; bottom:0px; right:90px;width:90px;" style='cheatlayer'>Code</button>
                    <button id='websitelayer' class='cheatlayer'style="position:fixed; bottom:0px; right:180px;width:90px;" style='cheatlayer'>Website</button>
                  </div>`);
                    $(document).on('click', '#nocodelayer', function () {
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                        document.getElementById('newnocode').style.display = 'block';
                        document.getElementById('script').style.display = 'none';
                        document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
                        document.getElementById('cheatmenu').style.display = 'block';

                        drawNoCodeContainer()



                    });
                    $(document).on('click', '#codelayer', function () {
                        box.hide();

                        if (window.location.href.includes('cheatlayer')) {

                            if (last_complete == 10) {
                                setTimeout(function () {
                                    introJs().setOptions({
                                        steps: [
                                            {
                                                element: document.querySelector('#filemenu'),
                                                intro: 'Click File, then GPT-3 Code Generator to generate custom automations:'
                                            }]
                                    }).start();
                                }, 1000);
                            }
                        }


                        document.getElementById('newnocode').style.display = 'none';
                        document.getElementById('script').style.display = 'block';
                        document.getElementById('console').style.display = 'block'; document.getElementById('schedulerblock').style.display = 'none';
                        document.getElementById('cheatmenu').style.display = 'block';
                        if (no_code_container.length > 0) {
                            for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                                if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                    leader_lines[kk].remove();
                                    leader_lines[kk] = null;
                                }

                            }
                        }
                        for (var kk = 0; kk < leader_lines.length - 1; kk++) {
                            if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                leader_lines[kk].remove();
                                leader_lines[kk] = null;
                            }

                        }




                        if (window.location.href.includes("chat.openai.com")) {

                        
                                            //Generating GPT-3 code.. Please wait up to 20 seconds//Generated Script id=3
                                            var divs = document.getElementsByTagName('code');
                                            //Loop through divs and find the divs with class that includes "!whitespace-pre"
                                            var chat_code = "";
                                            for (var i = 0; i < divs.length; i++) {
                                                if (divs[i].className.includes("whitespace-pre")) {
                                                    //////console.log(divs[i].innerText);
                                                    //////console.log(divs[i].innerText);
                                                    ////console.log(divs[i].innerText);
                                                    chat_code += divs[i].innerText;
                                                }
                                            }

                                            window.editor = ace.edit("script");
                                            //window.editor.setValue(old_code);
                                            window.editor.setAutoScrollEditorIntoView(true);
                                            window.editor.getSession().setMode("ace/mode/javascript");
                                            window.editor.setTheme("ace/theme/tomorrow");

                                            window.editor.setValue(chat_code);
                                            runScriptEval();


                            //endcode GPT Prompt: Collect all the div on the page with an inner text that includes poop and print them. 
                            //Generating GPT-3 code.. Please 
                        }


                    });
                    $(document).on('click', '#editorOpen', function () {
                        layer++;
                        if (layer % 2 == 0) {
                            document.getElementById('scriptlist').style.height = '10%';
                            document.getElementById('codelayer').style.display = 'none';
                            document.getElementById('websitelayer').style.display = 'none';
                            document.getElementById('nocodelayer').style.display = 'none';

                        } else {
                            document.getElementById('scriptlist').style.height = '100%';

                            document.getElementById('codelayer').style.display = 'block';
                            document.getElementById('websitelayer').style.display = 'block';
                            document.getElementById('nocodelayer').style.display = 'block';
                        }

                    });
                    $(document).on('click', '#websitelayer', function () {




                        document.getElementById('newnocode').style.display = 'none';
                        document.getElementById('script').style.display = 'none';
                        document.getElementById('console').style.display = 'none'; document.getElementById('schedulerblock').style.display = 'none';
                        document.getElementById('cheatmenu').style.display = 'none';
                        if (no_code_container.length > 0) {
                            for (var kk = 0; kk < no_code_container.length - 1; kk++) {
                                if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                    leader_lines[kk].remove();
                                    leader_lines[kk] = null;
                                }

                            }
                        }
                        for (var kk = 0; kk < leader_lines.length - 1; kk++) {
                            if (typeof leader_lines[kk] !== 'undefined' && leader_lines[kk]) {
                                leader_lines[kk].remove();
                                leader_lines[kk] = null;
                            }

                        }
                        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);
                    });
                    // $('HTML').append("<button  style='margin-left:10px;margin-right:10px;' class='cheatlayer cheatlayer runscript'   aria-label='" + (counter) + "' type='button' id='removeC" + (counter) + "' class='cheatlayer cheatlayer close' data-dismiss='alert' aria-label='Play'>X</button>");
                }
            }
        }

        $('HTML').append("<script>   document.getElementById('schedulerblock').style='display:none;z-index:-1000;';document.getElementById('console').style='display:none; z-index:-10000;'; document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;display:none; z-index:-10000;';document.getElementById('script').style='display:none; display:none; z-index:-10000;'; document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;display:none; z-index:-10000;'; showeditor = false;</script>");



        $('HTML').append("<script>showeditor = true;  if(document.getElementById('script')){document.getElementById('script').style='display:none;z-index:100005; opacity:1.0;width: calc(100% - 270px); height:70%; overflow-y:hidden;overflow-x:hidden; position:fixed; left:0px; top:64.5px; font-size:24px; ';}if(document.getElementById('console')){document.getElementById('schedulerblock').style='display:none; background-color:white;color:black;z-index:100005; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:hidden;overflow-x:hidden; position:fixed; left:40%; top:calc(70% + 64.5px); font-size:24px; min-height:calc(30% - 64.5px); background-color:white;';document.getElementById('console').style='display:none; background-color:white;color:black;z-index:100005; opacity:0.8;width: calc(100% - 270px); height:calc(30% - 64.5px); background-color:white; overflow-y:scroll;overflow-x:scroll;     resize:both; position:fixed; left:0px; top:calc(70% + 64.5px); font-size:24px; min-height:calc(30% - 64.5px); background-color:white;';}if(document.getElementById('scriptlist')){document.getElementById('scriptlist').style='-webkit-box-shadow: 5px 5px 20px 5px #000000; box-shadow: 5px 5px 20px 5px #000000;background-color:white;color:black;z-index:1000005; opacity:1.0; width:270px;height:100%; overflow-y:auto;overflow-x:hidden;overflow-x:hidden; position:fixed; right:0px; top:0px;';} if(document.getElementById('nocode')){document.getElementById('nocode').style='display:block;background-color:#FFFFFF; border:1px solid #FFFFFF; border-radius:0px; color:#000000; margin-right:10px; padding:0px 10px 0px 0px;';}</script>");







        ('WHAT');


        window.editor = ace.edit("script");
        window.editor.setValue(old_code);
        window.editor.setAutoScrollEditorIntoView(true);
        window.editor.getSession().setMode("ace/mode/javascript");
        window.editor.setTheme("ace/theme/tomorrow");
        var langTools = ace.require("ace/ext/language_tools");
        window.editor.setShowPrintMargin(false);
        // window.editor.setValue('//alert("Hello World!")');
        // editor.setFontSize(24); // will set font-size: 10px

        window.editor.setOptions({
            wrap: true,   // wrap text to view
            highlightSelectedWord: true,
            enableLiveAutocompletion: true,
            useWorker: false // <<----- USE THIS OPTION TO DISABLE THE SYNTAX CHECKER,


        });
        window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);

        editor.setAutoScrollEditorIntoView(true);
        editor.resize();


        if (true) {
            window.editor.setValue(old);
            //if(document.getElementById('scriptlist').style.display != "none"){
            document.getElementById('schedulerblock').style.display = 'none';


            window.editor.renderer.updateFull(); window.editor.resize(); setTimeout(function () { window.editor.renderer.updateFull(); window.editor.resize(); }, 2000);


            //   }
        }

        GotScripts = true;

        redrawList("");
    }
}
if (true) {







}
